---
subtitle: TFM - Máster de estadística aplicada para la ciencia de datos con R software.
author: Teodoro José Martínez Arán
editor: source
date: 2024-08-13
date-format: iso
toc: true
toc-depth: 4
toc-location: right
toc-title: Tabla de contenidos
number-sections: true
number-offset: [1,1,1,1]
---

## Anexo A - Código de R utilizado en el análisis {.unnumbered}

## Configuración

### 00a. Definir una configuración de R y RStudio que garantice la reproductibilidad de los resultados

Para facilitar la reproductibilidad del análisis y la coherencia de los resultados obtenidos en distintos equipos, se han incorporado las siguientes opciones de configuración:

-   Establecer una semilla aleatoria para el análisis: `set.seed = 2024`
-   Impedir que los números grandes se muestren con notación científica: `scipen = 999`

```{r Configuracion}
#| code-fold: true

### 00a. Configuración de R y RStudio
#### Establecer una semilla aleatoria para el análisis
set.seed(2024)

#### Impedir que los números grandes se muestren con notación científica
options(scipen = 999)
```

### 00b. Instalar los paquetes de R necesarios para el análisis

::: {.callout-note title="Referencias de los paquetes utilizados en el análisis" collapse="true"}
Los paquetes utilizados en el análisis han sido: BiocManager v. 1.30.23 [@BiocManager], cluster v. 2.1.6 [@cluster], clustertend v. 1.7 [@clustertend], corrplot v. 0.92 [@corrplot2021], data.table v. 1.15.4 [@datatable], DataExplorer v. 0.8.3 [@DataExplorer], devtools v. 2.4.5 [@devtools], dlookr v. 0.6.3 [@dlookr], factoextra v. 1.0.7 [@factoextra], FeatureImpCluster v. 0.1.5 [@FeatureImpCluster], flexclust v. 1.4.2 [@flexclust2006a; @flexclust2006c; @flexclust2006d; @flexclust2010b; @flexclust2018e], flextable v. 0.9.6 [@flextable], fpc v. 2.2.12 [@fpc], GGally v. 2.2.1 [@GGally], ggrepel v. 0.9.5 [@ggrepel], ggside v. 0.3.1 [@ggside], ggstatsplot v. 0.12.4 [@ggstatsplot], here v. 1.0.1 [@here], Hmisc v. 5.1.3 [@Hmisc], kableExtra v. 1.4.0 [@kableExtra], mice v. 3.16.0 [@mice], moments v. 0.14.1 [@moments], naniar v. 1.1.0 [@naniar], NbClust v. 3.0.1 [@NbClust], performance v. 0.12.2 [@performance], psych v. 2.4.6.26 [@psych], rmarkdown v. 2.27 [@rmarkdown2018; @rmarkdown2020; @rmarkdown2024], SmartEDA v. 0.3.10 [@SmartEDA], summarytools v. 1.0.1 [@summarytools], tidyverse v. 2.0.0 [@tidyverse].
:::

Los paquetes de R necesarios para este análisis están recogidos en el objeto `paquetesNecesariosAnalisis`, y han sido los siguientes:

```{r}
#| code-fold: true

# Instalación de paquetes necesarios para el análisis
# Listado de paquetes a instalar

## Paquetes de CRAN
libsCran <- c(
  'arsenal',     # An Arsenal of 'R' Functions for Large-Scale Statistical Summaries
  'BiocManager', # Access the Bioconductor Project Package Repository
  'clustertend', # Check the Clustering Tendency
  'DataExplorer',# Automate Data Exploration and Treatment
  'data.table',  # Extension of 'data.frame'
  'devtools',    # Tools to Make Developing R Packages Easier
  'dlookr',      # Tools for Data Diagnosis, Exploration, Transformation
  'dplyr',       # A Grammar of Data Manipulation
  'factoextra',  # Extract and Visualize the Results of Multivariate Data Analyses
  'flexclust',   # Flexible Cluster Algorithms
  'flextable',   # Functions for Tabular Reporting
  'FeatureImpCluster', # Feature Importance for Partitional Clustering
  'fpc',         # Flexible Procedures for Clustering
  'GGally',      # Extension to 'ggplot2'
  'ggplot2',     # Create Elegant Data Visualisations Using the Grammar of Graphics
  'ggpubr',      # 'ggplot2' Based Publication Ready Plots
  'ggside',      # Side Grammar Graphics
  'ggrepel',     # Automatically Position Non-Overlapping Text Labels with 'ggplot2'
  'grateful',    # Facilitate Citation of R Packages
  'here',        # A Simpler Way to Find Your Files
  'kableExtra',  # Construct Complex Table with 'kable' and Pipe Syntax
  'mice',        # Multivariate Imputation by Chained Equations
  'moments',     # Moments, Cumulants, Skewness, Kurtosis and Related Tests
  'naniar',      # Data Structures, Summaries, and Visualisations for Missing Data
  'NbClust',     # Determining the Best Number of Clusters in a Data Set
  'plotly',      # Create Interactive Web Graphics via 'plotly.js'
  'psych',       # Procedures for Psychological, Psychometric, and Personality Research
  'rstantools',  # Tools for Developing R Packages Interfacing with 'Stan'
  'SmartEDA',    # Summarize and Explore the Data
  'summarytools',# Tools to Quickly and Neatly Summarize Data
  'tidycensus',  # Load US Census Boundary and Attribute Data as 'tidyverse' and 'sf'-Ready Data Frames
  'tidyr',       # Tidy Messy Data
  'tinytex',     # Helper Functions to Install and Maintain TeX Live
  'usmap',       # US Maps Including Alaska and Hawaii
  'usmapdata',   # Mapping Data for 'usmap' Package
  'utils'        # Various Programming Utilities
  )
  
## Paquetes de BioConductor
libsBioconductor <- c(
  'graph'
  )
  
## Paquetes en repositorios de Github
libsGitHub <- c(
  'tinytex'
  )
reposGitHub <- c(
  'rstudio/tinytex'
  )
paquetesGitHub <- data.frame(
  libsGitHub,
  reposGitHub
  )
  
# Identificación de los paquetes que ya están instalados
isInstalledLibCran   <- libsCran   %in% rownames(utils::installed.packages())
isInstalledLibGitHub <- libsGitHub %in% rownames(utils::installed.packages())
isInstalledLibBioConductor <-
  libsBioconductor %in% rownames(utils::installed.packages())
    
# Instalación de los paquetes faltantes
## Paquetes CRAN
if (any(isInstalledLibCran == F)) {
  utils::install.packages(libsCran[!isInstalledLibCran])
  }
  
## Paquetes Bioconductor
if (any(isInstalledLibBioConductor == F)) {
  BiocManager::install(libsBioconductor[!isInstalledLibBioConductor], ask = F)
  }
  
## Paquetes en repositorios GitHub
if (any(isInstalledLibGitHub == F)) {
  sapply(
    paquetesGitHub$reposGitHub[!isInstalledLibGitHub],
    devtools::install_github,
    upgrade = 'ask',
    build_manual = TRUE,
    build_vignettes = TRUE
    )
  }
 

## Elaboración de un data.frame con la lista de paquetes instalados
### Listado de paquetes gestionados
libs <- c(libsCran, libsBioconductor, libsGitHub) |> unique()
libs <- libs[order(libs)]
  
### Dataframe de paquetes
paquetes <- sapply(
  libs,
  utils::packageDescription,
  fields = c(
    'Package',
    'Title',
    'Version',
    'Author',
    'Description',
    'License',
    'URL',
    'BugReports',
    'Depends',
    'Imports',
    'Suggests',
    'Date/Publication'
    )
) |>
as.data.frame()
  
paquetesNecesariosAnalisis <- do.call(rbind.data.frame, paquetes)


## (OPCIONAL) - Muestra resultado en salida de quarto
### Eliminamos los saltos de carro que incluyen algunos títulos de paquetes '\n'
paquetesNecesariosAnalisis$Title <- gsub(
  pattern = "\n",
  replacement = " ",
  x = paquetesNecesariosAnalisis$Title
)

paquetesNecesariosAnalisis |> 
  dplyr::select(
    Title,
    Version
    ) |> 
  kableExtra::kable()

```

```{r}
#| code-fold: true
#| output: false

## (OPCIONAL) - Crear una bibliografía de los paquetes de R utilizados
grateful::cite_packages(
  out.dir = here::here('notebooks'),
  out.format = 'Rmd')

```

#### Limpieza de objetos temporales del subproceso

```{r}
#| code-fold: true

## Limpieza
rm(list = c(
  'isInstalledLibCran',
  'isInstalledLibGitHub',
  'isInstalledLibBioConductor',
  'libs',
  'libsCran',
  'libsBioconductor',
  'libsGitHub',
  'reposGitHub',
  'paquetesGitHub',
  'paquetes'
  )
  )
```

## Ingesta

### 01a - Identificar los datos necesarios para el análisis y sus fuentes

Para el análisis se utilizaron los siguientes datos:

| Datos                                                           | Fuente                                                                                                                                                                      | Justificación                                                                        |
|-----------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|
| 1 - Indicadores de salud relacionados con el consumo de alcohol | [U.S. Chronic Disease Indicators (CDI), 2023 Release](https://data.cdc.gov/Chronic-Disease-Indicators/U-S-Chronic-Disease-Indicators-CDI-2023-Release/g4ie-h725/about_data) | Datos necesarios para hacer el análisis de agrupación (variables predictoras)        |
| 2 - Tasas de mortalidad relacionadas con el consumo de alcohol  | [U.S. Underlying Cause of Death, 2018-2022, Single Race](https://wonder.cdc.gov/ucd-icd10-expanded.html)                                                                    | Datos de la variable respuesta a predecir en el análisis de regresión                |
| 3 - Códigos FIPS de los estados de EEUU                         | [Dataset with FIPS codes for US states and counties](https://search.r-project.org/CRAN/refmans/tidycensus/html/fips_codes.html)                                             | Tabla maestra con los códigos FIPS identificativos de los estados y condados de EEUU |

#### 1 - Indicadores de salud relacionados con el consumo de alcohol

[El conjunto de datos *Cronic Disease Indicators (CDI)*](https://data.cdc.gov/resource/g4ie-h725.csv) ha sido elaborado por el *Centres of Disease Control* de USA. Contiene un conjunto de 124 indicadores desarrollados por consenso entre todos los estados miembros de US, utilizado para definir, recoger e informar sobre las enfermedades crónicas de manera uniforme entre distintos estados y territorios. Los indicadores se agrupan en 17 áreas de interés. Puede consultarse una descripción detallada de los indicadores que contiene en el artículo [Indicators for Chronic Disease Surveillance — United States, 2013](https://www.cdc.gov/mmwr/preview/mmwrhtml/rr6401a1.htm) [@holt2015]. Para una descripción más detallada, puede consultarse la [web del CDI](www.cdc.gov/cdi).

Para nuestro análisis, se seleccionó el subconjunto de indicadores del área de interés `Alcohol`.

::: {.callout-note title="Áreas de interés del conjunto de datos CDI del CDC" collapse="true"}
Además de las áreas de interés analizadas en el análisis, existen otras áreas de interés en el dataset:

| Topic area                                                                                                                        | Justification                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
|-----------------------------------------------------------------------------------------------------------------------------------||
| [Alcohol](https://www.cdc.gov/cdi/indicator-definitions/alcohol.html)                                                             | About 178,000 people die from excessive alcohol use each year in the United States. Excessive drinking includes binge drinking, heavy drinking, and any drinking during pregnancy or by people younger than 21. Policies that make alcohol less available and less affordable can prevent excessive drinking and related harms. Individuals, organizations, communities, and states can support proven solutions to reduce alcohol-related harms and improve health and safety.                                                                                                                                                                    |
| [Arthritis](https://www.cdc.gov/cdi/indicator-definitions/arthritis.html)                                                         | About 53 million U.S. adults have arthritis. That number is expected to increase as people live longer. Arthritis is a general term for conditions that affect the joints, tissues around the joint, and other connective tissues. Managing arthritis symptoms is important to reduce pain, prevent or delay disability, and improve overall quality of life. Public health professionals and others can help build awareness of proven self-management strategies to reduce arthritis pain so patients can pursue the activities that are important to them.                                                                                      |
| [Asthma](https://www.cdc.gov/cdi/indicator-definitions/asthma.html)                                                               | About 25 million U.S. children and adults have asthma, which kills over 3,500 people each year. Asthma affects the lungs, causing wheezing, breathlessness, chest tightness, and coughing. CDC's National Asthma Control Program (NACP) helps people control and manage their asthma for better health. Public health and other professionals can play a role in asthma-related surveillance, public education, and provider training.                                                                                                                                                                                                             |
| [Cancer](https://www.cdc.gov/cdi/indicator-definitions/cancer.html)                                                               | Cancer is the second leading cause of death in the United States, causing 1 in every 6 deaths. We can reduce cancer cases and deaths by limiting behavioral and environmental risks, making screening and treatment available to all, supporting medically underserved populations, and improving quality of life for those who have survived cancer. The Community Preventive Services Task Force recommends several patient- and provider-focused interventions to increase screening for breast, cervical, and colorectal cancers.                                                                                                              |
| [Cardiovascular Disease](https://www.cdc.gov/cdi/indicator-definitions/cardiovascular-disease.html)                               | Heart disease is the number one cause of death and disability in the United States. Cardiovascular disease not only includes heart disease, but also stroke, heart failure, and atrial fibrillation. Common behaviors and health conditions put people at risk, like smoking, unhealthy diet, inactivity, excessive alcohol, high blood pressure, high cholesterol, and obesity. We can prevent cardiovascular disease and reduce related death and disability with lifestyle changes, control of risk factors, and timely, effective treatment.                                                                                                   |
| [Chronic Kidney Disease](https://www.cdc.gov/cdi/indicator-definitions/chronic-kidney-disease.html)                               | More than 1 in 7 U.S. adults has chronic kidney disease (CKD), though most do not know it. CKD is caused by damaged kidneys that cannot properly filter blood, causing fluids and waste to build up in the body. CKD usually gets worse over time, but treatment and lifestyle changes can slow it down. Public health strategies—from public and provider education, to monitoring CKD and its risk factors—can promote kidney health.                                                                                                                                                                                                            |
| [Chronic Obstructive Pulmonary Disease](https://www.cdc.gov/cdi/indicator-definitions/chronic-obstructive-pulmonary-disease.html) | Chronic obstructive pulmonary disease (COPD) is 1 of the top 10 causes of death in the United States. Nearly 16 million U.S. adults have COPD, and many more do not know they have it. COPD prevents airflow to the lungs, causing breathing problems. There is no cure for COPD, but it can be managed and treated. Public health professionals and others can help build awareness of COPD and support prevention, early diagnosis, treatment, and management strategies.                                                                                                                                                                        |
| [Cognitive Health Caregiving](https://www.cdc.gov/cdi/indicator-definitions/cognitive-health-caregiving.html)                     | About 1 in 10 adults (45 and older) reports worsening memory loss (or cognitive decline) and another 1 in 4 reports caring for someone who has a cognitive impairment. Dementias, like Alzheimer's disease, start with mild memory loss and can lead to an inability to carry on conversations or respond to one's environment. Caregiving can be rewarding, but it can also put a burden on caregivers, at the risk of their own health. As our aging population grows, so does the need for public health strategies to reduce the impact of dementias and raise awareness of caregiving as a public health issue.                               |
| [Diabetes](https://www.cdc.gov/cdi/indicator-definitions/diabetes.html)                                                           | About 38 million U.S. adults have diabetes, and 1 in 5 of them don't know it. Diabetes is a long-lasting condition that can lead to serious disease and death over time. There is no cure for diabetes, but we can prevent or manage the most common type (type 2) by eating healthy, being active, and keeping a healthy weight. Public health efforts can offer proven lifestyle change programs to reduce diabetes risk for people.                                                                                                                                                                                                             |
| [Disability](https://www.cdc.gov/cdi/indicator-definitions/disability.html)                                                       | More than 1 in 4 U.S. adults (27%) has a disability. A disability is any condition of the body or mind that makes it more difficult to do certain tasks. People with disabilities are more likely to report poor health than those without disabilities. We can best serve people with disabilities by including them in all health care, health promotion, and disease prevention programs to help them stay active, healthy, and thrive.                                                                                                                                                                                                         |
| [Health Status](https://www.cdc.gov/cdi/indicator-definitions/health-status.html)                                                 | About 1 in 6 U.S. adults report fair or poor health, which is notable since self-rated health can predict hospitalization and death. Health — including physical, mental, emotional, and functional health — is fundamental for everyday living. We can help improve overall health by addressing chronic disease risk factors and social determinants of health, and by identifying and linking those in poor health to community resources.                                                                                                                                                                                                      |
| [Immunization](https://www.cdc.gov/cdi/indicator-definitions/immunization.html)                                                   | Each year in the United States, many people get diseases that vaccines could have prevented. Vaccines help the body create proteins that fight off infections (called antibodies), protecting us from potentially life-threatening diseases. Yet some children and adults do not get their recommended vaccines. The types of vaccines needed are based on age, and in some cases, certain chronic diseases or risk factors.                                                                                                                                                                                                                       |
| [Maternal Health](https://www.cdc.gov/cdi/indicator-definitions/maternal-health.html)                                             | Maternal health refers to women's health and well-being during pregnancy, childbirth, and postpartum (after childbirth). Health problems—like diabetes, high blood pressure, and depression—can arise before, during or after pregnancy, putting the mother's or infant's health at risk. Alcohol and tobacco use during pregnancy can also harm the mother's and baby's health. Access to good health care can help women adopt healthier habits, prevent and address complications, and improve pregnancy and postpartum health.                                                                                                                 |
| [Mental Health](https://www.cdc.gov/cdi/indicator-definitions/mental-health.html)                                                 | Nearly 1 in 4 U.S. adults had a mental illness in the past year, and almost 3 in 10 high school students reported poor mental health. Mental health—which includes emotional, psychological, and social well-being—is important for overall health and well-being. Mental health conditions (like depression) increase the risk of chronic conditions, which in turn can increase the risk of mental health conditions. Public health strategies can address these conditions and promote mental health and emotional well-being.                                                                                                                  |
| [Nutrition, Physical Activity, and Weight Status](https://www.cdc.gov/cdi/indicator-definitions/npao.html)                        | Poor nutrition and physical inactivity increase the risk of chronic conditions like obesity, depression, type 2 diabetes, heart disease, and some cancers—which can lead to disability and premature death. Fewer than 1 in 10 children and adults eat their recommended vegetables. A quarter of adults (25%) and even fewer adolescents (16%) meet U.S. physical activity guidelines. As many as 40% of adults and 20% of adolescents have obesity. Public health approaches, including surveillance, education, policy and environmental strategies, and resources are needed to make healthy eating and active living accessible for everyone. |
| [Older Adults](https://www.cdc.gov/cdi/indicator-definitions/older-adults.html)                                                   | The U.S. population is aging, with almost a quarter of the population expected to be 65 or older by 2060. Aging increases the risk of chronic diseases like dementia, heart disease, type 2 diabetes, arthritis, and cancer. Older adults are also more vulnerable to severe illness from infections, including flu and pneumonia. Effective strategies for healthy aging are needed to improve the length and quality of life of older adults, and their ability to live independently.                                                                                                                                                           |
| [Oral Health](https://www.cdc.gov/cdi/indicator-definitions/oral-health.html)                                                     | Nearly all Americans have had tooth decay in their lifetime. Left untreated, oral diseases can cause severe pain, infections, tooth loss, and (rarely) even death. Poor oral health limits a person's ability to eat, learn, and work. It unevenly affects members of racial and ethnic groups and those with low income and education. Most oral diseases can be prevented by limiting risks like tobacco, alcohol, and sugary foods and drinks. Public health strategies—like community water fluoridation and school sealant programs—are safe, cost-effective ways proven to prevent cavities and improve oral health equity.                  |
| [Sleep](https://www.cdc.gov/cdi/indicator-definitions/sleep.html)                                                                 | About one-third of U.S. adults and children (under 14) and three-quarters of high schoolers do not get enough sleep. Insufficient sleep is linked to increased risk of anxiety, depression, obesity, heart disease, injury, and other serious conditions. We can promote sleep health through research and surveillance, public and provider education, clinical guidance, and traffic safety education.                                                                                                                                                                                                                                           |
| [Social Determinants of Health](https://www.cdc.gov/cdi/indicator-definitions/sdoh.html)                                          | Social determinants of health (SDOH) are nonmedical factors and conditions in our environment that influence health, well-being, and quality of life. They include things like economic stability; our social, community, and built environments; and access to quality health care and education. Addressing differences in SDOH can advance health equity so everyone has the opportunity for optimal health. Action and collaboration across sectors (e.g., public health, transportation, education, housing, health care) and from public, private, and community agencies are needed to address SDOH.                                        |
| [Student Health](https://www.cdc.gov/cdi/indicator-definitions/student-health.html)                                               | Youth risk behaviors—like physical inactivity, unhealthy diet, and tobacco, alcohol, and other drug use—are linked to lower academic achievement and poorer mental and physical health. On the other hand, healthy students are better learners, and academic achievement bears a lifetime of health benefits. With 8 hours a day of direct contact with students, U.S. schools are uniquely positioned to promote student health behaviors and reduce unhealthy behaviors for better health and well-being. They can do this using strategies from the Whole School, Whole Community, Whole Child model.                                          |
| [Tobacco](https://www.cdc.gov/cdi/indicator-definitions/tobacco.html)                                                             | Cigarette smoking is the leading preventable cause of disease, death, and disability in the United States. Smoking and secondhand smoke exposure cause over 480,000 U.S. deaths each year. Nearly 12% of U.S. adults currently smoke cigarettes and 10% of middle and high school students currently use a tobacco product. Increasing the use of proven tobacco control strategies can reduce tobacco use and related diseases.                                                                                                                                                                                                                   |
:::

#### 2 - Tasas de mortalidad relacionadas con el consumo de alcohol

El conjunto de datos [Underlying Cause of Death](https://wonder.cdc.gov/ucd-icd10-expanded.html) contiene datos de mortalidad y población para todos los condados de EEUU. Los datos provienen de los certificados de defunción de los residentes de EEUU. Cada certificado de muerte identifica una única causa de muerte, junto con un conjunto de datos demográficos.

Para nuestro análisis, se seleccionaron los datos de mortalidad por alcohol, ajustada por edad, estado y año. Se descargaron además, los datos globales, para poder comparar la media de cada uno de los niveles de las variables con la media global.

::: {.callout-note title="Configuración de la herramienta de descarga de datos WONDER del CDC para obtener el conjunto de datos utilizado en el análisis" collapse="true"}
Los datos para el análisis se obtuvieron con la siguiente configuración de la herramienta de búsqueda [CDC WONDER](https://wonder.cdc.gov/controller/datarequest/D158):

| Sección                                        | Subsección              | Parámetro                                                                                                                                                 | Configuración                            |
|------------------------------------------------|-------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------|
| 1\. Organize table layout                      | Group Results By        | · `Group Results By`<br>· `And By` <br>· `And By`                                                                                                         | State<br>Year<br>Gender                  |
|                                                | Default Measures        | · `Deaths`<br> · `Population`<br>· `Crude Rate`                                                                                                           | TRUE<br>TRUE<br>TRUE                     |
|                                                | For Crude Rates         | · `95% Confidence Interval`<br>· `Standard Error`                                                                                                         | TRUE<br>TRUE                             |
|                                                | Age Adjusted Rate       | · `Age Adjusted Rate`<br>· `95% Confidence Interval`<br>· `Standard Error`                                                                                | TRUE<br>TRUE<br>TRUE                     |
|                                                | Total Deaths            | · `Percent of Total Deaths`                                                                                                                               | TRUE                                     |
|                                                | Additional Rate Options | · `Calculate Rates Per`<br>· `Standard Population`                                                                                                        | 100,000<br> 2000 U.S. Std. Population    |
| 2\. Select location                            | Grouping method         | · `Click a button to choose locations by US-Mexico Border Region, Border State Area, State, Census Region or HHS Region`                                  | States                                   |
|                                                | Selected codes          | · `Browse or search to find items in the States Finder Tool, then highlight the items to use for this request.`                                           | *All* (The United States)                |
|                                                | Urbanization            | · `Pick between`                                                                                                                                          | 2013 Urbanization, All categories        |
| 3\. Select demographics                        | Age Groups              | · `Pick between`                                                                                                                                          | All ages                                 |
|                                                | Gender                  | · `Gender`                                                                                                                                                | All Genders                              |
|                                                | Hispanic origin         | · `Hispanic origin`                                                                                                                                       | All Origins                              |
|                                                | Single Race             | · `Pick between`                                                                                                                                          | Single Race 6 , All Races                |
| 4\. Select year and month                      |                         | · `Year/Month`                                                                                                                                            | *All* (All Dates)                        |
| 5\. Select weekday, autopsy and place of death | Weekday                 | · `Weekday`                                                                                                                                               | All Weekdays                             |
|                                                | Autopsy                 | · `Autopsy`                                                                                                                                               | All values                               |
|                                                | Place of death          | · `Place of death`                                                                                                                                        | All places                               |
| 6\. Select cause of death                      | Grouping method         | · `Click a button to select ICD codes by Chapters or by Groups`                                                                                           | Drug/Alcohol Induced Causes              |
|                                                | Selected codes          | · `Browse or search to find items in the Drug/Alcohol Induced Causes Finder Tool, then highlight the items to use for this request`                       | Alcohol-induced causes                   |
| 7\. Other options                              |                         | · `Export results`<br>· `Show totals`<br>· `Show Zero values`<br>· `Show supressed values`· <br>· `Precision (decimal places)`<br>· `Data Access Timeout` | TRUE<br>FALSE<br>TRUE<br>TRUE<br>2<br>10 |
:::

#### 3 - Códigos FIPS de los estados de EEUU

Para garantizar una adecuada estandarización de los datos, se utilizó como tabla maestra el dataset `fips_states` del paquete **tidycensus** [Dataset with FIPS codes for US states and counties](https://search.r-project.org/CRAN/refmans/tidycensus/html/fips_codes.html).

### 01b - Definir el método y la configuración de la ingesta

| Conjunto de datos                                               | Método                                                                                                     | Configuración                                                  |
|-----------------------------------------------------------------|------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------|
| 1 - Indicadores de salud relacionados con el consumo de alcohol | Ingesta directa desde origen con `data.table::fread()`                                                     | Opciones por defecto de la función, salvo `encoding = "UTF-8"` |
| 2 - Tasas de mortalidad relacionadas con el consumo de alcohol  | · Descarga del conjunto de datos crudo con la configuración especificada<br>· Ingesta desde descarga local | `encoding = "UTF-8"`<br> `header = TRUE`<br>`nrow = 306`       |
| 3 - Códigos FIPS de los estados de EEUU                         | Carga directa con `data()`                                                                                 | Opciones por defecto de la función                             |

### 01c - Crear los *data.frame* de datos crudos

Se crearon los siguientes *data.frame* de datos crudos:

| Objeto                | Fuente                                                                                                     | Descripción                                                                                                                                                                     |
|-----------------------|------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `rawCdiAlcohol`       | [*Chronic disease indicators (CDI), CDC*, 2023](https://data.cdc.gov/resource/g4ie-h725.csv)               | Evaluación de los indicadores de enfermedades crónicas relacionados con el consumo excesivo de alcohol, ajustados por sexo y edad, durante el periodo 2010-21, por estado y año |
| `rawMortalityAlcohol` | [Underlying Cause of Death, 2018-2022, Single Race](https://wonder.cdc.gov/wonder/help/ucd-expanded.html#) | Tasa de mortalidad relacionada con alcohol, ajustada por sexo y edad, durante el periodo 2018-22, por estado y año                                                              |
| `rawFipsCodes`        | Paquete **tidycensus**                                                                                     | Tabla maestra de códigos para estados y condados de EEUU                                                                                                                        |

::: {.callout-note title="1 - Indicadores de salud relacionados con el consumo de alcohol - `rawCdiAlcohol`" collapse="true"}
```{r}
# Indicadores de salud relacionados con el consumo de alcohol - `rawCdiAlcohol`
rawCdiAlcohol <- data.table::fread(
  file = here::here(
    "data", "raw", "US_Chronic_Disease_Indicators_CDI_2023_Release_20240716.csv"
    ),
  encoding = "UTF-8"
  ) |> 
  # Filtrado de indicadores de la dimensión 'Alcohol'
  dplyr::filter(Topic == "Alcohol") 
```
:::

::: {.callout-note title="2 - Tasas de mortalidad relacionadas con el consumo de alcohol - `rawUnderlyingCauseOfDeathAlcohol`" collapse="true"}
[Documentación del dataset](https://wonder.cdc.gov/wonder/help/ucd-expanded.html#)

```{r}
#| code-overflow: wrap

# Tasas de mortalidad relacionadas con el consumo de alcohol por sexo y estado- `rawUnderlyingCauseOfDeathAlcohol`
rawUnderlyingCauseOfDeathAlcohol <- data.table::fread(
  here::here(
    'data', 'raw', 'Underlying Cause of Death, 2018-2022, Single Race.txt'
    ),
  encoding = "UTF-8",
  header = TRUE,
  nrow = 817  # Se ingestan únicamente las observaciones, y se desprecian los comentarios
) 

```
:::

::: {.callout-note title="3 - Códigos FIPS de los estados de EEUU `rawFipsCodes`" collapse="true"}
```{r}

# Códigos FIPS de los estados de EEUU - `fips_codes`
data("fips_codes", package = "tidycensus")
rawFipsCodes <- fips_codes # Normalización del nombre del data.frame
rm(fips_codes)
```
:::

### 01d - Validar la fase de ingesta

En la validación de la fase de ingesta se realizaron las siguientes actividades:

-   Verificar la completitud de la ingesta `head()`, `tail()`, `dim()`
-   Normalizar los nombres de las variables
-   Comprobar la estructura de los *data.frame* (`str()`)
-   Características generales del *data.frame*

#### 1 - Validación de `rawCdiAlcohol`

| Dimensión                             | Evaluación                                                                                                                    |
|---------------------------------------|-------------------------------------------------------------------------------------------------------------------------------|
| Completitud                           | Ingesta correcta                                                                                                              |
| Normalización del nombre de variables | No es necesaria                                                                                                               |
| Estructura del *data.frame*           | Algunas variables deben convertirse a tipo `factor`                                                                           |
| Resumen del *data.frame*              | Existen algunas variables innecesarias (sin datos, o con todos los valores iguales)<br>Hay valores faltantes dispersos (`NA`) |

::: {.callout-note title="Completitud de la ingesta (`head()`, `tail()`, `dim()`)" collapse="true"}
La ingesta se ha realizado correctamente, con el número de filas y variables esperado.

```{r}
# Verificación de que se han ingestado correctamente las primeras filas
head(rawCdiAlcohol)
# Verificación de que se han ingestado correctamente las últimas filas
tail(rawCdiAlcohol)
# Valoración del número de filas y columnas ingestadas
dim(rawCdiAlcohol)
```
:::

::: {.callout-note title="Normalización de los nombres de las variables" collapse="true"}
En nuestro *data.frame* las variables del dataset original tenían un nombre normalizado siguiendo el estándar [PascalCase](https://en.wikipedia.org/wiki/Camel_case), por lo que no fue necesario renombrarlas.

```{r}
#| code-fold: true
#### Normalización de los nombres de las variables
(rawVarNamesCdi <- names(rawCdiAlcohol))
```
:::

::: {.callout-note title="Estructura del *data.frame* (`str()`)" collapse="true"}
Deben convertirse algunas variables al tipo `factor`.

```{r}
#| code-fold: true
#### Comprobar la estructura de los *data.frame* (`str()`)
str(rawCdiAlcohol)
```
:::

::: {.callout-note title="Resumen del *data.frame* " collapse="true"}
Deben convertirse algunas variables al tipo `factor` y `numeric`.

-   Existen algunas variables innecesarias (sin datos, o con todos los valores iguales)
-   Hay valores faltantes dispersos (`NA`)

```{r}
#| code-fold: true
#### Explorar las características generales de los datos ingestados
summary(rawCdiAlcohol)
```
:::

#### 2 - Validación de `rawUnderlyingCauseOfDeathAlcohol`

| Dimensión                             | Evaluación                                                                                                       |
|---------------------------------------|------------------------------------------------------------------------------------------------------------------|
| Completitud                           | Faltan datos para algunos estados en algunos años                                                                |
| Normalización del nombre de variables | · Los nombres de las variables del dataset original no están normalizados.<br>· Deben renombrarse las variables. |
| Estructura del *data.frame*           | · Algunas variables deben convertirse a tipo `factor`<br>· Alguna variable debe convertirse a tipo `numeric`     |
| Resumen del *data.frame*              | · Debe convertirse a numérico el valor `% of Total Deaths`<br>· Hay valores faltantes dispersos (`NA`)           |

::: {.callout-note title="Completitud de la ingesta (`head()`, `tail()`, `dim()`)" collapse="true"}
Faltan datos para algunos de los estaos en algunos años.

```{r}
# Verificación de que se han ingestado correctamente las primeras filas
head(rawUnderlyingCauseOfDeathAlcohol)
# Verificación de que se han ingestado correctamente las últimas filas
tail(rawUnderlyingCauseOfDeathAlcohol)
# Valoración del número de filas y columnas ingestadas
dim(rawUnderlyingCauseOfDeathAlcohol)

```
:::

::: {.callout-note title="Normalización de los nombres de las variables" collapse="true"}
Los nombres de las variables del dataset original no están normalizados. Deben renombrarse las variables.

```{r}
#| code-fold: true
## Guardar los nombres de variable originales
(rawVarNamesCauseOfDeath <- names(rawUnderlyingCauseOfDeathAlcohol))

```
:::

::: {.callout-note title="Estructura del *data.frame* (`str()`)" collapse="true"}
-   Deben convertirse algunas variables al tipo `factor`, y alguna variable debe convertirse a tipo `numeric`.

```{r}
#| code-fold: true
#### Comprobar la estructura de los *data.frame* (`str()`)
str(rawUnderlyingCauseOfDeathAlcohol)
```
:::

::: {.callout-note title="Resumen del *data.frame* " collapse="true"}
-   Debe convertirse a numérico el valor `% of Total Deaths`
-   Hay valores faltantes dispersos (`NA`)

```{r}
#| code-fold: true
#### Explorar las características generales de los datos ingestados
summary(rawUnderlyingCauseOfDeathAlcohol)
```
:::

#### 3 - Validación de `rawFipsCodes`

| Dimensión                             | Evaluación                                           |
|---------------------------------------|------------------------------------------------------|
| Completitud                           | Ingesta correcta                                     |
| Normalización del nombre de variables | Debe convertirse a Pascal Case                       |
| Estructura del *data.frame*           | Deben convertirse algunas variables al tipo `factor` |
| Resumen del *data.frame*              | Sin problemas adicionales                            |

::: {.callout-note title="Completitud de la ingesta (`head()`, `tail()`, `dim()`)" collapse="true"}
No hay problemas con la completitud de la ingesta

```{r}
# Verificación de que se han ingestado correctamente las primeras filas
head(rawFipsCodes)
# Verificación de que se han ingestado correctamente las últimas filas
tail(rawUnderlyingCauseOfDeathAlcohol)
# Valoración del número de filas y columnas ingestadas
dim(rawUnderlyingCauseOfDeathAlcohol)
```
:::

::: {.callout-note title="Normalización de los nombres de las variables" collapse="true"}
Los nombres de las variables del dataset original están en formato [snake_case](https://es.wikipedia.org/wiki/Snake_case). Se convierten a formato Pascal Case, para mantener la coherencia con el resto de dataframes

```{r}
#| code-fold: true
## Guardar los nombres de variable originales
(rawVarNamesrawFipsCodes <- names(rawFipsCodes))
```
:::

::: {.callout-note title="Estructura del *data.frame* (`str()`)" collapse="true"}
-   Deben convertirse algunas variables al tipo `factor`.

```{r}
#| code-fold: true
#### Comprobar la estructura de los *data.frame* (`str()`)
str(rawFipsCodes)
```
:::

::: {.callout-note title="Resumen del *data.frame* " collapse="true"}
Sin hallazgos

```{r}
#| code-fold: true
#### Explorar las características generales de los datos ingestados
summary(rawFipsCodes)
```
:::

| Objeto                             | Descripción del *data.frame*                                                                           | Filas                                      | Columnas                                   |
|------------------------------------|--------------------------------------------------------------------------------------------------------|--------------------------------------------|--------------------------------------------|
| `rawCdiAlcohol`                    | Indicadores de enfermedades crónicas (CDI) del área de interés 'Alcohol', por estado y año (2010-2022) | `r nrow(rawCdiAlcohol)`                    | `r ncol(rawCdiAlcohol)`                    |
| `rawUnderlyingCauseOfDeathAlcohol` | Tasas de mortalidad por Alcohol, por sexo, estado y año (2018-2022)                                    | `r nrow(rawUnderlyingCauseOfDeathAlcohol)` | `r ncol(rawUnderlyingCauseOfDeathAlcohol)` |
| `rawFipsCodes`                     | Maestra de códigos de estados y condados de EEUU                                                       | `r nrow(rawFipsCodes)`                     | `r ncol(rawFipsCodes)`                     |

```{r}
#| output: false
#| code-fold: true

# Copia de seguridad de los ficheros crudos
saveRDS(
  object = rawCdiAlcohol,
  file = here::here('data', 'raw', 'rawCdiAlcohol.rds')
)
saveRDS(
  object = rawUnderlyingCauseOfDeathAlcohol,
  file = here::here('data', 'raw', 'rawUnderlyingCauseOfDeathAlcohol.rds')
)
saveRDS(
  object = rawFipsCodes,
  file = here::here('data', 'raw', 'rawFipsCodes.rds')
)
```

## Limpieza

El subproceso incluye las siguientes acciones:

-   02a - Identificar la información sucia, incorrecta, incompleta, imprecisa, irrelevante o incómoda
-   02b - Reingestar, modificar, reemplazar o borrar esta información no deseada de acuerdo a la necesidad

### 02a - Identificación de la información sucia, incorrecta, irrelevante, incompleta, imprecisa o incómoda

#### Validación de `rawCdiAlcohol`

::: {.callout-note title="1- Información sucia" collapse="true"}
##### 1- Información sucia

-   Correcto - No existe ningún problema de suciedad de datos

::: {.callout-caution title="Codificación de caracteres incorrecta" collapse="true"}
###### Codificación de caracteres incorrecta

-   Correcto:
    -   Los datasets se han ingestado en la codificación estándar **UTF-8**
    -   No se han registrado advertencias durante la ingesta
    -   La apariencia de los datos ingestados es correcta
:::

::: {.callout-caution title="Símbolos innecesarios ($, €, %, ... )" collapse="true"}
###### Símbolos innecesarios (\$, €, %, ... )

-   Correcto - Sin problemas en ninguna de las variables
:::

::: {.callout-caution title="Nombre de *data.frame* no acorde a estilo" collapse="true"}
###### Nombre de *data.frame* no acorde a estilo

-   Correcto - Nombre del **data.frame** en formato CamelCase
:::

::: {.callout-caution title="Nombre de variables (columnas) no acorde a estilo" collapse="true"}
###### Nombre de variables (columnas) no acorde a estilo

-   Correcto - Variables con nombre en formato CamelCase
:::

::: {.callout-caution title="Nombre de observaciones (filas) no acorde a estilo" collapse="true"}
###### Nombre de observaciones (filas) no acorde a estilo

-   No aplica - Las filas no tienen nombre
:::
:::

::: {.callout-note title="2 - Datos incorrectos" collapse="true"}
##### 2 - Datos incorrectos

-   Correcto - No se detectan problemas con la corrección de los datos

::: {.callout-caution title="Errores del subproceso de ingesta" collapse="true"}
###### Errores del subproceso de ingesta

-   Correcto - No se detectan problemas de ingesta
:::

::: {.callout-caution title="Datos desestructurados - Más de una variable por columna" collapse="true"}
###### Datos desestructurados - Más de una variables por columna

-   Correcto - Cada columna tiene una única variable
:::

::: {.callout-caution title="Datos desestructurados - Más de una observación por fila" collapse="true"}
###### Datos desestructurados - Más de una observación por fila

-   Correcto - Cada fila tiene una única observación
:::
:::

::: {.callout-note title="3 - Datos irrelevantes" collapse="true"}
##### 3 - Datos irrelevantes

Se han detectado los siguientes problemas con datos irrelevantes:

-   Existen variables con todos los datos faltantes
-   Existen variables con todas las observaciones con el mismo valor
-   Existen variables innecesarias para el análisis (columnas)
-   Existen observaciones innecesarias para el análisis (filas)

::: {.callout-caution title="Variables con todas las observaciones faltantes" collapse="true"}
###### Variables con todas las observaciones faltantes

· Incorrecto: Existen variables con todos los datos faltantes

Se analizó el patrón de datos faltantes de los datos crudos con la función `mice::md.pattern()`

```{r}
#| code-fold: true

mice::md.pattern(rawCdiAlcohol, plot = T, rotate.names = T)
```

Se observó que:

-   Diez variables no tenían ningún valor en ninguna observación
-   En tres de ellas había un elevado número de `NA`.
-   El resto de variables no presentaba este problema
:::

::: {.callout-caution title="Variables con todas las observaciones con el mismo valor" collapse="true"}
###### Variables con todas las observaciones con el mismo valor

· Incorrecto: Existe al menos una variable con todas las observaciones con el mismo valor (`Topic`)
:::

::: {.callout-caution title="Variables innecesarias para el análisis (columnas)" collapse="true"}
###### Variables innecesarias para el análisis (columnas)

· Incorrecto: Varias variables tienen información innecesaria o redundante para el análisis

Las siguientes variables del dataset original no son necesarias:

| Variable                  | Justificación                                          |
|---------------------------|--------------------------------------------------------|
| `YearEnd`                 | Información redundante con `YearStart`                 |
| `DataSource`              | Irrelevante para el análisis                           |
| `DataValue`               | Información redundante con `DataValueAlt`              |
| `DataValueFootnoteSymbol` | Irrelevante para el análisis                           |
| `DatavalueFootnote`       | Irrelevante para el análisis                           |
| `GeoLocation`             | Irrelevante para el análisis                           |
| `LocationID`              | Irrelevante para el análisis                           |
| `DataValueTypeID`         | Información redundante con `DataValueType`             |
| `DataValueUnit`           | Irrelevante para el análisis                           |
| `LocationDesc`            | Información redundante con `LocationAbbr`              |
| `Question`                | Información redundante con `QuestionID`                |
| `StratificationCategory1` | Información redundante con `StratificationCategoryID1` |
| `Stratification1`         | Información redundante con `StratificationID1`         |
:::

::: {.callout-caution title="Observaciones innecesarias para el análisis (filas)" collapse="true"}
###### Observaciones innecesarias para el análisis (filas)

· Incorrecto: Sobran observaciones en el dataset para el análisis

No son necesarias todas las observaciones del dataset para el análisis. Necesitamos únicamente los datos correspondientes al año con más cobertura de información para todos los estados
:::
:::

::: {.callout-note title="4 - Datos incompletos" collapse="true"}
##### 4 - Datos incompletos

Se han detectado los siguientes problemas de incompletitud:

-   Faltan datos para algunos de los estados de EEUU
-   Faltan datos para algunos de los años; el año con una completitud similar para todos los estados es 2021

::: {.callout-caution title="Cobertura incompleta de observaciones (filas)" collapse="true"}
###### Cobertura incompleta de observaciones (filas)

-   Incorrecto - Existen problemas de completitud de observaciones para algunos estados, y para algunos años

```{r}
#| output: false
#| code-fold: true

# Lista de estados de cada tabla
listaEstadosMaestra <- levels(as.factor(rawFipsCodes$state))
listaNombresMaestra <- levels(as.factor(rawFipsCodes$state_name))
listaEstadosCdiAlcohol <- levels(as.factor(rawCdiAlcohol$LocationAbbr))
listaEstadosCauseOfDeath <- levels(as.factor(rawUnderlyingCauseOfDeathAlcohol$State))

# Estados sin datos en rawCdiAlcohol
esEstadoMaestraConDatosCdi <- listaEstadosMaestra %in% listaEstadosCdiAlcohol
esDatoCdiConEstadoMaestra <- listaEstadosCdiAlcohol %in% listaEstadosMaestra

listaEstadosMaestraSinDatosCdi <- listaEstadosMaestra[!esEstadoMaestraConDatosCdi]
listaEstadosDatosCdiSinEstadoMaestra <-
  listaEstadosCdiAlcohol[!esDatoCdiConEstadoMaestra]

# Estados sin datos en rawUnderlyingCauseOfDeathAlcohol
esEstadoMaestraConDatoCauseOfDeath <- listaNombresMaestra %in% listaEstadosCauseOfDeath
esDatoCauseOfDeathConEstadoMaestra <- listaEstadosCauseOfDeath %in% listaNombresMaestra

listaEstadosMaestraSinDatosCauseOfDeath <-
  listaNombresMaestra[!esEstadoMaestraConDatoCauseOfDeath]
listaEstadosDatosCauseOfDeathSinEstadosMaestra <-
  listaEstadosCauseOfDeath[!esDatoCauseOfDeathConEstadoMaestra]

tmp <- rawCdiAlcohol |> 
  dplyr::group_by(
    YearStart,
    LocationAbbr
  ) |> 
  dplyr::summarise(
    n = dplyr::n()
  ) 
tmp$YearStart <- paste0('y', tmp$YearStart)
tmp <- tmp |> 
  tidyr::pivot_wider(names_from = YearStart, values_from = n)
tmp <- dplyr::left_join(rawFipsCodes, tmp, by = dplyr::join_by(state == LocationAbbr)) |> 
  dplyr::select(-state_code, -county, -county_code) |> 
  unique()

```

| data.table                         | Variable     | Descripción                                          | Datos faltantes                                    |
|------------------------------------|--------------|------------------------------------------------------|----------------------------------------------------|
| `rawCdiAlcohol`                    | LocationAbbr | Datos CDI que no corresponden a un estado            | `r listaEstadosDatosCdiSinEstadoMaestra`           |
| `rawFipsCodes`                     | state        | Estados sin datos en CDI                             | `r listaEstadosMaestraSinDatosCdi`                 |
| `rawFipsCodes`                     | state        | Estados sin datos en Cause of Death                  | `r listaEstadosMaestraSinDatosCauseOfDeath`        |
| `rawUnderlyingCauseOfDeathAlcohol` | State        | Datos Cause of Death que no corresponden a un estado | `r listaEstadosDatosCauseOfDeathSinEstadosMaestra` |

```{r}
#| code-fold: true
kableExtra::kable(tmp)
```
:::

::: {.callout-caution title="Cobertura incompleta de variables (columnas)" collapse="true"}
###### Cobertura incompleta de variables (columnas)

· Correcto - No faltan ninguna variable de interés
:::

::: {.callout-caution title="Cobertura incompleta de datos (`NA`)" collapse="true"}
###### Cobertura incompleta de datos (`NA`)

· Incorrecto - Existen datos faltantes

Se analizó el patrón de datos faltantes de los datos crudos con la función `mice::md.pattern()`:

```{r}
#| code-fold: true

mice::md.pattern(rawCdiAlcohol, plot = T, rotate.names = T)
```
:::

::: {.callout-caution title="Cobertura incompleta de periodos (series temporales)" collapse="true"}
###### Cobertura incompleta de periodos (series temporales)

· No aplica en nuestro estudio

```{r}

```
:::
:::

::: {.callout-note title="5 - Datos imprecisos" collapse="true"}
##### 5 - Datos imprecisos

Se han detectado los siguentes problemas de imprecisión de los datos:

-   Tipado de variables incorrecto; deben retipificarse las variables tipo `character`

::: {.callout-caution title="Tipado de variable incorrecto" collapse="true"}
###### Tipado de variable incorrecto

-   Incorrecto - Deben retipificarse las variables tipo `character`
:::

::: {.callout-caution title="Precisión decimal insuficiente" collapse="true"}
###### Precisión decimal insuficiente

-   Correcto - No se han detectado problemas de precisión en números
:::

::: {.callout-caution title="Cardinalidad inadecuada (demasiadas o insuficientes categorías)" collapse="true"}
###### Cardinalidad inadecuada (demasiadas o insuficientes categorías)

-   Correcto - No se han detectado problemas de cardinalidad
:::

::: {.callout-caution title="Datos impuntuales *(punctuality)* (series temporales)" collapse="true"}
###### Datos impuntuales *(punctuality)* (series temporales)

-   No aplica (análisis de series temporales)
:::

::: {.callout-caution title="Datos desactualizados *(freshness)* (series temporales)" collapse="true"}
###### Datos desactualizados *(freshness)* (series temporales)

-   Correcto - Datos suficientemente actualizados para el propósito del estudio
:::
:::

::: {.callout-note title="6 - Datos incómodos" collapse="true"}
##### 6 - Datos incómodos

-   Correcto - No se han detectado problemas

::: {.callout-caution title="Formato inadecuado para el análisis (largo / ancho)" collapse="true"}
###### Formato inadecuado para el análisis (largo / ancho)

-   Correcto - No se han detectado problemas
:::

::: {.callout-caution title="Orden incorrecto de variables (columnas)" collapse="true"}
###### Orden incorrecto de variables (columnas)

-   Correcto - No se han detectado problemas
:::

::: {.callout-caution title="Orden incorrecto de observaciones (filas)" collapse="true"}
###### Orden incorrecto de observaciones (filas)

-   Correcto - No se han detectado problemas
:::
:::

##### Resumen del resultado de la validación

| Problema del dato | Subtipo de problema                                             |        Valoración del *dataset*        |            Acción correctiva            |
|-------------------|-----------------------------------------------------------------|:--------------------------------------:|:---------------------------------------:|
| Sucio             | Codificación de caracteres incorrecta                           |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Símbolos innecesarios (\$, €, %, ... )                          |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Nombre de *data.frame* no acorde a estilo                       |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Nombre de variables (columnas) no acorde a estilo               |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Nombre de observaciones (filas) no acorde a estilo              | [*NO APLICA*]{style="color:darkgray;"} |                                         |
| Incorrecto        | Errores del subproceso de ingesta                               |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Datos no ordenados - Más de una variable por columna            |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Datos no ordenados - Más de una observación por fila            |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Datos no ordenados - Más de un dato por registro                |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
| Irrelevante       | Variables con todas las observaciones faltantes                 |  [INCORRECTO]{style="color:darkred;"}  |        Eliminación de variables         |
|                   | Variables con todas las observaciones con el mismo valor        |  [INCORRECTO]{style="color:darkred;"}  |        Eliminación de variables         |
|                   | Variables innecesarias para el análisis (columnas)              |  [INCORRECTO]{style="color:darkred;"}  |        Eliminación de variables         |
|                   | Observaciones innecesarias para el análisis (filas)             |  [INCORRECTO]{style="color:darkred;"}  |       Agrupación de observaciones       |
| Incompleto        | Cobertura incompleta de observaciones (filas)                   |  [INCORRECTO]{style="color:darkred;"}  | Selección de año 2021 (mejor cobertura) |
|                   | Cobertura incompleta de variables (columnas)                    |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Cobertura incompleta de datos (`NA`)                            |  [INCORRECTO]{style="color:darkred;"}  |     Análisis de variables completas     |
|                   | Cobertura incompleta de periodos (series temporales)            |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
| Impreciso         | Tipado de variable incorrecto                                   |  [INCORRECTO]{style="color:darkred;"}  |          Retipado de variables          |
|                   | Precisión decimal insuficiente                                  |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Cardinalidad inadecuada (demasiadas o insuficientes categorías) |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Datos impuntuales *(punctuality)* (series temporales)           | [*NO APLICA*]{style="color:darkgray;"} |                                         |
|                   | Datos desactualizados *(freshness)* (series temporales)         |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
| Incómodo          | Formato inadecuado para el análisis (largo / ancho)             |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Orden incorrecto de variables (columnas)                        |  [CORRECTO]{style="color:darkgreen;"}  |                                         |
|                   | Orden incorrecto de observaciones (filas)                       |  [CORRECTO]{style="color:darkgreen;"}  |                                         |

#### Validación de `rawUnderlyingCauseOfDeathAlcohol`

::: {.callout-note title="1- Información sucia" collapse="true"}
##### 1- Información sucia

Se han detectado los siguientes problemas de suciedad de los datos:

-   Variable `% of Total Death` con valores seguidos del símbolo `%`
-   Variables con nombre no normalizado

::: {.callout-caution title="Codificación de caracteres incorrecta" collapse="true"}
###### Codificación de caracteres incorrecta

-   Correcto:
    -   Los datasets se han ingestado en la codificación estándar **UTF-8**
    -   No se han registrado advertencias durante la ingesta
    -   La apariencia de los datos ingestados es correcta
:::

::: {.callout-caution title="Símbolos innecesarios ($, €, %, ... )" collapse="true"}
###### Símbolos innecesarios (\$, €, %, ... )

-   Incorrecto - Variable `% of Total Death` con valores seguidos del símbolo `%`
:::

::: {.callout-caution title="Nombre de *data.frame* no acorde a estilo" collapse="true"}
###### Nombre de *data.frame* no acorde a estilo

-   Correcto - Nombre del **data.frame** en formato CamelCase
:::

::: {.callout-caution title="Nombre de variables (columnas) no acorde a estilo" collapse="true"}
###### Nombre de variables (columnas) no acorde a estilo

-   Incorrecto - Variables con nombre no normalizado
:::

::: {.callout-caution title="Nombre de observaciones (filas) no acorde a estilo" collapse="true"}
###### Nombre de observaciones (filas) no acorde a estilo

-   No aplica - Las filas no tienen nombre normalizado
:::
:::

::: {.callout-note title="2 - Datos incorrectos" collapse="true"}
##### 2 - Datos incorrectos

· Correcto - No se han identificado problemas de incorrección de datos

::: {.callout-caution title="Errores del subproceso de ingesta" collapse="true"}
###### Errores del subproceso de ingesta

· Correcto - No se han detectado problemas de ingesta
:::

::: {.callout-caution title="Datos desestructurados - Más de una variable por columna" collapse="true"}
###### Datos desestructurados - Más de una variables por columna

· Correcto - Cada variable está en una columna
:::

::: {.callout-caution title="Datos desestructurados - Más de una observación por fila" collapse="true"}
###### Datos desestructurados - Más de una observación por fila

· Correcto - Cada observación está en una fila
:::
:::

::: {.callout-note title="3 - Datos irrelevantes" collapse="true"}
##### 3 - Datos irrelevantes

Se han identificado los siguientes valores irrelevantes:

-   Deben eliminarse varias variables innecesarias para el análisis

::: {.callout-caution title="Variables con todas las observaciones faltantes" collapse="true"}
###### Variables con todas las observaciones faltantes

-   Correcto - No se han identificado variables con todas las observaciones faltantes
:::

::: {.callout-caution title="Variables con todas las observaciones con el mismo valor" collapse="true"}
###### Variables con todas las observaciones con el mismo valor

-   Correcto - No se han identificado variables con todas las observaciones con el mismo valor
:::

::: {.callout-caution title="Observaciones innecesarias para el análisis (filas)" collapse="true"}
###### Observaciones innecesarias para el análisis (filas)

· Incorrecto: deben eliminarse las observaciones con el valor 'Total' en la variable `Notes`, los valores redundantes de la variable `Stratification1` y conservarse únicamente las observaciones del año '2021'
:::

::: {.callout-caution title="Variables innecesarias para el análisis (columnas)" collapse="true"}
###### Variables innecesarias para el análisis (columnas)

· Incorrecto: Varias variables tienen información innecesaria o redundante para el análisis

Las siguientes variables del dataset original no son necesarias:

| Variable                                          | Justificación                                                 |
|---------------------------------------------------|---------------------------------------------------------------|
| `Notes`                                           | Irrelevante para el análisis                                  |
| `State Code`                                      | Información redundante con `State`                            |
| `Year`                                            | Información redundante con `Year Code`                        |
| `Crude Rate`                                      | Irrelevante para el análisis                                  |
| `Crude Rate Lower 95% Confidence Interval`        | Irrelevante para el análisis                                  |
| `Crude Rate Upper 95% Confidence Interval`        | Irrelevante para el análisis                                  |
| `Crude Rate Standard Error`                       | Irrelevante para el análisis                                  |
| `Age Adjusted Rate Lower 95% Confidence Interval` | Información redundante con `Age Adjusted Rate Standard Error` |
| `Age Adjusted Rate Upper 95% Confidence Interval` | Información redundante con `Age Adjusted Rate Standard Error` |
:::
:::

::: {.callout-note title="4 - Datos incompletos" collapse="true"}
##### 4 - Datos incompletos

· Correcto - No se han detectado problemas

::: {.callout-caution title="Cobertura incompleta de observaciones (filas)" collapse="true"}
###### Cobertura incompleta de observaciones (filas)

· Correcto - Todos los estados tienen datos en el dataset para el año seleccionado
:::

::: {.callout-caution title="Cobertura incompleta de variables (columnas)" collapse="true"}
###### Cobertura incompleta de variables (columnas)

· Correcto - Están disponibles todas las variables necesarias
:::

::: {.callout-caution title="Cobertura incompleta de datos (`NA`)" collapse="true"}
###### Cobertura incompleta de datos (`NA`)

· Correcto - No existen problemas de datos faltantes. Los únicos `NA` están asociados a las filas de totales

```{r}
#| code-fold: true

mice::md.pattern(rawUnderlyingCauseOfDeathAlcohol, plot = T, rotate.names = T)
```
:::

::: {.callout-caution title="Cobertura incompleta de periodos (series temporales)" collapse="true"}
###### Cobertura incompleta de periodos (series temporales)

· No aplica
:::
:::

::: {.callout-note title="5 - Datos imprecisos" collapse="true"}
##### 5 - Datos imprecisos

Se han detectado los siguientes problemas de imprecisión:

-   Se debe cambiar el tipado de las variables tipo `character`

::: {.callout-caution title="Tipado de variable incorrecto" collapse="true"}
###### Tipado de variable incorrecto

· Incorrecto - Se debe cambiar el tipado de las variables tipo `character`
:::

::: {.callout-caution title="Precisión decimal insuficiente" collapse="true"}
###### Precisión decimal insuficiente

· Correcto - No se detectan problemas
:::

::: {.callout-caution title="Cardinalidad inadecuada (demasiadas o insuficientes categorías)" collapse="true"}
###### Cardinalidad inadecuada (demasiadas o insuficientes categorías)

· Correcto - No se detectan problemas
:::

::: {.callout-caution title="Datos impuntuales *(punctuality)* (series temporales)" collapse="true"}
###### Datos impuntuales *(punctuality)* (series temporales)

· No aplica
:::

::: {.callout-caution title="Datos desactualizados *(freshness)* (series temporales)" collapse="true"}
###### Datos desactualizados *(freshness)* (series temporales)

· No aplica
:::
:::

::: {.callout-note title="6 - Datos incómodos" collapse="true"}
##### 6 - Datos incómodos

::: {.callout-caution title="Formato inadecuado para el análisis (largo / ancho)" collapse="true"}
###### Formato inadecuado para el análisis (largo / ancho)

· Correcto - No se detectan problemas
:::

::: {.callout-caution title="Orden incorrecto de variables (columnas)" collapse="true"}
###### Orden incorrecto de variables (columnas)

· Correcto - No se detectan problemas
:::

::: {.callout-caution title="Orden incorrecto de observaciones (filas)" collapse="true"}
###### Orden incorrecto de observaciones (filas)

· Correcto - No se detectan problemas
:::
:::

##### Resumen del resultado de la validación

| Problema del dato | Subtipo de problema                                             | Problemas del *dataset*                | Acción                     |
|-------------------|-----------------------------------------------------------------|----------------------------------------|----------------------------|
| Sucio             | Codificación de caracteres incorrecta                           | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Símbolos innecesarios (\$, €, %, ... )                          | [INCORRECTO]{style="color:darkred;"}   | Transformación de variable |
|                   | Nombre de *data.frame* no acorde a estilo                       | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Nombre de variables (columnas) no acorde a estilo               | [INCORRECTO]{style="color:darkred;"}   | Renombrado de variables    |
|                   | Nombre de observaciones (filas) no acorde a estilo              | [*NO APLICA*]{style="color:darkgray;"} |                            |
| Incorrecto        | Errores del subproceso de ingesta                               | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Datos no ordenados - Más de una variables por columna           | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Datos no ordenados - Más de una observación por fila            | [CORRECTO]{style="color:darkgreen;"}   |                            |
| Irrelevante       | Variables con todas las observaciones faltantes                 | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Variables con todas las observaciones con el mismo valor        | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Observaciones innecesarias para el análisis (filas)             | [INCORRECTO]{style="color:darkred;"}   | Filtrado de observaciones  |
|                   | Variables innecesarias para el análisis (columnas)              | [INCORRECTO]{style="color:darkred;"}   | Eliminación de variables   |
| Incompleto        | Cobertura incompleta de observaciones (filas)                   | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Cobertura incompleta de variables (columnas)                    | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Cobertura incompleta de datos (`NA`)                            | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Cobertura incompleta de periodos (series temporales)            | [CORRECTO]{style="color:darkgreen;"}   |                            |
| Impreciso         | Tipado de variable incorrecto                                   | [INCORRECTO]{style="color:darkred;"}   | Retipado de variables      |
|                   | Precisión decimal insuficiente                                  | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Cardinalidad inadecuada (demasiadas o insuficientes categorías) | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Datos impuntuales *(punctuality)* (series temporales)           | [*NO APLICA*]{style="color:darkgray;"} |                            |
|                   | Datos desactualizados *(freshness)* (series temporales)         | [*NO APLICA*]{style="color:darkgray;"} |                            |
| Incómodo          | Formato inadecuado para el análisis (largo / ancho)             | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Orden incorrecto de variables (columnas)                        | [CORRECTO]{style="color:darkgreen;"}   |                            |
|                   | Orden incorrecto de observaciones (filas)                       | [CORRECTO]{style="color:darkgreen;"}   |                            |

#### Validación de `rawFipsCodes`

::: {.callout-note title="1- Información sucia" collapse="true"}
##### 1- Información sucia

Se han encontrado los siguientes problemas con la suciedad de los datos:

-   Variables con nombre en formato snake_case

::: {.callout-caution title="Codificación de caracteres incorrecta" collapse="true"}
###### Codificación de caracteres incorrecta

-   Correcto:

-   Los datasets se han ingestado en la codificación estándar **UTF-8**

-   No se han registrado advertencias durante la ingesta

-   La apariencia de los datos ingestados es correcta
:::

::: {.callout-caution title="Símbolos innecesarios ($, €, %, ... )" collapse="true"}
###### Símbolos innecesarios (\$, €, %, ... )

-   Correcto - Sin problemas en ninguna de las variables
:::

::: {.callout-caution title="Nombre de *data.frame* no acorde a estilo" collapse="true"}
###### Nombre de *data.frame* no acorde a estilo

-   Correcto - Nombre del **data.frame** en formato CamelCase
:::

::: {.callout-caution title="Nombre de variables (columnas) no acorde a estilo" collapse="true"}
###### Nombre de variables (columnas) no acorde a estilo

-   Incorrecto - Variables con nombre en formato snake_case
:::

::: {.callout-caution title="Nombre de observaciones (filas) no acorde a estilo" collapse="true"}
###### Nombre de observaciones (filas) no acorde a estilo

-   No aplica - Las filas no tienen nombre
:::
:::

::: {.callout-note title="2 - Datos incorrectos" collapse="true"}
##### 2 - Datos incorrectos

· Correcto - No se han detectado problemas de incorrección de datos

::: {.callout-caution title="Errores del subproceso de ingesta" collapse="true"}
###### Errores del subproceso de ingesta

· Correcto - No se han detectado problemas de ingesta
:::

::: {.callout-caution title="Datos desestructurados - Más de una variable por columna" collapse="true"}
###### Datos desestructurados - Más de una variables por columna

· Correcto - Una variable por columna
:::

::: {.callout-caution title="Datos desestructurados - Más de una observación por fila" collapse="true"}
###### Datos desestructurados - Más de una observación por fila

· Correcto - Una observación por fila
:::
:::

::: {.callout-note title="3 - Datos irrelevantes" collapse="true"}
##### 3 - Datos irrelevantes

· Correcto - No se han identificado problemas de irrelevancia de datos

::: {.callout-caution title="Variables con todas las observaciones faltantes" collapse="true"}
###### Variables con todas las observaciones faltantes

· Correcto - No hay problemas de datos faltantes
:::

::: {.callout-caution title="Variables con todas las observaciones con el mismo valor" collapse="true"}
###### Variables con todas las observaciones con el mismo valor

· Correcto - No hay variables con todas las observaciones iguales
:::

::: {.callout-caution title="Variables innecesarias para el análisis (columnas)" collapse="true"}
###### Variables innecesarias para el análisis (columnas)

· Incorrecto: Varias variables tienen información innecesaria o redundante para el análisis

Las siguientes variables del dataset original no son necesarias:

| Variable      | Justificación                |
|---------------|------------------------------|
| `county_code` | Irrelevante para el análisis |
| `county`      | Irrelevante para el análisis |
:::

::: {.callout-caution title="Observaciones innecesarias para el análisis (filas)" collapse="true"}
###### Observaciones innecesarias para el análisis (filas)
:::
:::

::: {.callout-note title="4 - Datos incompletos" collapse="true"}
##### 4 - Datos incompletos

::: {.callout-caution title="Cobertura incompleta de observaciones (filas)" collapse="true"}
###### Cobertura incompleta de observaciones (filas)
:::

::: {.callout-caution title="Cobertura incompleta de variables (columnas)" collapse="true"}
###### Cobertura incompleta de variables (columnas)
:::

::: {.callout-caution title="Cobertura incompleta de datos (`NA`)" collapse="true"}
###### Cobertura incompleta de datos (`NA`)
:::

::: {.callout-caution title="Cobertura incompleta de periodos (series temporales)" collapse="true"}
###### Cobertura incompleta de periodos (series temporales)
:::
:::

::: {.callout-note title="5 - Datos imprecisos" collapse="true"}
##### 5 - Datos imprecisos

::: {.callout-caution title="Tipado de variable incorrecto" collapse="true"}
###### Tipado de variable incorrecto
:::

::: {.callout-caution title="Precisión decimal insuficiente" collapse="true"}
###### Precisión decimal insuficiente
:::

::: {.callout-caution title="Cardinalidad inadecuada (demasiadas o insuficientes categorías)" collapse="true"}
###### Cardinalidad inadecuada (demasiadas o insuficientes categorías)
:::

::: {.callout-caution title="Datos impuntuales *(punctuality)* (series temporales)" collapse="true"}
###### Datos impuntuales *(punctuality)* (series temporales)
:::

::: {.callout-caution title="Datos desactualizados *(freshness)* (series temporales)" collapse="true"}
###### Datos desactualizados *(freshness)* (series temporales)
:::
:::

::: {.callout-note title="6 - Datos incómodos" collapse="true"}
##### 6 - Datos incómodos

::: {.callout-caution title="Formato inadecuado para el análisis (largo / ancho)" collapse="true"}
###### Formato inadecuado para el análisis (largo / ancho)
:::

::: {.callout-caution title="Orden incorrecto de variables (columnas)" collapse="true"}
###### Orden incorrecto de variables (columnas)
:::

::: {.callout-caution title="Orden incorrecto de observaciones (filas)" collapse="true"}
###### Orden incorrecto de observaciones (filas)
:::
:::

##### Resumen del resultado de la validación

| Problema del dato | Subtipo de problema                                             | Problemas del *dataset*                | Acción                   |
|-------------------|-----------------------------------------------------------------|----------------------------------------|--------------------------|
| Sucio             | Codificación de caracteres incorrecta                           | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Símbolos innecesarios (\$, €, %, ... )                          | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Nombre de *data.frame* no acorde a estilo                       | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Nombre de variables (columnas) no acorde a estilo               | [INCORRECTO]{style="color:darkred;"}   | Renombrado de variables  |
|                   | Nombre de observaciones (filas) no acorde a estilo              | [*NO APLICA*]{style="color:darkgray;"} |                          |
| Incorrecto        | Errores del subproceso de ingesta                               | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Datos no ordenados - Más de una variables por columna           | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Datos no ordenados - Más de una observación por fila            | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Datos no ordenados - Más de un dato por registro                | [CORRECTO]{style="color:darkgreen;"}   |                          |
| Irrelevante       | Variables con todas las observaciones faltantes                 | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Variables con todas las observaciones con el mismo valor        | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Variables innecesarias para el análisis (columnas)              | [INCORRECTO]{style="color:darkred;"}   | Eliminación de variables |
|                   | Observaciones innecesarias para el análisis (filas)             | [CORRECTO]{style="color:darkgreen;"}   |                          |
| Incompleto        | Cobertura incompleta de observaciones (filas)                   | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Cobertura incompleta de variables (columnas)                    | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Cobertura incompleta de datos (`NA`)                            | [*NO APLICA*]{style="color:darkgray;"} |                          |
|                   | Cobertura incompleta de periodos (series temporales)            | [CORRECTO]{style="color:darkgreen;"}   |                          |
| Impreciso         | Tipado de variable incorrecto                                   | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Precisión decimal insuficiente                                  | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Cardinalidad inadecuada (demasiadas o insuficientes categorías) | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Datos impuntuales *(punctuality)* (series temporales)           | [*NO APLICA*]{style="color:darkgray;"} |                          |
|                   | Datos desactualizados *(freshness)* (series temporales)         | [*NO APLICA*]{style="color:darkgray;"} |                          |
| Incómodo          | Formato inadecuado para el análisis (largo / ancho)             | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Orden incorrecto de variables (columnas)                        | [CORRECTO]{style="color:darkgreen;"}   |                          |
|                   | Orden incorrecto de observaciones (filas)                       | [CORRECTO]{style="color:darkgreen;"}   |                          |

### 02b - Reingestar, modificar, reemplazar o borrar esta información no deseada de acuerdo a la necesidad

```{r}
#| code-fold: true
#| output: false
# Creación de los data.frame temporal para la limpieza
tmpCdiAlcohol <- rawCdiAlcohol
tmpUnderlyingCauseOfDeathAlcohol <- rawUnderlyingCauseOfDeathAlcohol
tmpFipsCodes <- rawFipsCodes
```

#### 1- Limpieza de `rawCdiAlcohol`

::: {.callout-note title="1a - Eliminación de datos irrelevantes" collapse="true"}
##### 1a - Eliminación de datos irrelevantes

Se realizaron las siguientes acciones para corregir los datos irrelevantes:

-   1aa - Eliminación de variables sin datos
-   1ab - Eliminación de variables con todas las observaciones con el mismo valor
-   1ac - Eliminación de variables innecesarias
-   1ad - Eliminación de observaciones innecesarias
-   1ae - Limpieza final

::: {.callout-caution title="1a1 - Eliminación de variables sin datos" collapse="true"}
###### 1aa - Eliminación de variables sin datos

Se analizó el patrón de datos faltantes de los datos crudos con la función `mice::md.pattern()`:

```{r}
#| code-fold: true
#| output: false

mice::md.pattern(tmpCdiAlcohol, plot = T, rotate.names = T)
```

Se observó que:

-   Diez variables no tenían ningún valor en ninguna observación
-   En tres de ellas había un elevado número de `NA`.
-   El resto de variables no presentaba problemas de valores faltantes

Para identificar las variables sin datos, se utilizó el siguiente procedimiento:

-   Paso 1 - Valoración del número total de datos faltantes de cada variable (`NA`)
-   Paso 2 - Identificación de las variables cuyo número total de `NA` sea igual al número de observaciones (filas) del dataset
-   Paso 3 - Eliminación de las variables sin datos

```{r}
#| code-fold: true
#| output: false

## Identificación de variables sin ningún dato
### Paso 1 - Valoración del número total de datos faltantes de cada variable (`NA`)
nMissingDataByCol <- colSums(is.na(tmpCdiAlcohol))

### Paso 2 - Identificación de las variables cuyo número total de `NA` sea igual al número de observaciones (filas) del dataset
namesVarNoData <- 
  names(nMissingDataByCol)[nMissingDataByCol == nrow(tmpCdiAlcohol)]
idxVarNoData <- names(tmpCdiAlcohol) %in% namesVarNoData
namesVarData <- names(tmpCdiAlcohol)[!idxVarNoData]

### Paso 3 - Eliminación de las variables sin datos
tmpCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::select(
    dplyr::all_of(namesVarData)
  )

mice::md.pattern(tmpCdiAlcohol, plot = T, rotate.names = T)
```
:::

::: {.callout-caution title="1ab - Eliminación de variables con todas las observaciones con el mismo valor" collapse="true"}
###### 1ab - Eliminación de variables con todas las observaciones con el mismo valor

Para eliminar las variables con todas las observaciones iguales, se utilizó el siguiente procedimiento:

-   Para las variables categóricas:
    -   Paso 1 - Identificar las variables de tipo `character`
    -   Paso 2 - Evaluar la cardinalidad (número de categorías) de cada variable
    -   Paso 3 - Eliminar las variables con cardinalidad de 1

```{r}
#| code-fold: true
#| output: false

# Eliminación de variables con todas las observaciones con el mismo valor
## Paso 1 - Identificar las variables de tipo `character`
### Tipo de variables del dataframe
sapply(tmpCdiAlcohol, class)
### Número de tipos de variable en el dataframe
table(sapply(tmpCdiAlcohol, class))
### Variables de tipo character
varCharacterNames <- names(which(sapply(tmpCdiAlcohol, is.character)))
isCharacter <- names(tmpCdiAlcohol) %in% varCharacterNames

## Paso 2 - Evaluar la cardinalidad (número de categorías) de cada variable
### Función para calcular la cardinalidad de una variable
cardinality <- function(x){length(levels(as.factor(x)))}

### Cardinalidad de las variables categóricas
cardinalityCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::select(
    dplyr::all_of(varCharacterNames)
  ) |> 
  sapply(cardinality)

## Paso 3 - Eliminar las variables con cardinalidad de 1
### Variables categóricas con cardinalidad de 0 (sin valores) o 1 (con todos iguales)
esVarCardinalidadBaja <- cardinalityCdiAlcohol %in% c(0,1)
namesVarCardinalidadNormal <- names(tmpCdiAlcohol)[!esVarCardinalidadBaja]
tmpCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::select(
    dplyr::all_of(namesVarCardinalidadNormal)
    )
```
:::

::: {.callout-caution title="1ac - Eliminación de variables innecesarias para el análisis" collapse="true"}
###### 1ac - Eliminación de variables innecesarias para el análisis

Se eliminaron las siguientes variables del dataset original:

| Variable                                         | Justificación                              |
|--------------------------------------------------|--------------------------------------------|
| `YearEnd`                                        | Información redundante con `YearStart`     |
| `DataSource`                                     | Irrelevante para el análisis               |
| `DataValue`                                      | Información redundante con `DataValueAlt`  |
| `DataValueFootnoteSymbol`<br>`DatavalueFootnote` | Irrelevante para el análisis               |
| `GeoLocation`                                    | Irrelevante para el análisis               |
| `LocationID`                                     | Irrelevante para el análisis               |
| `DataValueTypeID`                                | Información redundante con `DataValueType` |
| `DataValueUnit`                                  | Irrelevante para el análisis               |

A pesar de que tenían información idéntica, se mantuvieron en el dataset las siguientes variables, para facilitar el etiquetado de gráficos con etiquetas cortas:

| Variable A (descripción larga) | Variable B (etiqueta corta) |
|--------------------------------|-----------------------------|
| `LocationDesc`                 | `LocationAbbr`              |
| `Question`                     | `QuestionID`                |
| `StratificationCategory1`      | `StratificationCategoryID1` |
| `Stratification1`              | `StratificationID1`         |

```{r}
#| code-fold: true
#| output: false

# Variables a mantener en el dataset
varCdiAlcohol <- c(
  "YearStart",
  #"YearEnd",
  "LocationAbbr",
  #"DataSource",
  "Question",
  "DataValueType",
  "DataValueAlt",
  #"DataValueUnit",
  #"DataValue",
  #"DataValueFootnoteSymbol",
  #"DatavalueFootnote",
  #"LowConfidenceLimit",
  #"HighConfidenceLimit",
  "StratificationCategory1",
  "Stratification1"# ,
  #"StratificationID1"
  #"GeoLocation",
  #"LocationID",
  # "DataValueTypeID",
)
# Selección de variables relevantes
tmpCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::select(
    dplyr::all_of(varCdiAlcohol)
    )

```
:::

::: {.callout-caution title="1ad - Eliminación de observaciones innecesarias para el análisis (filas)" collapse="true"}
###### 1ad - Eliminación de observaciones innecesarias para el análisis (filas)

Se filtraron las siguientes observaciones del dataset original:

| Variable                | Filtro aplicado                                    | Justificación                                                                                                                    |
|-------------------------|----------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------|
| StratificationCategory1 | `%in% c("Gender", "Overall")`                      | La estratificación 'Race/Ethnicity' no tiene datos para un número significativo de estados                                       |
| DataValueTypeID         | `%in% c("AGEADJMEAN", "AGEADJPREV", "AGEADJRATE")` | Las tasas ajustadas por edad son más adecuadas para comparar indicadores entre poblaciones con pirámides de población diferentes |
| YearStart               | `== 2021`                                          | Año con datos más recientes, y con una mayor completitud de datos para todos los estados                                         |
| LocationAbbr            | `!= "US"`                                          | Datos correspondientes al país completo                                                                                          |
|                         |                                                    |                                                                                                                                  |

Al revisar el patrón de datos faltantes de los resultados, se comprobó que:

-   El estado de Florida tenía una tasa de datos faltantes muy superior al de restos de estados, para todos los indicadores
-   La estratificación 'Race/Ethnicity' no tiene datos para un número significativo de estados
-   Los niveles de 'Race' son redundantes (Male, Female, Overall)

```{r}
#| code-fold: true
#| output: false

# Datos faltantes por estado
tmpCdiAlcohol[is.na(tmpCdiAlcohol$LocationAbbr),] |>
  dplyr::group_by(LocationAbbr) |> 
  dplyr::summarise(n = dplyr::n())

# Datos faltantes por tipo de estratificación
tmpCdiAlcohol[is.na(tmpCdiAlcohol$DataValueAlt),] |>
  dplyr::group_by(StratificationCategory1) |> 
  dplyr::summarise(n = dplyr::n())
```

Por este motivo,

-   Se eliminaron los datos de la estratificación por raza y etnia

```{r}
#| code-fold: true
#| output: false

tmpCdiAlcohol_overall <- tmpCdiAlcohol |> 
  dplyr::filter(
    Stratification1 == 'Overall'
  ) |> 
  dplyr::select(
    -StratificationCategory1,
    -Stratification1
  )

tmpCdiAlcohol_byGender <- tmpCdiAlcohol |> 
  dplyr::filter(
    Stratification1 != 'Overall'
  ) |> 
  dplyr::select(
    -StratificationCategory1
  )

tmpCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::filter(
    StratificationCategory1 %in% c("Gender", "Overall"),
    DataValueType %in% c("Age-adjusted Mean", "Age-adjusted Prevalence", "Age-adjusted Rate" ),
    YearStart == 2021, 
    LocationAbbr != "US",
    # Stratification1 != "Overall"
  )

```

```{r}
#| code-fold: true
#| output: false

tmpCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::filter(
    StratificationCategory1 %in% c("Gender", "Overall"),
    DataValueType %in% c("Age-adjusted Mean", "Age-adjusted Prevalence", "Age-adjusted Rate" ),
    LocationAbbr != "FL",
    YearStart == 2021
  )
mice::md.pattern(tmpCdiAlcohol, plot = T, rotate.names = T)
```

Tras estas transformaciones, sólo un estado del dataset final queda sin datos (Florida), lo que se tendrá en cuenta al interpretar el análisis.

```{r}
#| code-fold: true
tmpCdiAlcohol[is.na(tmpCdiAlcohol$DataValueAlt),]
```
:::

::: {.callout-caution title="1ae - Limpieza final" collapse="true"}
###### 1ae - Limpieza final

Una vez eliminados los datos, innecesarios, algunas variables se vuelven superfluas:

| Variables eliminadas | Transformación                           |
|----------------------|------------------------------------------|
| `DataValueType`      | Información Innecesaria para el análisis |

```{r}
#| code-fold: true
#| output: false

tmpCdiAlcohol <- tmpCdiAlcohol |> 
  dplyr::select(
    #-StratificationCategory1,
    #-StratificationCategoryID1,
    -DataValueType
    )
```
:::
:::

::: {.callout-note title="1b - Retipado de variables" collapse="true"}
##### 1b - Retipado de variables

Se pospuso la tarea hasta la fusión de datasets de trabajo.
:::

#### 2 - Limpieza de `rawUnderlyingCauseOfDeathAlcohol`

::: {.callout-note title="2a - Limpieza de datos sucios" collapse="true"}
##### 2a - Limpieza de datos sucios

Se realizaron las siguientes acciones para corregir los datos sucios:

-   2aa - Transformación de la variable `% of Total Death`
-   2ab - Renombrado de variables

::: {.callout-caution title="2aa - Transformación de la variable `% of Total Death`" collapse="true"}
###### 2aa - Transformación de la variable `% of Total Death`

```{r}
#| code-fold: true
#| output: false

## 2aa - Transformación de la variable `% of Total Death`
tmpUnderlyingCauseOfDeathAlcohol$`% of Total Deaths` <- gsub(
  pattern = "%",
  replacement = "",
  tmpUnderlyingCauseOfDeathAlcohol$`% of Total Deaths`
) |> 
  as.numeric()
```
:::

::: {.callout-caution title="2ab - Renombrado de variables" collapse="true"}
###### 2ab - Renombrado de variables

```{r}
#| code-fold: true
#| output: false

# Nombres originales
rawNamesUnderlyingCauseOfDeath <- names(tmpUnderlyingCauseOfDeathAlcohol)

# Nombres normalizados
names(tmpUnderlyingCauseOfDeathAlcohol) <- c(
  "Notes",
  "State",
  "StateCode",
  "Year",
  "YearCode",
  "Gender",
  "GenderCode",
  "Deaths",
  "Population",
  "CrudeRate",
  "CrudeRateLower95ConfidenceInterval",
  "CrudeRateUpper95ConfidenceInterval",
  "CrudeRateStandardError",
  "AgeAdjustedRate",
  "AgeAdjustedRateLower95ConfidenceInterval",
  "AgeAdjustedRateUpper95ConfidenceInterval",
  "AgeAdjustedRateStandardError",
  "PercentageOfTotalDeaths"
)
```
:::
:::

::: {.callout-note title="2b - Eliminación de información irrelevante" collapse="true"}
##### 2b - Eliminación de información irrelevante

Se realizaron las siguientes acciones para corregir los datos irrelevantes:

-   2ba - Eliminación de observaciones innecesarias
-   2bb - Eliminación de variables innecesarias

::: {.callout-caution title="2ba - Eliminación de observaciones innecesarias" collapse="true"}
###### 2ba - Eliminación de observaciones innecesarias

Se seleccionaron las observaciones del año 2021

```{r}
#| code-fold: true
#| output: false

tmpUnderlyingCauseOfDeathAlcohol <- tmpUnderlyingCauseOfDeathAlcohol |> 
  dplyr::filter(
    YearCode == 2021
  )
```
:::

::: {.callout-caution title="2bb - Eliminación de variables innecesarias" collapse="true"}
###### 2bb - Eliminación de variables innecesarias

Se eliminaron las siguientes variables del dataset original:

| Variable                                                                                                                                | Justificación                                                   |
|-----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------|
| `Notes`                                                                                                                                 | Irrelevante para el análisis                                    |
| `State`                                                                                                                                 | Información redundante con `State Code`                         |
| `Year`<br>`YearCode`                                                                                                                    | Irrelevante para el análisis<br>Sólo se va analizar el año 2021 |
| `Crude Rate`<br>`Crude Rate Lower 95% Confidence Interval`<br>`Crude Rate Upper 95% Confidence Interval`<br>`Crude Rate Standard Error` | Irrelevante para el análisis                                    |
| `Age Adjusted Rate Lower 95% Confidence Interval`<br>`Age Adjusted Rate Upper 95% Confidence Interval`                                  | Información redundante con `Age Adjusted Rate Standard Error`   |

```{r}
#| code-fold: true
#| output: false

tmpUnderlyingCauseOfDeathAlcohol <- tmpUnderlyingCauseOfDeathAlcohol |> 
  dplyr::select(
    # Notes,
    # State,
    StateCode,
    # Year,
    # YearCode,
    Gender,
    # GenderCode,
    Deaths,
    Population,
    # CrudeRate,
    # CrudeRateLower95ConfidenceInterval,
    # CrudeRateUpper95ConfidenceInterval,
    # CrudeRateStandardError,
    AgeAdjustedRate,
    # AgeAdjustedRateLower95ConfidenceInterval,
    # AgeAdjustedRateUpper95ConfidenceInterval,
    AgeAdjustedRateStandardError,
    PercentageOfTotalDeaths
  )

```
:::
:::

##### 2c - Retipado de variables

```{r}
#| code-fold: true
#| output: false
tmpUnderlyingCauseOfDeathAlcohol$AgeAdjustedRate <- 
  tmpUnderlyingCauseOfDeathAlcohol$AgeAdjustedRate |> as.numeric()
```

#### 3 - Limpieza de `rawFipsCodes`

::: {.callout-note title="3a - Limpieza de datos sucios" collapse="true"}
##### 3a - Limpieza de datos sucios

Se realizaron las siguientes acciones para corregir los datos sucios:

-   3aa - Renombrado de variables

::: {.callout-caution title="3aa - Renombrado de variables" collapse="true"}
###### 3aa - Renombrado de variables

```{r}
#| code-fold: true
#| output: false

rawNamesFipsCodes <- names(tmpFipsCodes)
names(tmpFipsCodes) <- c("State", "StateCode", "StateName", "CountyCode", "County" )
```
:::
:::

::: {.callout-note title="3b - Eliminación de datos irrelevantes" collapse="true"}
###### 3b - Eliminación de datos irrelevantes

::: {.callout-caution title="3ba - Eliminación de variables innecesarias" collapse="true"}
###### 3ba - Eliminación de variables innecesarias

Se eliminaron las siguientes variables del dataset original:

| Variable      | Justificación                |
|---------------|------------------------------|
| `county_code` | Irrelevante para el análisis |
| `county`      | Irrelevante para el análisis |

```{r}
#| code-fold: true
#| output: false

tmpFipsCodes <- tmpFipsCodes |> 
  dplyr::select(
    State,
    StateCode,
    StateName #,
    # CountyCode,
    # County
  ) |> 
  unique()
```
:::
:::

#### 4 - Combinación de los tres *data.frame* originales

Una vez limpios los tres data.frame de origen, se crearon tres conjuntos de datos para el análisis:

-   `data`: Datos completos
-   `data_overall`: Datos globales, sin estratificación por sexo
-   `data_gender`: Datos estratificados por sexo

```{r}
#| code-fold: true
#| output: false

tmp <- dplyr::left_join(
  tmpFipsCodes,
  tmpCdiAlcohol,
  by = dplyr::join_by(State == LocationAbbr)
)
tmp$StateCode <- as.numeric(tmp$StateCode)

tmp_overall <- tmp |> 
  dplyr::filter(
    Stratification1 == "Overall"
    )
tmp_gender <- tmp |> 
    dplyr::filter(
    Stratification1 != "Overall"
    )

tmp <- dplyr::left_join(
  tmp,
  tmpUnderlyingCauseOfDeathAlcohol,
  by = dplyr::join_by(
    StateCode,
    Stratification1 == Gender
  ) 
) |> 
  dplyr::select(
    State,
    # StateCode,
    StateName,
    # YearStart,
    # LocationDesc,
    # QuestionID,
    Question,
    QuestionValue = DataValueAlt,
    #QuestionValueLowConfidenceLimit = LowConfidenceLimit,
    #QuestionValueHighConfidenceLimit = HighConfidenceLimit,
    # Gender,
    Sex = Stratification1,
    Deaths,
    Population,
    AgeAdjustedDeathRate = AgeAdjustedRate,
    AgeAdjustedDeathRateStandardError = AgeAdjustedRateStandardError,
    PercentageOfTotalDeaths
  )



tmp_gender <- dplyr::left_join(
  tmp_gender,
  tmpUnderlyingCauseOfDeathAlcohol,
  by = dplyr::join_by(
    StateCode,
    Stratification1 == Gender
  ) 
) |> 
  dplyr::select(
    State,
    # StateCode,
    StateName,
    # YearStart,
    # LocationDesc,
    # QuestionID,
    Question,
    QuestionValue = DataValueAlt,
    #QuestionValueLowConfidenceLimit = LowConfidenceLimit,
    #QuestionValueHighConfidenceLimit = HighConfidenceLimit,
    # Gender,
    Sex = Stratification1,
    Deaths,
    Population,
    AgeAdjustedDeathRate = AgeAdjustedRate,
    AgeAdjustedDeathRateStandardError = AgeAdjustedRateStandardError,
    PercentageOfTotalDeaths
  )

tmp_overall <- dplyr::left_join(
  tmp_overall,
  tmpUnderlyingCauseOfDeathAlcohol,
  by = dplyr::join_by(
    StateCode
  ) 
) |> 
  dplyr::select(
    State,
    # StateCode,
    StateName,
    # YearStart,
    # LocationDesc,
    # QuestionID,
    Question,
    QuestionValue = DataValueAlt,
    #QuestionValueLowConfidenceLimit = LowConfidenceLimit,
    #QuestionValueHighConfidenceLimit = HighConfidenceLimit,
    Gender,
    #Sex = Stratification1,
    Deaths,
    Population,
    AgeAdjustedDeathRate = AgeAdjustedRate,
    AgeAdjustedDeathRateStandardError = AgeAdjustedRateStandardError,
    PercentageOfTotalDeaths
)
data <- tmp |> 
  dplyr::select(
    State,
    Question,
    QuestionValue,
    Sex,
    Deaths,
    Population,
    AgeAdjustedDeathRate,
    PercentageOfTotalDeaths
  ) |> 
  tidyr::pivot_wider(names_from = Question, values_from = QuestionValue) |> 
  dplyr::select(-`NA`)


data_overall <- tmp_overall |> 
  dplyr::select(
    State,
    Question,
    QuestionValue,
    # Sex,
    Deaths,
    Population,
    AgeAdjustedDeathRate,
    PercentageOfTotalDeaths
  ) |> 
  tidyr::pivot_wider(names_from = Question, values_from = QuestionValue)

data_gender <- tmp_gender |> 
  dplyr::select(
    State,
    Question,
    QuestionValue,
    Sex,
    Deaths,
    Population,
    AgeAdjustedDeathRate,
    PercentageOfTotalDeaths
  ) |> 
  tidyr::pivot_wider(names_from = Question, values_from = QuestionValue)

data$State <- factor(
  data$State, 
  levels = levels(as.factor(data$State))[order(data$AgeAdjustedDeathRate)])

data_overall$State <- factor(
  data_overall$State, 
  levels = levels(as.factor(data_overall$State))[order(data_overall$AgeAdjustedDeathRate)])

data_gender$State <- factor(
  data_gender$State, 
  levels = levels(as.factor(data_gender$State))[order(data_gender$AgeAdjustedDeathRate)])

# Limpieza del dataset combinado
data$Deaths <- as.numeric(data$Deaths)
data$Population <- as.numeric(data$Population)
data_overall$Deaths <- as.numeric(data_overall$Deaths)
data_overall$Population <- as.numeric(data_overall$Population)
data_gender$Deaths <- as.numeric(data_gender$Deaths)
data_gender$Population <- as.numeric(data_gender$Population)


# Renombrado
names(data_gender) <- c(
  'State',
  'Sex',
  'Deaths',
  'Population',
  'AgeAdjustedDeathRate',
  'PercentageOfTotalDeaths',
  'HeavyDrinkingAdults',
  'BingeDrinkingFrecuencyAdults',
  'BingeDrinkingIntensityAdults',
  'BingeDrinkingPrevalenceAdults'
)

names(data) <- c(
  'State',
  'Sex',
  'Deaths',
  'Population',
  'AgeAdjustedDeathRate',
  'PercentageOfTotalDeaths',
  'HeavyDrinkingAdults',
  'BingeDrinkingFrecuencyAdults',
  'BingeDrinkingIntensityAdults',
  'BingeDrinkingPrevalenceAdults'
)

names(data_overall) <- c(
  'State',
  #'Sex',
  'Deaths',
  'Population',
  'AgeAdjustedDeathRate',
  'PercentageOfTotalDeaths',
  'HeavyDrinkingAdults',
  'BingeDrinkingFrecuencyAdults',
  'BingeDrinkingIntensityAdults',
  'BingeDrinkingPrevalenceAdults'
)

```

### Salidas del subproceso

| Objeto         | Descripción del *data.frame*                                                                                                              | Filas                  | Columnas               |
|----------------|-------------------------------------------------------------------------------------------------------------------------------------------|------------------------|------------------------|
| `data`         | Indicadores de enfermedades crónicas (CDI) del área de interés 'Alcohol' y de mortalidad por alcohol, año 2021, por estado de EEUU y sexo | `r nrow(data)`         | `r ncol(data)`         |
| `data_overall` | Indicadores de enfermedades crónicas (CDI) del área de interés 'Alcohol' y de mortalidad por alcohol, año 2021, por estado de EEUU y sexo | `r nrow(data_overall)` | `r ncol(data_overall)` |
| `data_gender`  | Indicadores de enfermedades crónicas (CDI) del área de interés 'Alcohol' y de mortalidad por alcohol, año 2021, por estado de EEUU y sexo | `r nrow(data_gender)`  | `r ncol(data_gender)`  |

```{r}
#| code-fold: true
#| output: false

saveRDS(
  data,
  file = here::here('data', 'lab', 'data.rds')
) 
saveRDS(
  data_gender,
  file = here::here('data', 'lab', 'data_gender.rds')
) 
saveRDS(
  data_overall,
  file = here::here('data', 'lab', 'data_overall.rds')
) 
```

```{r}
summary(data)
summary(data_gender)
summary(data_overall)
```

### Limpieza de las variables intermedias del subproceso

```{r Limpieza - limpieza}
#| code-fold: true
#| output: false

rm(list = c(
  'esDatoCauseOfDeathConEstadoMaestra',
  'esDatoCdiConEstadoMaestra',
  'esEstadoMaestraConDatoCauseOfDeath',
  'esEstadoMaestraConDatosCdi',
  'esVarCardinalidadBaja',
  'esVarCardinalidadNormal',
  'idxVarNoData',
  'listaEstadosCauseOfDeath',
  'listaEstadosCdiAlcohol',
  'listaEstadosDatosCdiSinEstadoMaestra',
  'listaEstadosMaestra',
  'listaEstadosMaestraSinDatosCauseOfDeath',
  'listaEstadosMaestraSinDatosCdi',
  'listaNombresMaestra',
  'namesVarNoData',
  'namesVarData',
  'namesVarCardinalidadNormal',
  'nMissingDataByCol',
  'rawCdiAlcohol',
  'rawFipsCodes',
  'rawUnderlyingCauseOfDeathAlcohol',
  'tmp',
  'tmp_gender',
  'tmp_overall',
  'tmpCdiAlcohol_byGender',
  'tmpCdiAlcohol_overall',
  'cardinality',
  'cardinalityCdiAlcohol',
  'esIrrelevanteCdiAlcohol',
  'isCharacter',
  'listaEstadosDatosCauseOfDeathSinEstadosMaestra',
  'rawNamesFipsCodes',
  'rawNamesUnderlyingCauseOfDeath',
  'varCdiAlcohol',
  'varCharacterNames',
  'tmpCdiAlcohol',
  'tmpFipsCodes',
  'tmpUnderlyingCauseOfDeathAlcohol'
))
gc()
```

## Análisis exploratorio de datos

### 03a - Visión general del *data.frame*: `summarytools::dfSummary()`

Se realizó un resumen de cada *data.frame* con los siguientes elementos:

-   Nombre de variables y tipos,
-   Etiquetas (si existían)
-   Niveles de los factores,
-   Frecuencias y / o estadísticos de resumen numéricos,
-   Gráficos de barras / histogramas, y
-   Conteos y proporciones de observaciones válidas / faltantes.

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

```{r}
#| code-fold: true

data |> 
  summarytools::dfSummary() 
```
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

```{r}
#| code-fold: true

data_gender |> 
  summarytools::dfSummary() 
```
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

```{r}
#| code-fold: true

data_overall |> 
  summarytools::dfSummary() 
```
:::

### 03b - Explorar variables categóricas: `SmartEDA::ExpCatViz()`

En el análisis se revisó para cada variable categórica:

-   Frecuencia relativa de cada nivel de la variable respecto al total de observaciones
-   La frecuencia relativa de datos faltantes, si existían

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

tmp <- data[,c("State", "Sex")] |> 
  SmartEDA::ExpCatViz(
    clim = 60
  )
ggplot2::ggsave(
  plot = tmp[[1]],
  here::here('notebooks', 'images', 'eda_data_03b_01_sex.jpg')
)
ggplot2::ggsave(
  plot = tmp[[2]],
  here::here('notebooks', 'images', 'eda_data_03b_02_state.jpg')
)
rm(tmp)
```

Existen 2 variables categóricas: `Sex` y `State`, con la siguiente distribución de niveles entre las observaciones:

![](images/eda_data_03b_01_sex.jpg)

![](images/eda_data_03b_02_state.jpg)
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

tmp <- data_gender[,c("State", "Sex")] |> 
  SmartEDA::ExpCatViz(
    clim = 60
  )

ggplot2::ggsave(
  plot = tmp[[1]],
  here::here('notebooks', 'images', 'eda_data_gender_03b_01_sex.jpg')
)
ggplot2::ggsave(
  plot = tmp[[2]],
  here::here('notebooks', 'images', 'eda_data_gender_03b_02_state.jpg')
)
rm(tmp)
```

![](images/eda_data_gender_03b_01_sex.jpg)

![](images/eda_data_gender_03b_02_state.jpg)
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

tmp <- data_overall[,c("State")] |> 
  SmartEDA::ExpCatViz(
    clim = 60
  )

ggplot2::ggsave(
  plot = tmp[[1]],
  here::here('notebooks', 'images', 'eda_data_overall_03b_01_state.jpg')
)
rm(tmp)
```

![](images/eda_data_overall_03b_01_state.jpg)
:::

### 03c - Explorar variables numéricas (*Estadística descriptiva*): `SmartEDA::ExpNumStat()`

Para las variables numéricas de cada *data.frame* se exploraron los siguientes aspectos:

-   Número de variables (columnas) y de observaciones (filas)
-   Número y porcentaje de valores faltantes (`NA`)
-   Valoración de la escala de magnitud de cada variable, y comparación relativa entre las varaibles
-   Evaluación del sesgo y la kurtosis
-   Análisis básico de *outliers*

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

smartEda_data <- SmartEDA::ExpNumStat(
  data,
  # Qnt = c(.25, .5, 0.75),
  Outlier = TRUE
  ) 
smartEda_data

tmp <- smartEda_data |> 
  flextable::flextable()

tmp <- flextable::autofit(tmp)
flextable::save_as_image(
  x = tmp, 
  path = here::here("notebooks", "images","eda_data_03c.png")
  )

rm(tmp)
```

Respecto a las variables numéricas del *data.frame*:

-   Existen `r nrow(smartEda_data)` variables numéricas, con `r max(smartEda_data$TN)` observaciones en total
-   Existen valores faltantes `NA` en todas las variables, con un rango de valores faltantes entre el `r min(smartEda_data$Per_of_Missing)`% y el `r max(smartEda_data$Per_of_Missing)`%
-   Las variables tienen una escala de magnitud muy diferente entre sí
-   La mitad de las variables están más o menos centradas, y la otra mitad sesgadas. Sólo una de las variables tiene una kurtosis similar a la de la distribución normal. Cuatro de las variables son más achatadas, y tres más picudas.
-   Algunas variables tienen bastantes *outliers*. Las más afectadas son `AgeAdjustedDeathRate`, `Deaths`, `PercentageOfTotalDeaths` y `Population`.
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

smartEda_data_gender <- SmartEDA::ExpNumStat(
  data_gender,
  # Qnt = c(.25, .5, 0.75),
  Outlier = TRUE
  ) 
smartEda_data_gender

tmp <- smartEda_data_gender |>  
  flextable::flextable()

tmp <- flextable::autofit(tmp)
flextable::save_as_image(
  x = tmp, 
  path = here::here("notebooks", "images","eda_data_gender_03c.png")
  )

rm(tmp)
```

Respecto a las variables numéricas del *data.frame*:

-   Existen `r nrow(smartEda_data_gender)` variables numéricas, con `r max(smartEda_data_gender$TN)` observaciones en total
-   Existen valores faltantes `NA` en cinco variables, con un rango de valores faltantes entre el `r min(smartEda_data_gender$Per_of_Missing)`% y el `r max(smartEda_data_gender$Per_of_Missing)`%
-   Las variables tienen una escala de magnitud muy diferente entre sí
-   La mitad de las variables están más o menos centradas, y la otra mitad sesgadas. Sólo una de las variables tiene una kurtosis similar a la de la distribución normal. Cuatro de las variables son más achatadas, y tres más picudas.
-   Las variables con mayor número de *outliers* son `AgeAdjustedDeathRate`, `Deaths`, `PercentageOfTotalDeaths` y `Population`.
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

smartEda_data_overall <- SmartEDA::ExpNumStat(
  data_overall,
  # Qnt = c(.25, .5, 0.75),
  Outlier = TRUE
  ) 
smartEda_data_overall

tmp <- smartEda_data_overall |>  
  flextable::flextable()

tmp <- flextable::autofit(tmp)
flextable::save_as_image(
  x = tmp, 
  path = here::here("notebooks", "images","eda_data_overall_03c.png")
  )

rm(tmp)
```

Respecto a las variables numéricas del *data.frame*:

-   Existen `r nrow(smartEda_data_overall)` variables numéricas, con `r max(smartEda_data_overall$TN)` observaciones en total
-   Existen valores faltantes `NA` en cuatro variables, con un rango de valores faltantes entre el `r min(smartEda_data_overall$Per_of_Missing)`% y el `r max(smartEda_data_overall$Per_of_Missing)`%
-   Las variables tienen una escala de magnitud muy diferente entre sí
-   La mitad de las variables están más o menos centradas, y la otra mitad sesgadas. Sólo una de las variables tiene una kurtosis similar a la de la distribución normal. Cuatro de las variables son más achatadas, y tres más picudas.
-   Las variables con mayor número de *outliers* son `AgeAdjustedDeathRate`, `Deaths`, `PercentageOfTotalDeaths` y `Population`.
:::

### 03d - Explorar distribuciones (*skewness and kurtosis tests*)

Se evaluó la distribución de probabilidad de las variables numéricas. Para ello, se utilizaron las siguientes técnicas:

-   03da - Visualización de las distribuciones (histograma y función de densidad)
-   03db - Test de hipótesis de la centralidad (kurtosis y sesgo)

Cuando ambos test son no significativos, la variable puede seguir una distribución aproximadamente normal.

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

::: {.callout-caution title="03da - Visualización de las distribuciones" collapse="true"}
Se utilizaron dos tipos de gráfico para evaluar la distribución de las variables aleatorias numéricas:

-   Histogramas
-   Funciones de densidad

##### 03da - Visualización de las distribuciones (histograma y función de densidad)

###### Gráfico - histogramas

La función `DataExplorer::plot_histogram()` crea histogramas para las variables de clase `numeric` o `integer` de un dataset.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data |> 
  DataExplorer::plot_histogram(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03da_histograma.jpg')
)
```

![](images/eda_data_03da_histograma.jpg)

###### Gráfico - Función de densidad de probabilidad

La función `DataExplorer::plot_density()` dibuja la función de densidad de probabilidad para las variables de clase `numeric` o `integer` de un dataset.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data |> 
  DataExplorer::plot_density(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03db_densidad.jpg')
)
```

![](images/eda_data_03db_densidad.jpg)
:::

::: {.callout-caution title="03db - Test de hipótesis de la centralidad - Kurtosis y Sesgo (*skewness*)" collapse="true"}
##### 03db - Test de hipótesis de la centralidad (kurtosis y sesgo)

Los test de hipótesis de centralidad (Kurtosis y sesgo) orientan para saber qué variables podrían seguir una distribución normal. Se utilizan dos test:

-   Test de hipótesis de la kurtosis (Anscombe-Glynn)
-   Test de hipótesis del sesgo (D'Agostino)

La hipótesis nula de los dos test asumen que la variable numérica evaluada sigue una distribución con un sesgo (o una kurtosis) similar a la de una distribución normal.

::: {.callout-tip title="Test de hipótesis de la kurtosis (Anscombe-Glynn)" collapse="true" icon="false"}
###### Test de hipótesis de la kurtosis - Anscombe-Glynn

Contrasta dos hipótesis:

-   Hipótesis nula - La distribución tiene una kurtosis igual a 3 (como una normal)
-   Hipótesis alternativa - La distribución no tiene una kurtosis igual a 3

Resultados:

-   Para las variables `Deaths`, `Population`, `AgeAdjustedDeathRate`, `PercentageOfTotalDeaths` y `BingeDrinkingIntensityAdults` el $p$-valor del test de Anscombe-Glynn es $< 0.05$, por lo que rechazamos la hipótesis nula y aceptamos la alternativa, asumiendo que la distribución tiene una curtosis diferente de 3 (distribución normal), por lo que no están distribuidas normalmente.
-   Para las variables `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults` el $p$-valor del test de Anscombe-Glynn es $> 0.05$, por lo que no podemos rechazar la hipótesis nula de que la variable tiene curtosis igual a 3 (distribución normal), por lo que pueden estar distribuidas normalmente.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable Deaths
data$Deaths |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable Population
data$Population |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable AgeAdjustedDeathRate
data$AgeAdjustedDeathRate |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable PercentageOfTotalDeaths
data$PercentageOfTotalDeaths |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable HeavyDrinkingAdults
data$HeavyDrinkingAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingFrecuencyAdults
data$BingeDrinkingFrecuencyAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingIntensityAdults
data$BingeDrinkingIntensityAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingPrevalenceAdults
data$BingeDrinkingPrevalenceAdults |> 
 moments::anscombe.test()
```
:::

::: {.callout-tip title="Test de hipótesis de sesgo (D'Agostino)" collapse="true" icon="false"}
###### Test de hipótesis de sesgo - D'Agostino

Contrasta dos hipótesis:

-   Hipótesis nula - La distribución no está sesgada (como una distribución normal)
-   Hipótesis alternativa - La distribución está sesgada

Resultados:

-   Para las variables `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths` el $p$-valor del test D'Agostino es $< 0.05$, por lo que rechazamos la hipótesis nula y aceptamos la alternativa, asumiendo que la distribución está sesgada significativamente, y no está distribuida normalmente; es posible que existan outliers.
-   Para `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults` el $p$-valor del test D'Agostino es $> 0.05$, por lo que no podemos rechazar la hipótesis nula y afirmar que exista sesgo.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Test de hipótesis de sesgo - D'Agostino
### Variable Deaths
data$Deaths |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable Population
data$Population |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable AgeAdjustedDeathRate
data$AgeAdjustedDeathRate |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable PercentageOfTotalDeaths
data$PercentageOfTotalDeaths |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable HeavyDrinkingAdults
data$HeavyDrinkingAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingFrecuencyAdults
data$BingeDrinkingFrecuencyAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingIntensityAdults
data$BingeDrinkingIntensityAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingPrevalenceAdults
data$BingeDrinkingPrevalenceAdults |> 
 moments::agostino.test()
```
:::

Los resultados obtenidos al aplicar los test a las variables numéricas fueron los siguientes:

| Variable                        | Test kurtosis<br>Anscombe-Glynn | Test sesgo<br>D'Agostino |
|---------------------------------|---------------------------------|--------------------------|
| `Deaths`                        | $< 0.05$                        | $< 0.05$                 |
| `Population`                    | $< 0.05$                        | $< 0.05$                 |
| `AgeAdjustedDeathRate`          | $< 0.05$                        | $< 0.05$                 |
| `PercentageOfTotalDeaths`       | $< 0.05$                        | $< 0.05$                 |
| `HeavyDrinkingAdults`           | No significativo                | No significativo         |
| `BingeDrinkingFrecuencyAdults`  | No significativo                | No significativo         |
| `BingeDrinkingIntensityAdults`  | $< 0.05$                        | No significativo         |
| `BingeDrinkingPrevalenceAdults` | No significativo                | No significativo         |
:::
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

::: {.callout-caution title="03da - Visualización de las distribuciones" collapse="true"}
Se utilizaron dos tipos de gráfico para evaluar la distribución de las variables aleatorias numéricas de nuestra muestra:

-   Histogramas
-   Funciones de densidad

##### 03da - Visualización de las distribuciones (histograma y función de densidad)

###### Gráfico - histogramas

La función `DataExplorer::plot_histogram()` crea histogramas para las variables de clase `numeric` o `integer` de un data_overallset.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data_gender |> 
  DataExplorer::plot_histogram(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
    )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03da_histograma.jpg')
)
```

![](images/eda_data_gender_03da_histograma.jpg)

###### Gráfico - Función de densidad de probabilidad

La función `data_genderExplorer::plot_density()` dibuja la función de densidad de probabilidad para las variables de clase `numeric` o `integer` de un data_genderset.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data_gender |> 
  DataExplorer::plot_density(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
    )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03db_densidad.jpg')
)
```

![](images/eda_data_gender_03db_densidad.jpg)
:::

::: {.callout-caution title="03db - Test de hipótesis de la centralidad - Kurtosis y Sesgo (*skewness*)" collapse="true"}
##### 03db - Test de hipótesis de la centralidad (kurtosis y sesgo)

Los test de hipótesis de centralidad (Kurtosis y sesgo) orientan para saber qué variables podrían seguir una distribución normal. Se utilizan dos test:

-   Test de hipótesis de la kurtosis (Anscombe-Glynn)
-   Test de hipótesis del sesgo (D'Agostino)

La hipótesis nula de los dos test asumen que la variable numérica evaluada sigue una distribución con un sesgo (o una kurtosis) similar a la de una distribución normal.

::: {.callout-tip title="Test de hipótesis de la kurtosis (Anscombe-Glynn)" collapse="true" icon="false"}
###### Test de hipótesis de la kurtosis - Anscombe-Glynn

Contrasta dos hipótesis:

-   Hipótesis nula - La distribución tiene una kurtosis igual a 3 (como una normal)
-   Hipótesis alternativa - La distribución no tiene una kurtosis igual a 3

Resultados:

-   Para las variables `Deaths`, `Population`, `AgeAdjustedDeathRate`, `PercentageOfTotalDeaths` y `BingeDrinkingIntensityAdults` el $p$-valor del test de Anscombe-Glynn es $< 0.05$, por lo que rechazamos la hipótesis nula y aceptamos la alternativa, asumiendo que la distribución tiene una curtosis diferente de 3 (distribución normal), por lo que no están distribuidas normalmente.
-   Para las variables `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults` el $p$-valor del test de Anscombe-Glynn es $> 0.05$, por lo que no podemos rechazar la hipótesis nula de que la variable tiene curtosis igual a 3 (distribución normal), por lo que pueden estar distribuidas normalmente.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable Deaths
data_gender$Deaths |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable Population
data_gender$Population |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable AgeAdjustedDeathRate
data_gender$AgeAdjustedDeathRate |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable PercentageOfTotalDeaths
data_gender$PercentageOfTotalDeaths |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable HeavyDrinkingAdults
data_gender$HeavyDrinkingAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingFrecuencyAdults
data_gender$BingeDrinkingFrecuencyAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingIntensityAdults
data_gender$BingeDrinkingIntensityAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingPrevalenceAdults
data_gender$BingeDrinkingPrevalenceAdults |> 
 moments::anscombe.test()
```
:::

::: {.callout-tip title="Test de hipótesis de sesgo (D'Agostino)" collapse="true" icon="false"}
###### Test de hipótesis de sesgo - D'Agostino

Contrasta dos hipótesis:

-   Hipótesis nula - La distribución no está sesgada (como una distribución normal)
-   Hipótesis alternativa - La distribución está sesgada

Resultados:

-   Para las variables `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths` el $p$-valor del test D'Agostino es $< 0.05$, por lo que rechazamos la hipótesis nula y aceptamos la alternativa, asumiendo que la distribución está sesgada significativamente, y no está distribuida normalmente; es posible que existan outliers.
-   Para `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults` el $p$-valor del test D'Agostino es $> 0.05$, por lo que no podemos rechazar la hipótesis nula y afirmar que exista sesgo.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Test de hipótesis de sesgo - D'Agostino
### Variable Deaths
data_gender$Deaths |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable Population
data_gender$Population |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable AgeAdjustedDeathRate
data_gender$AgeAdjustedDeathRate |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable PercentageOfTotalDeaths
data_gender$PercentageOfTotalDeaths |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable HeavyDrinkingAdults
data_gender$HeavyDrinkingAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingFrecuencyAdults
data_gender$BingeDrinkingFrecuencyAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingIntensityAdults
data_gender$BingeDrinkingIntensityAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingPrevalenceAdults
data_gender$BingeDrinkingPrevalenceAdults |> 
 moments::agostino.test()
```
:::

Los resultados obtenidos al aplicar los test a las variables numéricas fueron los siguientes:

| Variable                        | Test kurtosis<br>Anscombe-Glynn | Test sesgo<br>D'Agostino |
|---------------------------------|---------------------------------|--------------------------|
| `Deaths`                        | $< 0.05$                        | $< 0.05$                 |
| `Population`                    | $< 0.05$                        | $< 0.05$                 |
| `AgeAdjustedDeathRate`          | $< 0.05$                        | $< 0.05$                 |
| `PercentageOfTotalDeaths`       | $< 0.05$                        | $< 0.05$                 |
| `HeavyDrinkingAdults`           | $< 0.05$                        | No significativo         |
| `BingeDrinkingFrecuencyAdults`  | No significativo                | No significativo         |
| `BingeDrinkingIntensityAdults`  | $< 0.05$                        | No significativo         |
| `BingeDrinkingPrevalenceAdults` | $< 0.05$                        | No significativo         |
:::
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

::: {.callout-caution title="03da - Visualización de las distribuciones" collapse="true"}
Se utilizaron dos tipos de gráfico para evaluar la distribución de las variables aleatorias numéricas de nuestra muestra:

-   Histogramas
-   Funciones de densidad

##### 03da - Visualización de las distribuciones (histograma y función de densidad)

###### Gráfico - histogramas

La función `DataExplorer::plot_histogram()` crea histogramas para las variables de clase `numeric` o `integer` de un dataset.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data_overall |> 
  DataExplorer::plot_histogram(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_overall_03da_histograma.jpg')
)
```

![](images/eda_data_overall_03da_histograma.jpg)

###### Gráfico - Función de densidad de probabilidad

La función `data_genderExplorer::plot_density()` dibuja la función de densidad de probabilidad para las variables de clase `numeric` o `integer` de un dataset.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data_overall |> 
  DataExplorer::plot_density(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
    )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_overall_03db_densidad.jpg')
)
```

![](images/eda_data_gender_03db_densidad.jpg)
:::

::: {.callout-caution title="03db - Test de hipótesis de la centralidad - Kurtosis y Sesgo (*skewness*)" collapse="true"}
##### 03db - Test de hipótesis de la centralidad (kurtosis y sesgo)

Los test de hipótesis de centralidad (Kurtosis y sesgo) orientan para saber qué variables podrían seguir una distribución normal. Se utilizan dos test:

-   Test de hipótesis de la kurtosis (Anscombe-Glynn)
-   Test de hipótesis del sesgo (D'Agostino)

La hipótesis nula de los dos test asumen que la variable numérica evaluada sigue una distribución con un sesgo (o una kurtosis) similar a la de una distribución normal.

::: {.callout-tip title="Test de hipótesis de la kurtosis (Anscombe-Glynn)" collapse="true" icon="false"}
###### Test de hipótesis de la kurtosis - Anscombe-Glynn

Contrasta dos hipótesis:

-   Hipótesis nula - La distribución tiene una kurtosis igual a 3 (como una normal)
-   Hipótesis alternativa - La distribución no tiene una kurtosis igual a 3

Resultados:

-   Para las variables `Deaths`, `Population`, `AgeAdjustedDeathRate`, `PercentageOfTotalDeaths` y `BingeDrinkingIntensityAdults` el $p$-valor del test de Anscombe-Glynn es $< 0.05$, por lo que rechazamos la hipótesis nula y aceptamos la alternativa, asumiendo que la distribución tiene una curtosis diferente de 3 (distribución normal), por lo que no están distribuidas normalmente.
-   Para las variables `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults` el $p$-valor del test de Anscombe-Glynn es $> 0.05$, por lo que no podemos rechazar la hipótesis nula de que la variable tiene curtosis igual a 3 (distribución normal), por lo que pueden estar distribuidas normalmente.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable Deaths
data_overall$Deaths |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable Population
data_overall$Population |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable AgeAdjustedDeathRate
data_overall$AgeAdjustedDeathRate |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable PercentageOfTotalDeaths
data_overall$PercentageOfTotalDeaths |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable HeavyDrinkingAdults
data_overall$HeavyDrinkingAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingFrecuencyAdults
data_overall$BingeDrinkingFrecuencyAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingIntensityAdults
data_overall$BingeDrinkingIntensityAdults |> 
 moments::anscombe.test()

## Test de hipótesis de la kurtosis (Anscombe-Glynn)
### Variable BingeDrinkingPrevalenceAdults
data_overall$BingeDrinkingPrevalenceAdults |> 
 moments::anscombe.test()
```
:::

::: {.callout-tip title="Test de hipótesis de sesgo (D'Agostino)" collapse="true" icon="false"}
###### Test de hipótesis de sesgo - D'Agostino

Contrasta dos hipótesis:

-   Hipótesis nula - La distribución no está sesgada (como una distribución normal)
-   Hipótesis alternativa - La distribución está sesgada

Resultados:

-   Para las variables `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths` el $p$-valor del test D'Agostino es $< 0.05$, por lo que rechazamos la hipótesis nula y aceptamos la alternativa, asumiendo que la distribución está sesgada significativamente, y no está distribuida normalmente; es posible que existan outliers.
-   Para `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults` el $p$-valor del test D'Agostino es $> 0.05$, por lo que no podemos rechazar la hipótesis nula y afirmar que exista sesgo.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Test de hipótesis de sesgo - D'Agostino
### Variable Deaths
data_overall$Deaths |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable Population
data_overall$Population |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable AgeAdjustedDeathRate
data_overall$AgeAdjustedDeathRate |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable PercentageOfTotalDeaths
data_overall$PercentageOfTotalDeaths |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable HeavyDrinkingAdults
data_overall$HeavyDrinkingAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingFrecuencyAdults
data_overall$BingeDrinkingFrecuencyAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingIntensityAdults
data_gender$BingeDrinkingIntensityAdults |> 
 moments::agostino.test()

## Test de hipótesis de sesgo - D'Agostino
### Variable BingeDrinkingPrevalenceAdults
data_overall$BingeDrinkingPrevalenceAdults |> 
 moments::agostino.test()
```
:::

Los resultados obtenidos al aplicar los test a las variables numéricas fueron los siguientes:

| Variable                        | Test kurtosis<br>Anscombe-Glynn | Test sesgo<br>D'Agostino |
|---------------------------------|---------------------------------|--------------------------|
| `Deaths`                        | $< 0.05$                        | $< 0.05$                 |
| `Population`                    | $< 0.05$                        | $< 0.05$                 |
| `AgeAdjustedDeathRate`          | $< 0.05$                        | $< 0.05$                 |
| `PercentageOfTotalDeaths`       | $< 0.05$                        | $< 0.05$                 |
| `HeavyDrinkingAdults`           | No significativo                | No significativo         |
| `BingeDrinkingFrecuencyAdults`  | No significativo                | $< 0.05$                 |
| `BingeDrinkingIntensityAdults`  | $< 0.05$                        | No significativo         |
| `BingeDrinkingPrevalenceAdults` | No significativo                | No significativo         |
:::
:::

### 03e - Explorar normalidad (*QQ-plots and Shapiro-Wilk*)

Para explorar la normalidad de las variables se utilizaron las siguientes técnicas:

| Técnica                     | Descripción                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
|-----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Evaluación gráfica: QQ-Plot | Método gráfico para el diagnóstico de diferencias entre la distribución de probabilidad de una población de la que se ha extraído una muestra aleatoria y una distribución usada para la comparación [@eswiki:130441335]                                                                                                                                                                                                                                                                      |
| Test de Shapiro-Wilks       | Se considera el test más potente para testar la normalidad, seguido de cerca por el Anderson--Darling<br><br>- $H_0$: Los datos provienen de una variable normalmente distribuida<br>- $H_1$: Los datos no están distribuidos según una distribución normal.<br><br>Si la muestra es muy grande, es posible que el test detecte desviaciones mínimas frente a la normal, que no tengan importancia práctica. Por eso el test debe interpretarse siempre conjuntamente con el gráfico QQ-plot. |

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

Hay tres variables que se ajustan aproximadamente a una distribución normal, tanto visualmente como en el test de hipótesis de Shapiro-Wilks: `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`. Son las mismas tres variables con los test de kurtosis y sesgo no significativos.

##### Test gráfico - QQ plot (`DataExplorer::plot_qq()`)

Hay tres variables que, visualmente se ajustan aproximadamente a una distribución normal: `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`. Son las mismas tres variables con los test de kurtosis y sesgo no significativos.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data |> 
  DataExplorer::plot_qq(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
    )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03e_qqplot_general.jpg')
)


```

![](images/eda_data_03e_qqplot_general.jpg)

Cuando estratificamos por la variable sexo, estas variables mantienen su tendencia a la normalidad

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false


data |> 
  DataExplorer::plot_qq(
    by = 'Sex',
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03e_qqplot_bySex.jpg')
)
```

![](images/eda_data_03e_qqplot_bySex.jpg)

##### Test de hipótesis (Shapiro-Wilk)

Hay tres variables con un test no significativo, y, por tanto, no es posible rechazar la hipótesis nula de normalidad: `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data |> 
  dlookr::normality() |> 
  dplyr::mutate_if(is.numeric, ~round(., digits = 3)) |> 
  flextable::flextable()
```
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

Hay una variable que, visualmente se ajusta aproximadamente a una distribución normal: `BingeDrinkingFrecuencyAdults`. Hay muchas variables que son aproximadamente normales en el centro de la distribución, pero que no lo son en los extremos (outliers).

##### Test gráfico - QQ plot (`DataExplorer::plot_qq()`)

Hay una variable que, visualmente se ajustan aproximadamente a una distribución normal: `BingeDrinkingFrecuencyAdults`. Hay muchas variables que son aproximadamente normales en el centro de la distribución, pero que no lo son en los extremos (outliers).

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data_gender |> 
  DataExplorer::plot_qq(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
    )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03e_qqplot_general.jpg')
)

```

![](images/eda_data_gender_03e_qqplot_general.jpg)

Cuando estratificamos por la variable sexo, estas variables mantienen su tendencia a la normalidad, y persiste la influencia de los outliers, especialmente para los varones.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false


data_gender |> 
  DataExplorer::plot_qq(
    by = 'Sex',
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03e_qqplot_bySex.jpg')
)
```

![](images/eda_data_gender_03e_qqplot_bySex.jpg)

##### Test de hipótesis (Shapiro-Wilk)

Hay una variable con un test no significativo, y, por tanto, no es posible rechazar la hipótesis nula de normalidad: `BingeDrinkingFrecuencyAdults`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data_gender |> 
  dlookr::normality() |> 
  dplyr::mutate_if(is.numeric, ~round(., digits = 3)) |> 
  flextable::flextable()
```
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

Al considerar los datos globales, ninguna variable se ajusta ni visualmente ni en el test de hipótesis a una distribución normal.

##### Test gráfico - QQ plot (`DataExplorer::plot_qq()`)

Visualmente, ninguna variable se ajusta a lo esperado en una distribución normal..

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

data_overall |> 
  DataExplorer::plot_qq(
    ggtheme = ggplot2::theme_bw(),
    nrow = 4L,
    ncol = 2L
    )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_overall_03e_qqplot_general.jpg')
)

```

![](images/eda_data_overall_03e_qqplot_general.jpg)

##### Test de hipótesis (Shapiro-Wilk)

Ninguna variable tiene un test no significativo, y, por tanto, no es posible afirmar la hipótesis nula de normalidad.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data_overall |> 
  dlookr::normality() |> 
  dplyr::mutate_if(is.numeric, ~round(., digits = 3)) |> 
  flextable::flextable()
```
:::

### 03f - Comparar grupos (*Boxplots, non-parametric tests*)

Para la comparación entre grupos, se utilizaron dos técnicas:

-   La valoración gráfica, mediante boxplots
-   El test de hipótesis no paramétrico

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

El objeto `data` tiene la variable `Sex`, con tres niveles que son redundantes entre sí: Hombres, Mujeres y valoración global.

En la fase exploratoria, esta variable se utilizó para comparar los indicadores entre hombres y mujeres, y entre cada uno de ellos con la media global.

::: {.callout-caution title="03fa - Valoración gráfica: `DataExplorer::plot_boxplot()`" collapse="true"}
##### 03fa - Valoración gráfica: `DataExplorer::plot_boxplot()`

Se observa una diferencia entre los dos sexos, y entre cada sexo con la media, para las variables, `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults`. También se ha observa una diferencia entre hombres y mujeres para la variable `AgeAdjustedDeathRate`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

## Reordenamos los niveles de los factores para una visualización más equilibrada
data$State  <- with(
  data,
  reorder(State , AgeAdjustedDeathRate, median , na.rm = T)
  )

data |> 
  DataExplorer::plot_boxplot(
    geom_boxplot_args = list('outlier.colour' = 'darkred'),
    ggtheme = ggplot2::theme_bw(),
    by = 'Sex',
    nrow = 4L,
    ncol = 2L
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fa_boxplot.jpg')
)
```

![](images/eda_data_03fa_boxplot.jpg)
:::

::: {.callout-caution title="03fb - Test de hipótesis: `ggstatsplot::ggbetweenstats()`" collapse="true"}
##### 03fb - Test de hipótesis: `ggstatsplot::ggbetweenstats()`

Se evidenciaron diferencias estadísticamente significativas entre hombres y mujeres, y entre cada uno de ellos con la media general, para las variables `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults`. También se ha evidenciado una diferencia significativa entre hombres y mujeres para la variable `AgeAdjustedDeathRate`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = AgeAdjustedDeathRate,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Age Adjusted Death Rate, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testAgeAdjustedDeathRate.jpg')
)
```

![](images/eda_data_03fb_testAgeAdjustedDeathRate.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = BingeDrinkingFrecuencyAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Binge Drinking Frecuency in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testBingeDrinkingFrecuencyAdults.jpg')
)
```

![](images/eda_data_03fb_testBingeDrinkingFrecuencyAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = BingeDrinkingIntensityAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Binge Drinking Intensity in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testBingeDrinkingIntensityAdults.jpg')
)
```

![](images/eda_data_03fb_testBingeDrinkingIntensityAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = BingeDrinkingPrevalenceAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Binge Drinking Prevalence in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testBingeDrinkingPrevalenceAdults.jpg')
)
```

![](images/eda_data_03fb_testBingeDrinkingPrevalenceAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = Deaths,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Deaths, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testDeaths.jpg')
)
```

![](images/eda_data_03fb_testDeaths.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = HeavyDrinkingAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Heavy Drinking in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testHeavyDrinkingAdults.jpg')
)
```

![](images/eda_data_03fb_testHeavyDrinkingAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = PercentageOfTotalDeaths,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Percentage of Total Deaths, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testPercentageOfTotalDeaths.jpg')
)
```

![](images/eda_data_03fb_testPercentageOfTotalDeaths.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

ggstatsplot::ggbetweenstats(
  data = data,
  x = Sex,
  y = Population,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Population, by sex"
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_03fb_testPopulation.jpg')
)

```

![](images/eda_data_03fb_testPopulation.jpg)
:::
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

::: {.callout-caution title="03fa - Valoración gráfica: `DataExplorer::plot_boxplot()`" collapse="true"}
##### 03fa - Valoración gráfica: `DataExplorer::plot_boxplot()`

Se observa una diferencia entre los dos sexos para las variables, `HeavyDrinkingAdults`, `AgeAdjustedDeathRate`, `BingeDrinkingPrevalenceAdults` y `BingeDrinkingIntensityAdults`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

## Reordenamos los niveles de los factores para una visualización más equilibrada
data_gender$State  <- with(
  data_gender, 
  reorder(State , AgeAdjustedDeathRate, median , na.rm = T)
  )

data_gender |> 
  DataExplorer::plot_boxplot(
    geom_boxplot_args = list('outlier.colour' = 'darkred'),
    ggtheme = ggplot2::theme_bw(),
    by = 'Sex',
    nrow = 4L,
    ncol = 2L
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fa_boxplot.jpg')
)
```

![](images/eda_data_gender_03fa_boxplot.jpg)
:::

::: {.callout-caution title="03fb - Test de hipótesis: `ggstatsplot::ggbetweenstats()`" collapse="true"}
##### 03fb - Test de hipótesis: `ggstatsplot::ggbetweenstats()`

Se evidenciaron diferencias estadísticamente significativas entre hombres y mujeres, y entre cada uno de ellos con la media general, para las variables `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults`. También se ha evidenciado una diferencia significativa entre hombres y mujeres para la variable `AgeAdjustedDeathRate`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = AgeAdjustedDeathRate,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Age Adjusted Death Rate, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testAgeAdjustedDeathRate.jpg')
)
```

![](images/eda_data_gender_03fb_testAgeAdjustedDeathRate.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = BingeDrinkingFrecuencyAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Binge Drinking Frecuency in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testBingeDrinkingFrecuencyAdults.jpg')
)
```

![](images/eda_data_gender_03fb_testBingeDrinkingFrecuencyAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = BingeDrinkingIntensityAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Binge Drinking Intensity in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testBingeDrinkingIntensityAdults.jpg')
)
```

![](images/eda_data_gender_03fb_testBingeDrinkingIntensityAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = BingeDrinkingPrevalenceAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Binge Drinking Prevalence in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testBingeDrinkingPrevalenceAdults.jpg')
)
```

![](images/eda_data_gender_03fb_testBingeDrinkingPrevalenceAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = Deaths,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Deaths, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testDeaths.jpg')
)
```

![](images/eda_data_gender_03fb_testDeaths.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = HeavyDrinkingAdults,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Heavy Drinking in Adults, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testHeavyDrinkingAdults.jpg')
)
```

![](images/eda_data_gender_03fb_testHeavyDrinkingAdults.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = PercentageOfTotalDeaths,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Percentage of Total Deaths, by sex"
  )
ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testPercentageOfTotalDeaths.jpg')
)
```

![](images/eda_data_gender_03fb_testPercentageOfTotalDeaths.jpg)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

ggstatsplot::ggbetweenstats(
  data = data_gender,
  x = Sex,
  y = Population,
  type = 'np'       # Nonparametric
) +
  ggplot2::ggtitle(
    "Population, by sex"
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_gender_03fb_testPopulation.jpg')
)

```

![](images/eda_data_gender_03fb_testPopulation.jpg)
:::
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

::: {.callout-caution title="03fa - Valoración gráfica: `DataExplorer::plot_boxplot()`" collapse="true"}
##### 03fa - Valoración gráfica: `DataExplorer::plot_boxplot()`

Se observan diferencias en el valor de los indicadores para todos los estados, para las distintas variables, identificándose estados con valores en torno a la media, y otros con valor muy superior.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| output: false

## Reordenamos los niveles de los factores para una visualización más equilibrada
data_overall$State  <- with(
  data_overall, 
  reorder(State , AgeAdjustedDeathRate, median , na.rm = T)
  )

data_overall |> 
  DataExplorer::plot_boxplot(
    by = 'State',
    ggtheme = ggplot2::theme_bw(),
    ncol = 4L,
    nrow = 2L
  )

ggplot2::ggsave(
  here::here('notebooks', 'images', 'eda_data_overall_03fa_boxplot.jpg')
)
```

![](images/eda_data_overall_03fa_boxplot.jpg)
:::

::: {.callout-caution title="03fb - Test de hipótesis: `ggstatsplot::ggbetweenstats()`" collapse="true"}
##### 03fb - Test de hipótesis: `ggstatsplot::ggbetweenstats()`

En este dataset no hay observaciones suficientes para hacer un análisis comparativo de las variables numéricas por los niveles de la variable `State`.
:::
:::

### 03g - Explorar correlaciones (*Several methods*)

Se utilizaron las siguientes técnicas para explorar la correlación:

-   03ga - Matriz de correlación, mediante el test de Spearman
-   03gb - Correlograma, para visualizar la fuerza, la significación estadística y la dirección de la correlación
-   03gc - El test de hipótesis estadístico para la correlación

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Función para convertir la tabla de correlación en un data.frame
## Tomada de http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software
flattenCorrMatrix <- function(cormat, pmat) {
  ut <- upper.tri(cormat)
  data.frame(
    row = rownames(cormat)[row(cormat)[ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor = (cormat)[ut],
    p = pmat[ut]
    )
}

```

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

::: {.callout-caution title="03ga - Correlation matrix" collapse="true"}
##### 03ga - Correlation matrix

Se exploraron las correlaciones entre variables numéricas con el test de Spearman. Se obtuvieron los siguientes resultados (en verde, las correlaciones estadísticamente significativas):

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap


# Análisis de correlación con `Hmisc::rcorr()`
corrAnalysis_data <- Hmisc::rcorr(
  as.matrix(data[,3:10]), 
  type = c("spearman")
  )

# Tabla para visualización de resultados
## Se colorean en verde las correlaciones significativas (test np Spearman)
## Método: https://stackoverflow.com/questions/62730125/flextable-basic-conditional-formatting
tmpTbl_data <- flattenCorrMatrix(
  round(corrAnalysis_data$r, 2), 
  round(corrAnalysis_data$P, 2)
  ) 
colormatrix_data <- ifelse(tmpTbl_data$p < .05, "lightgreen", "white")
tmpTbl_data |> 
  flextable::flextable() |> 
  flextable::bg(bg = colormatrix_data)

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

psych::pairs.panels(
  data[,3:10], 
  method = "spearman",
  hist.col = "steelblue", 
  show.points = TRUE, 
  stars = TRUE, 
  gap = 0.05, 
  pch = ".", 
  ellipses = FALSE, 
  scale = FALSE,
  jiggle = TRUE,
  factor = 2,
  main = "Correlation matrix", 
  col = "darkred", 
  pty = "m", 
  font = 2,
  )

```
:::

::: {.callout-caution title="03gb - Correlograma (visualización de la correlación)" collapse="true"}
##### 03gb - Correlograma (visualización de la correlación)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap


corrplot::corrplot(
  corrAnalysis_data$r, 
  method = "ellipse",
  type = "lower", 
  order = "hclust", 
  tl.col = "black", 
  diag = FALSE
  )
```
:::

::: {.callout-caution title="03gc - Test de hipótesis `ggstatsplot::ggcorrmat()`" collapse="true"}
##### 03gc - Test de hipótesis `ggstatsplot::ggcorrmat()`

Se han encontrado las siguientes correlaciones estadísticamente significativas:

-   Una correlación negativa entre `Population` y `AgeAdjustedDeathRate`

-   Una correlación positiva entre:

    -   `Deaths` y `Population`
    -   `Deaths` y `PercentageOfTotalDeaths`
    -   `Population` y `PercentageOfTotalDeaths`
    -   `HeavyDrinkingAdults` y `AgeAdjustedDeathRate`
    -   `BingeDrinkingPrevalenceAdults` y `HeavyDrinkingAdults`
    -   `BingeDrinkingPrevalenceAdults` y `BingeDrinkingFrecuencyAdults`
    -   `BingeDrinkingPrevalenceAdults` y `BingeDrinkingIntensityAdults`
    -   `BingeDrinkingIntensityAdults` y `BingeDrinkingFrecuencyAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

ggstatsplot::ggcorrmat(
  data = data,
  type = 'np',           ## Non-parametric Spearman correlation
  output = 'dataframe'
) 
```
:::
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

::: {.callout-caution title="03ga - Correlation matrix" collapse="true"}
##### 03ga - Correlation matrix

Se exploraron las correlaciones entre variables numéricas con el test de Spearman. Se obtuvieron los siguientes resultados (en verde, las correlaciones estadísticamente significativas):

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Análisis de correlación con `Hmisc::rcorr()`
corrAnalysis_data_gender <- Hmisc::rcorr(
  as.matrix(data_gender[,3:10]), 
  type = c("spearman")
  )

# Tabla para visualización de resultados
## Se colorean en verde las correlaciones significativas (test np Spearman)
## Método: https://stackoverflow.com/questions/62730125/flextable-basic-conditional-formatting
tmpTbl_data_gender <- flattenCorrMatrix(
  round(corrAnalysis_data_gender$r, 2), 
  round(corrAnalysis_data_gender$P, 2)
  ) 
colormatrix_data_gender <- ifelse(tmpTbl_data_gender$p < .05, "lightgreen", "white")
tmpTbl_data_gender |> 
  flextable::flextable() |> 
  flextable::bg(bg = colormatrix_data_gender)

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

psych::pairs.panels(
  data_gender[,3:10], 
  method = "spearman",
  hist.col = "steelblue", 
  show.points = TRUE, 
  stars = TRUE, 
  gap = 0.05, 
  pch = ".", 
  ellipses = FALSE, 
  scale = FALSE,
  jiggle = TRUE,
  factor = 2,
  main = "Correlation matrix", 
  col = "darkred", 
  pty = "m", 
  font = 2,
  )

```
:::

::: {.callout-caution title="03gb - Correlograma (visualización de la correlación)" collapse="true"}
##### 03gb - Correlograma (visualización de la correlación)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap


corrplot::corrplot(
  corrAnalysis_data_gender$r, 
  method = "ellipse",
  type = "lower", 
  order = "hclust", 
  tl.col = "black", 
  diag = FALSE
  )
```
:::

::: {.callout-caution title="03gc - Test de hipótesis `ggstatsplot::ggcorrmat()`" collapse="true"}
##### 03gc - Test de hipótesis `ggstatsplot::ggcorrmat()`

Se han encontrado las siguientes correlaciones estadísticamente significativas:

-   Una correlación negativa entre `Population` y `Deaths`.
-   Una correlación positiva entre:
    -   `Deaths` y `PercentageOfTotalDeaths`.
    -   `Deaths` y `BingeDrinkingIntensityAdults`.
    -   `Deaths` y `BingeDrinkingPrevalenceAdults`.
    -   `Population` y `AgeAdjustedDeathRate`.
    -   `Population` y `PercentageOfTotalDeaths`.
    -   `Population` y `BingeDrinkingFrecuencyAdults`.
    -   `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`.
    -   `AgeAdjustedDeathRate` y `BingeDrinkingFrecuencyAdults`.
    -   `AgeAdjustedDeathRate` y `BingeDrinkingIntensityAdults`.
    -   `AgeAdjustedDeathRate` y `BingeDrinkingPrevalenceAdults`.
    -   `PercentageOfTotalDeaths` y `BingeDrinkingIntensityAdults`.
    -   `PercentageOfTotalDeaths` y `BingeDrinkingPrevalenceAdults`.
    -   `HeavyDrinkingAdults` y `BingeDrinkingIntensityAdults`.
    -   `HeavyDrinkingAdults` y `BingeDrinkingPrevalenceAdults`.
    -   `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`.
    -   `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

ggstatsplot::ggcorrmat(
  data = data_gender,
  type = 'np',           ## Non-parametric Spearman correlation
  output = 'dataframe'
) 
```
:::
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

::: {.callout-caution title="03ga - Correlation matrix" collapse="true"}
##### 03ga - Correlation matrix

Se exploraron las correlaciones entre variables numéricas con el test de Spearman. Se obtuvieron los siguientes resultados (en verde, las correlaciones estadísticamente significativas):

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Análisis de correlación con `Hmisc::rcorr()`
corrAnalysis_data_overall <- Hmisc::rcorr(
  as.matrix(data_overall[,2:9]), 
  type = c("spearman")
  )

# Tabla para visualización de resultados
## Se colorean en verde las correlaciones significativas (test np Spearman)
## Método: https://stackoverflow.com/questions/62730125/flextable-basic-conditional-formatting
tmpTbl_data_overall <- flattenCorrMatrix(
  round(corrAnalysis_data_overall$r, 2), 
  round(corrAnalysis_data_overall$P, 2)
  ) 
colormatrix_data_overall <- ifelse(tmpTbl_data_overall$p < .05, "lightgreen", "white")
tmpTbl_data_overall |> 
  flextable::flextable() |> 
  flextable::bg(bg = colormatrix_data_overall)

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

psych::pairs.panels(
  data_overall[,2:9], 
  method = "spearman",
  hist.col = "steelblue", 
  show.points = TRUE, 
  stars = TRUE, 
  gap = 0.05, 
  pch = ".", 
  ellipses = FALSE, 
  scale = FALSE,
  jiggle = TRUE,
  factor = 2,
  main = "Correlation matrix", 
  col = "darkred", 
  pty = "m", 
  font = 2,
  )

```
:::

::: {.callout-caution title="03gb - Correlograma (visualización de la correlación)" collapse="true"}
##### 03gb - Correlograma (visualización de la correlación)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap


corrplot::corrplot(
  corrAnalysis_data_overall$r, 
  method = "ellipse",
  type = "lower", 
  order = "hclust", 
  tl.col = "black", 
  diag = FALSE
  )
```
:::

::: {.callout-caution title="03gc - Test de hipótesis `ggstatsplot::ggcorrmat()`" collapse="true"}
##### 03gc - Test de hipótesis `ggstatsplot::ggcorrmat()`

Se han encontrado las siguientes correlaciones estadísticamente significativas:

-   Una correlación negativa entre:
    -   `Deaths` y `HeavyDrinkingAdults`.
    -   `Population` y `AgeAdjustedDeathRate`.
    -   `Population` y `HeavyDrinkingAdults`.
-   Una correlación positiva entre:
    -   `Deaths` y `Population`.
    -   `Deaths` y `PercentageOfTotalDeaths`.
    -   `PercentageOfTotalDeaths` y `HeavyDrinkingAdults`.
    -   `Population` y `PercentageOfTotalDeaths`.
    -   `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`.
    -   `HeavyDrinkingAdults` y `BingeDrinkingIntensityAdults`.
    -   `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

ggstatsplot::ggcorrmat(
  data = data_overall,
  type = 'np',           ## Non-parametric Spearman correlation
  output = 'dataframe'
) 
```
:::
:::

### 03h - Explorar modelos de datos para las correlaciones estadísticamente significativas

Se crearon modelos exploratorios para todos los pares de variables en las que se ha obtenido una correlación lineal estadística significativa, para cada uno de los *data.frame*.

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

Se identificaron correlaciones estadísticamente significativas en los siguientes pares de variables:

-   Correlación negativa entre `Population` y `AgeAdjustedDeathRate`
-   Correlación positiva entre:
    -   `Deaths` y `Population`
    -   `Deaths` y `PercentageOfTotalDeaths`
    -   `Population` y `PercentageOfTotalDeaths`
    -   `HeavyDrinkingAdults` y `AgeAdjustedDeathRate`
    -   `BingeDrinkingPrevalenceAdults` y `HeavyDrinkingAdults`
    -   `BingeDrinkingPrevalenceAdults` y `BingeDrinkingFrecuencyAdults`
    -   `BingeDrinkingPrevalenceAdults` y `BingeDrinkingIntensityAdults`
    -   `BingeDrinkingIntensityAdults` y `BingeDrinkingFrecuencyAdults`

##### `Population` y `AgeAdjustedDeathRate`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `AgeAdjustedDeathRate`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = AgeAdjustedDeathRate
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `Population`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `Deaths`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = Deaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `PercentageOfTotalDeaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `PercentageOfTotalDeaths` y `Deaths`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = PercentageOfTotalDeaths,
      y = Deaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `PercentageOfTotalDeaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `PercentageOfTotalDeaths`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = PercentageOfTotalDeaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `HeavyDrinkingAdults` y `AgeAdjustedDeathRate`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `HeavyDrinkingAdults` y `AgeAdjustedDeathRate`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = HeavyDrinkingAdults,
      y = AgeAdjustedDeathRate,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingPrevalenceAdults` y `HeavyDrinkingAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingPrevalenceAdults` y `HeavyDrinkingAdults`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = HeavyDrinkingAdults,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingPrevalenceAdults` y `BingeDrinkingFrecuencyAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingPrevalenceAdults` y `BingeDrinkingFrecuencyAdults`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingFrecuencyAdults,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingPrevalenceAdults` y `BingeDrinkingIntensityAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingPrevalenceAdults` y `BingeDrinkingIntensityAdults`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingIntensityAdults,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingIntensityAdults` y `BingeDrinkingFrecuencyAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingFrecuencyAdults` y `BingeDrinkingIntensityAdults`
data |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingIntensityAdults,
      y = BingeDrinkingFrecuencyAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

Se han encontrado las siguientes correlaciones estadísticamente significativas:

-   Una correlación negativa entre `Population` y `Deaths`.
-   Una correlación positiva entre:
    -   `Deaths` y `PercentageOfTotalDeaths`.
    -   `Deaths` y `BingeDrinkingIntensityAdults`.
    -   `Deaths` y `BingeDrinkingPrevalenceAdults`.
    -   `Population` y `AgeAdjustedDeathRate`.
    -   `Population` y `PercentageOfTotalDeaths`.
    -   `Population` y `BingeDrinkingFrecuencyAdults`.
    -   `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`.
    -   `AgeAdjustedDeathRate` y `BingeDrinkingFrecuencyAdults`.
    -   `AgeAdjustedDeathRate` y `BingeDrinkingIntensityAdults`.
    -   `AgeAdjustedDeathRate` y `BingeDrinkingPrevalenceAdults`.
    -   `PercentageOfTotalDeaths` y `BingeDrinkingIntensityAdults`.
    -   `PercentageOfTotalDeaths` y `BingeDrinkingPrevalenceAdults`.
    -   `HeavyDrinkingAdults` y `BingeDrinkingIntensityAdults`.
    -   `HeavyDrinkingAdults` y `BingeDrinkingPrevalenceAdults`.
    -   `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`.
    -   `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults`.

##### `Population` y `Deaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `Deaths`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = Deaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `PercentageOfTotalDeaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `PercentageOfTotalDeaths` y `Deaths`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = PercentageOfTotalDeaths,
      y = Deaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `BingeDrinkingIntensityAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingIntensityAdults` y `Deaths`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingIntensityAdults,
      y = Deaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `BingeDrinkingPrevalenceAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingPrevalenceAdults` y `Deaths`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingPrevalenceAdults,
      y = Deaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `AgeAdjustedDeathRate`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `AgeAdjustedDeathRate`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = AgeAdjustedDeathRate
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `PercentageOfTotalDeaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `PercentageOfTotalDeaths`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = PercentageOfTotalDeaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `BingeDrinkingFrecuencyAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `BingeDrinkingFrecuencyAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = BingeDrinkingFrecuencyAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = AgeAdjustedDeathRate,
      y = HeavyDrinkingAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `AgeAdjustedDeathRate` y `BingeDrinkingFrecuencyAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `AgeAdjustedDeathRate` y `BingeDrinkingFrecuencyAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = AgeAdjustedDeathRate,
      y = BingeDrinkingFrecuencyAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `AgeAdjustedDeathRate` y `BingeDrinkingIntensityAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `AgeAdjustedDeathRate` y `BingeDrinkingIntensityAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = AgeAdjustedDeathRate,
      y = BingeDrinkingIntensityAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `AgeAdjustedDeathRate` y `BingeDrinkingPrevalenceAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `AgeAdjustedDeathRate` y `BingeDrinkingPrevalenceAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = AgeAdjustedDeathRate,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `PercentageOfTotalDeaths` y `BingeDrinkingIntensityAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `HeavyDrinkingAdults` y `AgeAdjustedDeathRate`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = HeavyDrinkingAdults,
      y = AgeAdjustedDeathRate,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `PercentageOfTotalDeaths` y `BingeDrinkingPrevalenceAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `PercentageOfTotalDeaths` y `BingeDrinkingPrevalenceAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = PercentageOfTotalDeaths,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `HeavyDrinkingAdults` y `BingeDrinkingIntensityAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingPrevalenceAdults` y `HeavyDrinkingAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = HeavyDrinkingAdults,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `HeavyDrinkingAdults` y `BingeDrinkingPrevalenceAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingPrevalenceAdults` y `BingeDrinkingFrecuencyAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = HeavyDrinkingAdults,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingFrecuencyAdults,
      y = BingeDrinkingPrevalenceAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingIntensityAdults` y `BingeDrinkingFrecuencyAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingFrecuencyAdults` y `BingeDrinkingIntensityAdults`
data_gender |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingIntensityAdults,
      y = BingeDrinkingFrecuencyAdults,
      color = Sex
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

Se han encontrado las siguientes correlaciones estadísticamente significativas:

-   Una correlación negativa entre:
    -   `Deaths` y `HeavyDrinkingAdults`.
    -   `Population` y `AgeAdjustedDeathRate`.
    -   `Population` y `HeavyDrinkingAdults`.
-   Una correlación positiva entre:
    -   `Deaths` y `Population`.
    -   `Deaths` y `PercentageOfTotalDeaths`.
    -   `Population` y `PercentageOfTotalDeaths`.
    -   `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`.
    -   `PercentageOfTotalDeaths` y `HeavyDrinkingAdults`.
    -   `HeavyDrinkingAdults` y `BingeDrinkingIntensityAdults`.
    -   `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`.

##### `Deaths` y `HeavyDrinkingAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Deaths` y `HeavyDrinkingAdults`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Deaths,
      y = HeavyDrinkingAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `Population`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Deaths` y `Population`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Deaths,
      y = Population
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Deaths` y `PercentageOfTotalDeaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Deaths` y `PercentageOfTotalDeaths`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Deaths,
      y = PercentageOfTotalDeaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `AgeAdjustedDeathRate`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `AgeAdjustedDeathRate`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = AgeAdjustedDeathRate
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `HeavyDrinkingAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `HeavyDrinkingAdults`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = HeavyDrinkingAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `Population` y `PercentageOfTotalDeaths`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Population` y `PercentageOfTotalDeaths`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = Population,
      y = PercentageOfTotalDeaths
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `PercentageOfTotalDeaths` y `HeavyDrinkingAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `PercentageOfTotalDeaths` y `HeavyDrinkingAdults`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = PercentageOfTotalDeaths,
      y = HeavyDrinkingAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `HeavyDrinkingAdults` y `BingeDrinkingIntensityAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `Deaths` y `HeavyDrinkingAdults`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = HeavyDrinkingAdults,
      y = BingeDrinkingIntensityAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `BingeDrinkingFrecuencyAdults` y `BingeDrinkingPrevalenceAdults`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = BingeDrinkingFrecuencyAdults,
      y = BingeDrinkingPrevalenceAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```

##### `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

#### `AgeAdjustedDeathRate` y `HeavyDrinkingAdults`
data_overall |> 
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = AgeAdjustedDeathRate,
      y = HeavyDrinkingAdults
    )
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth() 
```
:::

### 03i - Análisis de valores faltantes (`NA`'s) y outliers

Se ejecutaron las siguientes acciones

-   03ia - Análisis de valores faltantes `NA`s
-   03ib - Exploración de Outliers

::: {.callout-caution title="Funciones de R utilizadas en el análisis de datos faltantes (`NA`'s)" collapse="true"}
Para la evaluación de datos faltantes (`NA`'s) se evaluaron las siguientes dimensiones:

| Dimensión                                                               | Función                                                       | Resultado evaluación                                                                                                                                                                                      |
|-------------------------------------------------------------------------|---------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Existencia de algún valor valor faltante `NA` (sí/no)                   | `naniar::any_na()`                                            | `TRUE`                                                                                                                                                                                                    |
| Número total de `NA`s                                                   | `naniar::n_miss()`                                            | $69$                                                                                                                                                                                                      |
| Variables afectadas por la presencia de `NA`s                           | `is.na() |> colSums()`                                        | `Sex`, `Deaths`, `Population`, `AgeAdjustedDeathRate`, `PercentageOfTotalDeaths`, `HeavyDrinkingAdults`, `BingeDrinkingFrecuencyAdults`, `BingeDrinkingIntensityAdults` y `BingeDrinkingPrevalenceAdults` |
| Número de `NA` por variable (n y %)                                     | `naniar::miss_var_summary()`<br> `naniar::miss_var_table()`   | Número: Rango $0-12$<br>Porcentaje: Rango $0-7.36\%$                                                                                                                                                      |
| Número de `NA` por observación (n y %)                                  | `naniar::miss_case_summary()`<br> `naniar::miss_case_table()` | Número: Rango $0-9$<br>Porcentaje: Rango $0-90\%$                                                                                                                                                         |
| Ranking de variables más afectadas por `NA`'s                           | `naniar::gg_miss_var()`                                       | `Deaths`, `Population`, `PercentageOfTotalDeaths`, `AgeAdjustedDeathRate`                                                                                                                                 |
| Tipología de los valores faltantes (MAR, MNAR, MCAR)                    | `naniar::vis_miss()`                                          | Los valores faltantes se concentran en las últimas observaciones del dataset (MNAR)                                                                                                                       |
| Relación entre valores faltantes de distintas variables                 | `naniar::gg_miss_upset()`                                     | Existe una cierta tendencia a agrupar valores faltantes para ciertas variables: `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths`                                                |
| Relación entre valores faltantes y niveles de las variables categóricas | `naniar::gg_miss_fct()`                                       | Algunos estados concentran todos los valores faltantes. No hay influencia del sexo                                                                                                                        |
:::

::: {.callout-note title="1- Objeto `data`" collapse="true"}
#### Objeto `data`

::: {.callout-caution title="03ia - Análisis de valores faltantes `NA`s" collapse="true"}
##### 03ia - Análisis de valores faltantes `NA`'s

```{r eda - Explorar NAs y outliers}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Existencia de algún valor valor faltante `NA` (sí/no)
naniar::any_na(data)

## Número total de `NA`s 
naniar::n_miss(data)

## Variables afectadas por la presencia de `NA`s
data |> 
  is.na() |> 
  colSums() 

## Número de `NA` por variable (n y %) 
naniar::miss_var_summary(data)
naniar::miss_var_table(data)

## Número de `NA` por observación (n y %) 
naniar::miss_case_summary(data)
naniar::miss_case_table(data)

## Ranking de variables afectadas por `NA`s
naniar::gg_miss_var(data)

## Tipología de los valores faltantes (MAR, MNAR, MCAR)
naniar::vis_miss(data) + 
  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 80))

## Relación entre valores faltantes de distintas variables
naniar::gg_miss_upset(data)

## Relación entre valores faltantes y niveles de las variables categóricas
naniar::gg_miss_fct(data, fct = Sex)
naniar::gg_miss_fct(data, fct = State)
```

Hallazgos:

-   Los valores faltantes se concentran en las últimas observaciones del dataset , para estados concretos (*Missing not at random*, MNAR).
-   Existe una cierta tendencia a agrupar valores faltantes para ciertas variables: `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths`
-   Algunos estados concentran todos los valores faltantes. No hay influencia del sexo.
:::

::: {.callout-caution title="03ib - Exploración de Outliers" collapse="true"}
##### 03ib - Exploración de Outliers

Existe un número significativo de outliers en el *data.frame*. Eso deberá tenerse en cuenta para el análisis cluster.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data |> 
  dlookr::diagnose_outlier() |> 
  flextable::flextable()
```

###### `performance:: check_outliers()`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

performance::check_outliers(
  data$Deaths,
  method = 'zscore'
  ) |> 
  plot()

```

###### Visualize variables with a ratio of outliers greater than 5% `dlookr::plot_outlier()`

Ninguna variable tiene más de un 5% de outliers en sus valores.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Visualize variables with a ratio of outliers greater than 5%
data |> 
  dlookr::diagnose_outlier() |> 
  dplyr::filter(outliers_ratio > 5) |> 
  dplyr::select(variables) |> 
  dplyr::pull() 
```
:::
:::

::: {.callout-note title="2- Objeto `data_gender`" collapse="true"}
#### Objeto `data_gender`

::: {.callout-caution title="03ia - Análisis de valores faltantes `NA`s" collapse="true"}
##### 03ia - Análisis de valores faltantes `NA`'s

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Existencia de algún valor valor faltante `NA` (sí/no)
naniar::any_na(data_gender)

## Número total de `NA`s 
naniar::n_miss(data_gender)

## Variables afectadas por la presencia de `NA`s
data_gender |> 
  is.na() |> 
  colSums() 

## Número de `NA` por variable (n y %) 
naniar::miss_var_summary(data_gender)
naniar::miss_var_table(data_gender)

## Número de `NA` por observación (n y %) 
naniar::miss_case_summary(data_gender)
naniar::miss_case_table(data_gender)

## Ranking de variables afectadas por `NA`s
naniar::gg_miss_var(data_gender)

## Tipología de los valores faltantes (MAR, MNAR, MCAR)
naniar::vis_miss(data_gender) + 
  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 80))

## Relación entre valores faltantes de distintas variables
naniar::gg_miss_upset(data_gender)

## Relación entre valores faltantes y niveles de las variables categóricas
naniar::gg_miss_fct(data_gender, fct = Sex)
naniar::gg_miss_fct(data_gender, fct = State)
```

Hallazgos:

-   Los valores faltantes se concentran en las últimas observaciones del dataset , para estados concretos (*Missing not at random*, MNAR).
-   Existe una cierta tendencia a agrupar valores faltantes para ciertas variables: `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths`
-   Algunos estados concentran todos los valores faltantes. No hay influencia del sexo.
:::

::: {.callout-caution title="03ib - Exploración de Outliers" collapse="true"}
##### 03ib - Exploración de Outliers

Existe un número significativo de outliers en el *data.frame*. Eso deberá tenerse en cuenta para el análisis cluster.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data_gender |> 
  dlookr::diagnose_outlier() |> 
  flextable::flextable()
```

###### `performance:: check_outliers()`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

performance::check_outliers(
  data_gender$Deaths,
  method = 'zscore'
  ) |> 
  plot()

```

###### Visualize variables with a ratio of outliers greater than 5% `dlookr::plot_outlier()`

Ninguna variable tiene más de un 5% de outliers en sus valores.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Visualize variables with a ratio of outliers greater than 5%
data_gender |> 
  dlookr::diagnose_outlier() |> 
  dplyr::filter(outliers_ratio > 5) |> 
  dplyr::select(variables) |> 
  dplyr::pull() 
```
:::
:::

::: {.callout-note title="3- Objeto `data_overall`" collapse="true"}
#### Objeto `data_overall`

::: {.callout-caution title="03ia - Análisis de valores faltantes `NA`s" collapse="true"}
##### 03ia - Análisis de valores faltantes `NA`'s

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Existencia de algún valor valor faltante `NA` (sí/no)
naniar::any_na(data_overall)

## Número total de `NA`s 
naniar::n_miss(data_overall)

## Variables afectadas por la presencia de `NA`s
data_overall |> 
  is.na() |> 
  colSums() 

## Número de `NA` por variable (n y %) 
naniar::miss_var_summary(data_overall)
naniar::miss_var_table(data_overall)

## Número de `NA` por observación (n y %) 
naniar::miss_case_summary(data_overall)
naniar::miss_case_table(data_overall)

## Ranking de variables afectadas por `NA`s
naniar::gg_miss_var(data_overall)

## Tipología de los valores faltantes (MAR, MNAR, MCAR)
naniar::vis_miss(data_overall) + 
  ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 80))

## Relación entre valores faltantes de distintas variables
naniar::gg_miss_upset(data_overall)

## Relación entre valores faltantes y niveles de las variables categóricas
naniar::gg_miss_fct(data_overall, fct = State)
```

Hallazgos:

-   Los valores faltantes se concentran en las últimas observaciones del dataset , para estados concretos (*Missing not at random*, MNAR).
-   Existe una cierta tendencia a agrupar valores faltantes para ciertas variables: `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths`
-   Algunos estados concentran todos los valores faltantes. No hay influencia del sexo.
:::

::: {.callout-caution title="03ib - Exploración de Outliers" collapse="true"}
##### 03ib - Exploración de Outliers

Existe un número significativo de outliers en el *data.frame*. Eso deberá tenerse en cuenta para el análisis cluster.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data_overall |> 
  dlookr::diagnose_outlier() |> 
  flextable::flextable()
```

###### `performance:: check_outliers()`

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

performance::check_outliers(
  data_overall$Deaths,
  method = 'zscore'
  ) |> 
  plot()

```

###### Visualize variables with a ratio of outliers greater than 5% `dlookr::plot_outlier()`

Ninguna variable tiene más de un 5% de outliers en sus valores.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Visualize variables with a ratio of outliers greater than 5%
data_overall |> 
  dlookr::diagnose_outlier() |> 
  dplyr::filter(outliers_ratio > 5) |> 
  dplyr::select(variables) |> 
  dplyr::pull() 
```
:::
:::

### Salidas del subproceso

-   Análisis de variables categóricas
-   Análisis de variables numéricas
-   Análisis de distribución de variables aleatorias
-   Estudio de normalidad de las variables numéricas
-   Comparación de los valores de las variables numéricas según niveles de las variables categóricas
-   Estudio de correlación lineal entre variables numéricas
-   Exploración de modelos de datos para correlaciones estadísticamente significativas
-   Análisis de datos faltantes
-   Análisis de datos extremos (*outliers*)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Limpieza de los objetos temporales del subproceso
rm(list = c(
  'data',
  'data_gender',
  'data_overall',
  'tmpTbl_data',
  'tmpTbl_data_gender',
  'tmpTbl_data_overall',
  'colormatrix_data',
  'colormatrix_data_gender',
  'colormatrix_data_overall',
  'flattenCorrMatrix'
  )
)
```

## Transformación

Se realizaron las siguientes tareas de transformación:

-   4a - Tratamiento de valores faltantes
-   4b - Tratamiento de valores atípicos (*outliers*)

### 4a - Tratamiento de valores faltantes

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Configuración
## Establecer una semilla aleatoria para el análisis
set.seed(2024)
## Impedir que los números grandes se muestren con notación científica
options(scipen = 999)

# Ingesta
data <- readRDS(
  here::here('data', 'lab', 'data.rds')
  ) 
data_overall <- readRDS(
  here::here('data', 'lab', 'data_overall.rds')
  ) 
data_gender <- readRDS(
  here::here('data', 'lab', 'data_gender.rds')
  ) 
```

Se creo un dataset de trabajo sin datos faltantes, una para cada dataset de interés.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_lab         <- na.omit(data)
data_gender_lab  <- na.omit(data_gender)
data_overall_lab <- na.omit(data_overall)

## Limpieza de datos intermedios
rm(list = c(
  'data',
  'data_gender',
  'data_overall'
  )
  )
```

Tras la omisión de `NA`'s, los dos datasets `data_lab` y `data_gender_lab` son idénticos, y sólo difieren en los atributos que se han ido creando durante el proceso de limpieza. Por tanto, podemos trabajar exclusivamente con `data_lab` (para datos por sexos) y `data_overall` (para datos globales):

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

arsenal::comparedf(data_lab, data_gender_lab)
```

### 4b - Tratamiento de valores atípicos (*outliers*)

Las observaciones con valores extremos para las variables estudiadas podrían ser muy interesantes para nuestro análisis, porque pueden contener información sobre los factores de riesgo más asociados a la mortalidad por alcohol.

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
En el subproceso de EDA se identificaron problemas de valores atípicos en cinco variables del objeto `data`: `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths`).

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Diagnóstico de outliers
dlookr::diagnose_outlier(data_lab)
```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = Sex,
  y = HeavyDrinkingAdults,
  fill = Sex
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()


data_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = Sex,
  y = BingeDrinkingFrecuencyAdults,
  fill = Sex
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()

data_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = Sex,
  y = BingeDrinkingIntensityAdults,
  fill = Sex
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()

data_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = Sex,
  y = BingeDrinkingPrevalenceAdults,
  fill = Sex
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()
```

Se crearon dos conjuntos de datos para poder realizar el análisis de agrupación con y sin datos atípicos.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Valores extremos por variable
outliersDeaths <- boxplot.stats(data_lab$Deaths)$out
outliersPopulation <- boxplot.stats(data_lab$Population)$out
outliersAgeAdjustedDeathRate <- boxplot.stats(data_lab$AgeAdjustedDeathRate)$out
outliersPercentageOfTotalDeaths <- boxplot.stats(data_lab$PercentageOfTotalDeaths)$out
outliersHeavyDrinkingAdults <- boxplot.stats(data_lab$HeavyDrinkingAdults)$out

# Índice de los outliers
idxOutliersDeaths <- 
  which(data_lab$Deaths %in% outliersDeaths)
idxOutliersPopulation <- 
  which(data_lab$Population %in% outliersPopulation)
idxOutliersAgeAdjustedDeathRate <- 
  which(data_lab$AgeAdjustedDeathRate %in% outliersAgeAdjustedDeathRate)
idxOutlierPercentageOfTotalDeaths <- 
  which(data_lab$PercentageOfTotalDeaths %in% outliersPercentageOfTotalDeaths)
idxOutlierHeavyDrinkingAdults <- 
  which(data_lab$HeavyDrinkingAdults %in% outliersHeavyDrinkingAdults)

# Vector de ayuda para identificar outliers
idxOutlierAll <- c(
  idxOutliersDeaths, 
  idxOutlierHeavyDrinkingAdults, 
  idxOutlierPercentageOfTotalDeaths, 
  idxOutliersAgeAdjustedDeathRate, 
  idxOutliersPopulation
  ) |> 
  unique() |> 
  sort()

esOutlier <- 1:nrow(data_lab) %in% idxOutlierAll

# Dataset sin outliers
data_outliers_lab <- data_lab[esOutlier,]
data_inliers_lab <- data_lab[!esOutlier,]

data_inliers_lab$Sex <- as.factor(data_inliers_lab$Sex)
data_inliers_lab$Sex <- as.factor(data_inliers_lab$Sex)
```
:::

::: {.callout-note title="2- Objeto `data_overall`" collapse="true"}
En el subproceso de EDA se identificaron problemas de valores atípicos en cinco variables del objeto `data_overall`: `Deaths`, `Population`, `AgeAdjustedDeathRate` y `PercentageOfTotalDeaths` y `BingeDrinkingFrecuencyAdults`).

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Diagnóstico de outliers
dlookr::diagnose_outlier(data_overall_lab)
```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

data_overall_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = State,
  y = Deaths
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()


data_overall_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = State,
  y = Population
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()

data_overall_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = State,
  y = AgeAdjustedDeathRate
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()

data_overall_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = State,
  y = PercentageOfTotalDeaths
  )
) + 
  ggplot2::geom_boxplot() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()

data_overall_lab |> ggplot2::ggplot(
  ggplot2::aes(
  x = State,
  y = BingeDrinkingFrecuencyAdults
  )
) + 
  ggplot2::geom_point() +
  ggside::geom_ysidedensity() +
  ggplot2::theme_bw()
```

Se crearon dos conjuntos de datos para poder realizar el análisis de agrupación con y sin datos atípicos.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
 
# Valores extremos por variable
outliersDeaths <- boxplot.stats(data_overall_lab$Deaths)$out
outliersPopulation <- boxplot.stats(data_overall_lab$Population)$out
outliersAgeAdjustedDeathRate <- boxplot.stats(data_overall_lab$AgeAdjustedDeathRate)$out
outliersPercentageOfTotalDeaths <-
  boxplot.stats(data_overall_lab$PercentageOfTotalDeaths)$out
outliersBingeDrinkingFrecuencyAdults <-
  boxplot.stats(data_overall_lab$HBingeDrinkingFrecuencyAdults)$out

# Índice de los outliers
idxOutliersDeaths <- 
  which(data_overall_lab$Deaths %in% outliersDeaths)
idxOutliersPopulation <- 
  which(data_overall_lab$Population %in% outliersPopulation)
idxOutliersAgeAdjustedDeathRate <- 
  which(data_overall_lab$AgeAdjustedDeathRate %in% outliersAgeAdjustedDeathRate)
idxOutlierPercentageOfTotalDeaths <- 
  which(data_overall_lab$PercentageOfTotalDeaths %in% outliersPercentageOfTotalDeaths)
idxOutlierBingeDrinkingFrecuencyAdults <- 
  which(data_overall_lab$BingeDrinkingFrecuencyAdults %in% outliersBingeDrinkingFrecuencyAdults)

# Vector de ayuda para identificar outliers
idxOutlierAll <- c(
  idxOutliersDeaths, 
  idxOutliersPopulation,
  idxOutliersAgeAdjustedDeathRate, 
  idxOutlierPercentageOfTotalDeaths, 
  idxOutlierBingeDrinkingFrecuencyAdults 
  ) |> 
  unique() |> 
  sort()
esOutlier <- 1:nrow(data_overall_lab) %in% idxOutlierAll

# data_overallset sin outliers
data_overall_outliers_lab <- data_overall_lab[esOutlier,]
data_overall_inliers_lab <- data_overall_lab[!esOutlier,]
```

```{r}
# Limpieza de objetos intermedios de la tarea
rm(list = c(
  'esOutlier',
  'idxOutlierAll',
  'idxOutlierBingeDrinkingFrecuencyAdults',
  'idxOutlierHeavyDrinkingAdults',
  'idxOutlierPercentageOfTotalDeaths',
  'idxOutliersAgeAdjustedDeathRate',
  'idxOutliersDeaths',
  'idxOutliersPopulation',
  'outliersAgeAdjustedDeathRate',
  'outliersBingeDrinkingFrecuencyAdults',
  'outliersDeaths',
  'outliersHeavyDrinkingAdults',
  'outliersPercentageOfTotalDeaths',
  'outliersPopulation'
))
```
:::

### Salidas del subproceso

Se crearon los siguientes objetos, diferenciados entre sí por la presencia o ausencia de tres características: datos estratificados por sexo, Inliers y Outliers:

| Objeto                      | Datos por sexo | Inliers | Outliers |
|-----------------------------|----------------|---------|----------|
| `data_lab`                  | Sí             | Sí      | Sí       |
| `data_inliers_lab`          | Sí             | Sí      | No       |
| `data_outliers_lab`         | Sí             | No      | Sí       |
| `data_overall_lab`          | No             | Sí      | Sí       |
| `data_overall_inliers_lab`  | No             | Sí      | No       |
| `data_overall_outliers_lab` | No             | No      | Sí       |

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Objeto `data_lab`
saveRDS(
  data_lab,
  here::here('data', 'lab', 'data_lab.rds')
  )
saveRDS(
  data_inliers_lab,
  here::here('data', 'lab', 'data_inliers_lab.rds')
  )
saveRDS(
  data_outliers_lab,
  here::here('data', 'lab', 'data_outliers_lab.rds')
  )

# Objeto `data_overall_lab`
saveRDS(
  data_overall_lab,
  here::here('data', 'lab', 'data_overall_lab.rds')
  )
saveRDS(
  data_overall_inliers_lab,
  here::here('data', 'lab', 'data_overall_inliers_lab.rds')
  )
saveRDS(
  data_overall_outliers_lab,
  here::here('data', 'lab', 'data_overall_outliers_lab.rds')
  )
```

## Análisis clúster no jerárquico ($k$-means)

Se llevó a cabo un conjunto de análisis cluster (5 en total), siguiendo la siguiente metodología

-   05fa - Selección de los datos adecuados para el análisis cluster
-   05fb - Estandarización de valores numéricos
-   05fc - Cálculo de la distancia entre observaciones
-   05fd - Análisis de tendencia de agrupación
-   05fe - Elección del método y la vinculación de grupos
-   05ff - Elección del número de grupos finales de forma arbitraria basados en ciertos estadísticos de agrupación.
-   05fg - Representación e interpretación de los resultados.
-   05fh - Evaluación de la importancia de las variables
-   05fi - Visualización de las agrupaciones cluster
-   05fj - Validación de la agrupación
-   05fk - Resumen de los resultados obtenidos

### 05fa - Selección de los datos adecuados para el análisis cluster

Durante la fase de análisis exploratorio se evidenció una marcada diferencia en la mortalidad relacionada con alcohol entre ambos sexos, por lo que se analizará el dataset `data_lab` para controlar el efecto de la variable `Sex`.

Además, se observaron problemas de valores atípicos en los distintos conjuntos de datos considerados para el análisis. Estas observaciones podrían ser muy interesantes para nuestro análisis, porque pueden contener información sobre los factores de riesgo más asociados a la mortalidad por alcohol.

-   `data_lab`: con todos los datos (incluyendo *outliers*), y
-   `data_inliers_lab`: con datos recortados (sin *outliers*).

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Ingesta
data_lab <- readRDS(here::here('data', 'lab', 'data_lab.rds')) 
data_inliers_lab  <- readRDS(here::here('data', 'lab', 'data_inliers_lab.rds'))
```

### 05fb - Estandarización de valores numéricos

Para impedir que las diferencias de magnitud entre las variables numéricas alterase la agrupación, se escalaron los valores de ambos datasets.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_std <- scale(data_lab[,-(1:2)])

## Datos recortados
data_inliers_std <- scale(data_inliers_lab[,-(1:2)])
```

### 05fc - Cálculo de la distancia entre observaciones

Se utilizó la función `stat::dist()` con los parámetros por defecto (distancia euclídea):

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_dist <- dist(data_std)

## Datos recortados
data_inliers_dist <- dist(data_inliers_std)
```

#### Visualización de la relación entre las variables estandarizadas

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| eval: false

## Datos totales
GGally::ggpairs(data_lab[2:10], ggplot2::aes(colour = Sex)) +
  ggplot2::ggtitle('Objeto data_lab', subtitle = 'Análisis de correlación')
```
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap
#| eval: false

# Datos recortados
GGally::ggpairs(data_inliers_lab[2:10], ggplot2::aes(colour = Sex)) +
  ggplot2::ggtitle('Objeto data_inliers_lab', subtitle = 'Análisis de correlación')
```
:::

### 05fd - Análisis de tendencia de agrupación

Valoramos en primer lugar si es pertinente realizar un análisis de agrupación de los datos. Para ello:

-   Analizamos visualmente los clústeres de datos con el análisis visual de tendencia (VAT)
-   Evaluamos la tendencia de agrupación con el estadístico de Hopkins.

#### Evaluación visual de tendencia (VAT)

Este mapa del calor reordena la matriz de tal manera que observaciones similares se localizan cerca. Visualmente, se observan entre tres y cinco grandes clusters, que son más evidentes cuando se eliminan los outliers.

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
```{r}
## Datos totales
factoextra::fviz_dist(
  data_dist,
  lab_size = .1,
  show_labels = FALSE
) + 
  ggplot2::ggtitle(
    label = "Evaluación visual de tendencia de agrupación (VAT)",
    subtitle = 'Datos completos (`data_lab`)' 
  )
```
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
factoextra::fviz_dist(
  data_inliers_dist,
  lab_size = .1,
  show_labels = FALSE
) + 
  ggplot2::ggtitle(
    label = "Evaluación visual de tendencia de agrupación (VAT)",
    subtitle = 'Datos sin outliers (`data_inliers_lab`)' 
  )

```
:::

#### Estadística de Hopkins

En ambos supuestos (datos totales y recortados), el valor es distinto de 0.5, por lo que suponemos que las distancias observadas entre el conjunto de datos aleatorio y el conjunto de datos real no se debe al azar, y, por tanto, existe tendencia de agrupación.

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
clustertend::hopkins(
  data_std,
  n = nrow(data_std) - 1
)

```
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
```{r}
## Datos recortados
clustertend::hopkins(
  data_inliers_std,
  n = nrow(data_inliers_std) - 1
)
```
:::

### 05fe - Elección del método y la vinculación de grupos

Se utilizó el método de agrupación por $k$-medias.

### 05ff - Elección del número de grupos finales de forma arbitraria basados en ciertos estadísticos de agrupación.

##### Según criterios de calidad interna

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
En el dataset completo, la mayoría de métodos sitúa el óptimo de clústeres entre 2 y 4.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
nb <- NbClust::NbClust(
  data = data_std,
  distance = 'euclidean',
  min.nc = 2,
  max.nc = 15,
  method = "kmeans",
  index = "all"
  )
```
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
En el dataset sin outliers, el número óptimo de clústeres está entre 2 y 3.

```{r}
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
nb_inliers <- NbClust::NbClust(
  data = data_inliers_std,
  distance = 'euclidean',
  min.nc = 2,
  max.nc = 15,
  method = "kmeans",
  index = "all"
  )

```
:::

#### Según criterios de estabilidad

Dado que no podemos encontrar un nivel de clústeres óptimo en base a los resultados, exploraremos las opciones más repetidas:

-   2, 3 y 4 clústeres para `data_lab`, y
-   2 y 3 clústeres para `data_inliers_lab`.

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_km2 <- kmeans(data_std, centers = 2)
data_km3 <- kmeans(data_std, centers = 3)
data_km4 <- kmeans(data_std, centers = 4)
```
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
data_inliers_km2 <- kmeans(data_inliers_std, centers = 2)
data_inliers_km3 <- kmeans(data_inliers_std, centers = 3)
```
:::

### 05fg - Representación e interpretación de los resultados.

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
#### Datos completos `data_lab`

Resultados de los modelos de agrupación para `data_lab`

-   Los modelos explican un porcentaje de la variabilidad total observada entre el $34.2\%$ y el $60.3\%$. El modelo con mejor explicación de los datos observados es el de $k=4$ grupos
-   Todos los modelos explorados son algo difíciles de interpretar, porque los outliers tienden a agruparse en uno de los grupos del modelo, y dificultan la comprensión de la lógica de la agrupación.

::: {.callout-caution title="1a- Agrupación $k = 2$" collapse="true"}
##### Agrupación $k = 2$

El resultado de la agrupación con 2 clústeres es el siguiente

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_km2
table(data_km2$cluster)

```

La agrupación con dos clústeres explica un 34.2% de la variabilidad total. Ambos clústeres tienen aproximadamente el mismo número de elementos.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
cl_kcca2 <- flexclust::as.kcca(data_km2, data_std)
flexclust::barplot(cl_kcca2)
```

-   Los dos clústeres se diferencian entre sí esencialmente por los valores del área de interés `Alcohol` del CDI: valores elevados frente a valores bajos

Podemos explorar cómo se comporta cada cluster variable a variable con el siguiente gráfico

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

flexclust::barplot(cl_kcca2, bycluster = FALSE)
```

El resultado explica sólo un tercio de la variabilidad total, por lo que no es el ideal.
:::

::: {.callout-caution title="1b- Agrupación $k = 3$" collapse="true"}
##### Agrupación $k = 3$

La agrupación con tres clústeres explica un 53.9% de la variabilidad total. Los clústeres están muy desequilibrados, con uno de ellos con 3 elementos (los valores *outliers*)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_km3
table(data_km3$cluster)

```

La presencia del grupo con los outliers (cluster 1) dificulta la interpretación visual de los otros dos grupos, tanto en el gráfico global como por variables

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
cl_kcca3 <- flexclust::as.kcca(data_km3, data_std)
flexclust::barplot(cl_kcca3)

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

flexclust::barplot(cl_kcca3, bycluster = FALSE)

```

El resultado está genera una agrupación muy desbalanceada, por lo que tampoco parece el modelo óptimo.
:::

::: {.callout-caution title="1c- Agrupación $k = 4$" collapse="true"}
##### Agrupación $k = 4$

La agrupación con cuatro clústeres explica un 60.3% de la variabilidad total. De nuevo, una de las clases tiene muy pocos elementos (outliers)

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
data_km4
table(data_km4$cluster)

```

El clúster que contiene los outliers también dificulta la interpretación de los grupos, aunque se intuye que se diferencian los siguientes cuatro grupos de estados en relación con los indicadores:

-   Indicadores con valores bajos
-   Indicadores con valores altos
-   Indicadores con valores bajos en general, pero con valores muy altos en el número de adultos grandes bebedores (`HeavyDrinkingAdults`)
-   *Outliers*

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
cl_kcca4 <- flexclust::as.kcca(data_km4, data_std)
flexclust::barplot(cl_kcca4)

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

flexclust::barplot(cl_kcca4, bycluster = FALSE)
```
:::
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
#### Datos recortados `data_inliers_lab`

Resultados de los modelos de agrupación para `data_inliers_lab`

-   Los modelos explican un porcentaje de la variabilidad total observada entre el $38.32\%$ y el $54\%$. El modelo con mejor explicación de los datos observados es el de $k=3$ grupos
-   Los modelos con datos recortados explican un menor porcentaje de la variabilidad que los de datos completos; los outliers una capturan parte considerable de la información, y deben estudiarse con detalle.

::: {.callout-caution title="1a- Agrupación $k = 2$" collapse="true"}
##### Agrupación $k = 2$

El resultado de la agrupación con 2 clústeres es el siguiente

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
data_inliers_km2
table(data_inliers_km2$cluster)

```

La agrupación con dos clústeres explica un 38.32% de la variabilidad total. El primer clúster tiene un poco más de elementos que el segundo.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
cl_inliers_kcca2 <- flexclust::as.kcca(data_inliers_km2, data_inliers_std)
flexclust::barplot(cl_inliers_kcca2)
```

-   Los dos clústeres se diferencian entre sí por los valores del área de interés `Alcohol` del CDI: valores elevados frente a valores bajos

Podemos explorar cómo se comporta cada cluster variable a variable con el siguiente gráfico

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

flexclust::barplot(cl_inliers_kcca2, bycluster = FALSE)

```

El resultado explica un porcentaje muy pequeño de la variabilidad total, por lo que descartamos este modelo.
:::

::: {.callout-caution title="1b- Agrupación $k = 3$" collapse="true"}
##### Agrupación $k = 3$

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
data_inliers_km3
table(data_inliers_km3$cluster)

```

La agrupación con dos clústeres explica un 54% de la variabilidad total. El primer cluster tiene más elementos que los otros dos juntos.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap


## Datos totales
cl_inliers_kcca3 <- flexclust::as.kcca(data_inliers_km3, data_inliers_std)
flexclust::barplot(cl_inliers_kcca3)
```

-   El primer cluster agrupa estados con indicadores con bajores bajos para todas las variables.
-   El segundo incluye aquellos estados con indicadores por encima de la media, excepto el número de adultos grandes bebedores, pero en los que la tasa de muerte ajustada por edad está por debajo de la media
-   El tercero agrupa a los estados con indicadores por encima de la media, incluido el porcentaje de adultos grandes bebedores, y en el que la tasa de muerte también es alta.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

flexclust::barplot(cl_inliers_kcca3, bycluster = FALSE)

```
:::
:::

### 05fh - Evaluación de la importancia de las variables

::: {.callout-note title="1- Objeto `data_lab`" collapse="true"}
Los resultados de la evaluación de la importancia de las variables para los modelos para datos completos fueron los siguientes:

-   En los modelos de 2 y 3 clústeres para datos completos, las variables más importantes para establecer la agrupación fueron las relacionadas con las características de las borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`)
-   Para el modelo con 4 clústeres, la variable más importante con diferencia fue la de grandes bebedores (`HeavyDrinkingAdults`), seguida de las tres variables relacionadas con borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`)

::: {.callout-caution title="1a- Agrupación k = 2" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
importance <- FeatureImpCluster::FeatureImpCluster(
  cl_kcca2, 
  data.table::as.data.table(data_std)
  )
flexclust::plot(importance)
```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
importance_inliers <- FeatureImpCluster::FeatureImpCluster(
  cl_inliers_kcca2, 
  data.table::as.data.table(data_inliers_std))
flexclust::plot(importance_inliers)
```

En el modelo de 2 clústeres para datos completos, las variables más importantes para establecer la agrupación fueron las relacionadas con las características de las borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`).
:::

::: {.callout-caution title="1b- Agrupación k = 3" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
importance <- FeatureImpCluster::FeatureImpCluster(
  cl_kcca3, 
  data.table::as.data.table(data_std)
  )
flexclust::plot(importance)

## Datos recortados
importance_inliers <- FeatureImpCluster::FeatureImpCluster(
  cl_inliers_kcca3, 
  data.table::as.data.table(data_inliers_std))
flexclust::plot(importance_inliers)
```

En el modelo de 3 clústeres para datos completos, las variables más importantes para establecer la agrupación fueron las relacionadas con las características de las borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`).
:::

::: {.callout-caution title="1c- Agrupación k = 4" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
importance <- FeatureImpCluster::FeatureImpCluster(
  cl_kcca4, 
  data.table::as.data.table(data_std)
  )
flexclust::plot(importance)

```

En el modelo con 4 clústeres, la variable más importante con diferencia fue la de grandes bebedores (`HeavyDrinkingAdults`), seguida de las tres variables relacionadas con borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`)
:::
:::

::: {.callout-note title="2- Objeto `data_inliers_lab`" collapse="true"}
Los resultados de la evaluación de la importancia de las variables para los modelos para datos recortados fueron los siguientes:

-   En el modelo de 2 clústeres para datos recortados, las variables más importantes para establecer la agrupación fueron las relacionadas con las características de las borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`)
-   Para el modelo con 3 clústeres, las variables más importantes para establecer la agrupación fueron las relacionadas el número de muertes relacionadas con alcohol (`Deaths` y `PercentageOfTotalDeaths`), seguido de la prevalencia de borracheras (`BingeDrinkingPrevalenceAdults`).

::: {.callout-caution title="1a- Agrupación k = 2" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
importance_inliers <- FeatureImpCluster::FeatureImpCluster(
  cl_inliers_kcca2, 
  data.table::as.data.table(data_inliers_std))
flexclust::plot(importance_inliers)
```

En el modelo de 2 clústeres para datos recortados, las variables más importantes para establecer la agrupación fueron las relacionadas con las características de las borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`).
:::

::: {.callout-caution title="1b- Agrupación k = 3" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
importance_inliers <- FeatureImpCluster::FeatureImpCluster(
  cl_inliers_kcca3, 
  data.table::as.data.table(data_inliers_std))
flexclust::plot(importance_inliers)
```

En el modelo de 3 clústeres para datos recortados, las variables más importantes para establecer la agrupación fueron las relacionadas el número de muertes relacionadas con alcohol (`Deaths` y `PercentageOfTotalDeaths`), seguido de la prevalencia de borracheras (`BingeDrinkingPrevalenceAdults`).
:::
:::

### 05fi - Visualización de las agrupaciones cluster

::: {.callout-caution title="1a- Modelos $k = 2$" collapse="true"}
#### Modelos con $k = 2$

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
factoextra::fviz_cluster(
  data_km2, 
  data_std,
  labelsize = 5,
  main = "k=2 grupos, datos completos",
  geom = "point"
) +
  ggrepel::geom_text_repel(
    label = paste(
      data_lab$State, 
      data_lab$AgeAdjustedDeathRate, 
      sep = "_"),
    size = 1.5)


```

El modelo de 2 clústeres en los datos completos está fuertemente influenciado por los outliers, y crea unos clústers con poco sentido.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
factoextra::fviz_cluster(
  data_inliers_km2, 
  data_inliers_std,
  labelsize = 5,
  main = "k=2 grupos, datos recortados (sin outliers)",
  geom = "point"
) +
  ggrepel::geom_text_repel(
    label = paste(
      data_inliers_lab$State, 
      data_inliers_lab$AgeAdjustedDeathRate, 
      sep = "_"),
    size = 1.5)


```

Al eliminar los outliers, el modelo agrupa los datos en dos grandes bloques, sin solapamientos
:::

::: {.callout-caution title="Modelos con $k=3$" collapse="true"}
#### Modelos con $k=3$

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
factoextra::fviz_cluster(
  data_km3, 
  data_std,
  labelsize = 5,
  main = "k=3 grupos (datos completos)",
  geom = "point"
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_lab$State, 
      data_lab$AgeAdjustedDeathRate, 
      sep = "_"),
size = 1.5)


```

El modelo de tres clústeres para los datos completos separa un grupo con los outliers, y otros dos grupos dentro del resto de los datos.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos recortados
factoextra::fviz_cluster(
  data_inliers_km3, 
  data_inliers_std,
  labelsize = 5,
  main = "k=3 grupos, datos recortados (sin outliers)",
  geom = "point"
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_inliers_lab$State, 
      data_inliers_lab$AgeAdjustedDeathRate, 
      sep = "_"),
    size = 1.5)
```

Al eliminar los outliers, el modelo de tres clústeres es capaz de separar tres grupos de datos con una cierta coherencia visual.
:::

::: {.callout-caution title="Modelos con $k=4$" collapse="true"}
#### Modelo con $k=4$

El modelo de cuatro clústeres para los datos completos separa un grupo con los outliers, y dos de los grupos presentan un alto grado de solapamiento en la representación bidimensional.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales
factoextra::fviz_cluster(
  data_km4, 
  data_std,
  labelsize = 5,
  main = "k=4 grupos (datos completos)",
  geom = "point"
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_lab$State, 
      data_lab$AgeAdjustedDeathRate, 
      sep = "_"),
    size = 1.5)

```

Al representarlo en tres dimensiones, se observa que el solapamiento es menor. Por ejemplo, eligiendo las tres variables con mayor importancia para la agrupación del modelo $k = 4$, se puede obtener este gráfico interactivo:

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

df <- data_lab[1:10]
df$cluster <- factor(data_km4$cluster)

p <- plotly::plot_ly(
  df, 
  x = ~HeavyDrinkingAdults, 
  y = ~BingeDrinkingIntensityAdults,
  z = ~BingeDrinkingFrecuencyAdults, 
  mode = 'markers',
  color = ~cluster,
  hoverinfo = 'text',
  text = ~paste(
    '</br> State:', State,
    '</br> Sex:', Sex,
    '</br> Heavy Drinking Adults:', HeavyDrinkingAdults,
    '</br> Binge Drinking Intensity Adults:', BingeDrinkingIntensityAdults,
    '</br> Binge Drinking Frecuency Adults:', BingeDrinkingFrecuencyAdults
    )
  ) |> 
  plotly::add_markers(size = 1.5)

p
```
:::

### 05fj - Validación de la agrupación

#### Interna

Para la validación interna se utilizó el diagrama de silueta, con los siguientes resultados:

| Modelo | Datos      | Evaluación del gráfico de silueta                                                                                           |
|--------|------------|-----------------------------------------------------------------------------------------------------------------------------|
| $k=2$  | Completos  | Los dos clústeres tienen un rendimiento aceptable, aunque en el caso del cluster 1 es inferior a silueta media.             |
| $k=3$  | Completos  | Dos de los clústeres, tienen un rendimiento bueno, y el cluster más pequeño tiene un rendimiento muy inferior a lo esperado |
| $k=4$  | Completos  | Sólo los clústeres 2 y 3 superaron la silueta media; todos los demás quedaron por debajo de lo deseable.                    |
| $k=2$  | Recortados | Ambos dos clústeres tienen un rendimiento bueno, por encima de la silueta media                                             |
| $k=3$  | Recortados | Bastante equilibrado; todos los clústeres tienen un ancho de silueta medio igual al ancho de silueta medio.                 |

::: {.callout-caution title="1- Modelos $k=2$" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales

sk2 <- cluster::silhouette(
  data_km2$cluster, 
  data_dist) 
sk2_mean <- mean(sk2[,3])

# gráfico de silueta
flexclust::plot(
  sk2, 
  main = "Silhouette plot - Kmeans k=2 (datos completos)",
  cex.names = 0.8, 
  col = 1:2, 
  nmax = 100,
  do.clust.stat = TRUE)
abline(v = sk2_mean, col = "darkblue", lty = 3)

```

Para el modelo de $k=2$ con datos completos, los dos clústeres tienen un rendimiento aceptable, aunque en el caso del cluster 1 es inferior a silueta media.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales

sk2_inliers <- cluster::silhouette(
  data_inliers_km2$cluster, 
  data_inliers_dist) 
sk2_inliers_mean <- mean(sk2_inliers[,3])

# gráfico de silueta
flexclust::plot(
  sk2_inliers, 
  main = "Silhouette plot - Kmeans k=2 (datos recortados, sin outliers)",
  cex.names = 0.8, 
  col = 1:2, 
  nmax = 100,
  do.clust.stat = TRUE)
abline(v = sk2_inliers_mean, col = "darkblue", lty = 3)

```

Para el modelo de $k=2$ con datos recortados, ambos dos clústeres tienen un rendimiento bueno, por encima de la silueta media.
:::

::: {.callout-caution title="2- Modelos $k=3$" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales

sk3 <- cluster::silhouette(
  data_km3$cluster, 
  data_dist) 
sk3_mean <- mean(sk3[,3])

# gráfico de silueta
flexclust::plot(
  sk3, 
  main = "Silhouette plot - Kmeans k=3 (datos completos)",
  cex.names = 0.8, 
  col = 1:3, 
  nmax = 100,
  do.clust.stat = TRUE)
abline(v = sk3_mean, col = "darkblue", lty = 3)

```

Para el modelo de $k=3$ con datos completos, dos de los clústeres, tienen un rendimiento bueno, y el cluster más pequeño tiene un rendimiento muy inferior a lo esperado.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales

sk3_inliers <- cluster::silhouette(
  data_inliers_km3$cluster, 
  data_inliers_dist) 
sk3_inliers_mean <- mean(sk3_inliers[,3])

# gráfico de silueta
flexclust::plot(
  sk3_inliers, 
  main = "Silhouette plot - Kmeans k=3 (datos recortados, sin outliers)",
  cex.names = 0.8, 
  col = 1:3, 
  nmax = 100,
  do.clust.stat = TRUE)
abline(v = sk3_inliers_mean, col = "darkblue", lty = 3)

```

El modelo de $k=3$ con datos recortados es bastante equilibrado. Todos los clústeres tienen un ancho de silueta medio igual al ancho de silueta medio.
:::

::: {.callout-caution title="3- Modelos $k=4$" collapse="true"}
```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

## Datos totales

sk4 <- cluster::silhouette(
  data_km4$cluster, 
  data_dist) 
sk4_mean <- mean(sk4[,3])

# gráfico de silueta
flexclust::plot(
  sk4, 
  main = "Silhouette plot - Kmeans k=4 (datos completos)",
  cex.names = 0.8, 
  col = 1:4, 
  nmax = 100,
  do.clust.stat = TRUE)
abline(v = sk4_mean, col = "darkblue", lty = 3)

```

Para el modelo de $k=4$ con datos completos, sólo los clústeres 2 y 3 superaron la silueta media. Todos los demás quedaron por debajo de lo deseable.
:::

#### Externa

Se utilizaron las siguientes variables para la validación externa de las agrupaciones:

-   Para los modelos $k=2$, se utilizó la variable `Sex`.
-   Para los modelos $k=3$ se creó una variable instrumental que discretizaba en tres niveles (alta, media y baja) la tasa de mortalidad ajustada por edad `AgeAdjustedDeathRate`.
-   Para el modelo $k=4$ se creó una variable instrumental que discretizaba en cuatro niveles (muy alta, alta, baja y muy baja) la tasa de mortalidad ajustada por edad `AgeAdjustedDeathRate`.

Los dos modelos $k=2$, tanto para datos completos como recortados, se ajustan bastante bien a los niveles de la variable `Sex`, por lo que capturan una información similar a esta variable.

Los modelos $k=3$ y $k=4$ se relacionan mal con la variable instrumental creada discretizando los valores de la variable `AgeAdjustedDeathRate`, con lo que es razonable suponer que capturan información no contenida en estas variable.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Creación de las variables instrumentales para data_lab

# Variable instrumental de 2 niveles
data_lab$Sex <- as.factor(data_lab$Sex)

# Variable instrumental de 3 niveles
AgeAdjustedDeathRate_3levels_cuts <- recipes::discretize(
  data_lab$AgeAdjustedDeathRate,
  cuts = 3,
  labels = c('Mortalidad baja', 'Mortalidad media', 'Mortalidad alta'),
  prefix = ''
)
data_lab$AgeAdjustedDeathRate_fct3 <- 
  predict(AgeAdjustedDeathRate_3levels_cuts, data_lab$AgeAdjustedDeathRate) |> 
  as.factor()

# Variable instrumental de 4 niveles
AgeAdjustedDeathRate_4levels_cuts <- recipes::discretize(
  data_lab$AgeAdjustedDeathRate,
  cuts = 4,
  labels = c('Mortalidad muy baja', 'Mortalidad baja', 'Mortalidad alta',  'Mortalidad muy alta'),
  prefix = ''
)
data_lab$AgeAdjustedDeathRate_fct4 <- 
  predict(AgeAdjustedDeathRate_4levels_cuts, data_lab$AgeAdjustedDeathRate) |> 
  as.factor()

# Limpieza de variables temporales intermedias
rm(list = c(
  'AgeAdjustedDeathRate_3levels_cuts',
  'AgeAdjustedDeathRate_4levels_cuts'
))
```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Creación de las variables instrumentales para data_inliers_lab

# Variable instrumental de 2 niveles
data_inliers_lab$Sex <- as.factor(data_inliers_lab$Sex)

# Variable instrumental de 3 niveles
AgeAdjustedDeathRate_inliers_3levels_cuts <- recipes::discretize(
  data_inliers_lab$AgeAdjustedDeathRate,
  cuts = 3,
  labels = c('Mortalidad baja', 'Mortalidad media', 'Mortalidad alta'),
  prefix = ''
)
data_inliers_lab$AgeAdjustedDeathRate_fct3 <- 
  predict(
    AgeAdjustedDeathRate_inliers_3levels_cuts, 
    data_inliers_lab$AgeAdjustedDeathRate
    ) |> 
  as.factor()

# Limpieza de variables temporales intermedias
rm(list = c(
  'AgeAdjustedDeathRate__inliers_3levels_cuts'
))
```

::: {.callout-caution title="1 - Modelos con $k=2$" collapse="true"}
##### Modelos de 2 categorías

Ambos modelos cluster (tanto el de datos completos como el de datos recortados) separan perfectamente a las mujeres, y se equivocan con un pequeño porcentaje de los hombres ($6\%$ en datos completos, $7.3\%$ en datos recortados):

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Modelo de datos completos
table(
  data_lab$Sex,
  data_km2$cluster
  )

# Modelo de datos recortados
table(
  data_inliers_lab$Sex,
  data_inliers_km2$cluster
  )

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

factoextra::fviz_cluster(
  data_km2, 
  data_std,
  labelsize = 5,
  # main = "k=2 grupos",
  geom = "point",
  ggtheme = ggplot2::theme_bw()
  ) +
  ggplot2::ggtitle(
    label = 'Modelo con K=2 grupos',
    subtitle = 'Conjunto de datos completo (con outliers)'
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_lab$State,
      data_lab$Sex,
      sep = "_"),
    size = 1.5,
    colour = c("darkgreen", 'darkred')[data_lab$Sex])
```

El modelo con datos completos separa hombres y mujeres, sobreajustándose por los outliers detectados. Comete errores en la clasificación de tres observaciones de hombres, con valores anormalmente bajos de los indicadores relacionados con el alcohol.

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Modelo de datos completos
factoextra::fviz_cluster(
  data_inliers_km2, 
  data_inliers_std,
  labelsize = 5,
  # main = "k=2 grupos",
  geom = "point",
  ggtheme = ggplot2::theme_bw()
  ) +
  ggplot2::ggtitle(
    label = 'Modelo con K=2 grupos',
    subtitle = 'Conjunto de datos recortado (sin outliers)'
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_inliers_lab$State,
      data_inliers_lab$Sex,
      sep = "_"),
    size = 1.5,
    colour = c("darkred", 'darkblue')[data_inliers_lab$Sex])
```

El modelo con datos recortados separa hombres y mujeres, sin el sobreajuste impuesto por los outliers. Comete errores en la clasificación de tres observaciones de hombres, con valores anormalmente bajos de los indicadores relacionados con el alcohol.

Para ver el nivel de acuerdo de la agrupación con la clasificación, utilizamos el índice de Rand

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Datos completos
rand2 <- fpc::cluster.stats(
  d = data_dist,
  alt.clustering = as.numeric(data_lab$Sex),
  clustering = as.numeric(data_km2$cluster))

rand2$corrected.rand

# Datos recortados
rand2_inliers <- fpc::cluster.stats(
  d = data_inliers_dist,
  alt.clustering = as.numeric(data_inliers_lab$Sex),
  clustering = as.numeric(data_inliers_km2$cluster))

rand2_inliers$corrected.rand
```

Se observan unos valores elevados del estadístico de Rand, por lo que las observaciones incluidas en los clústeres son muy similares entre sí, tanto para los modelos de datos completos como para los de datos recortados.
:::

::: {.callout-caution title="2 - Modelos con $k=3$" collapse="true"}
##### Modelos de 3 categorías

Ambos modelos cluster (tanto el de datos completos como el de datos recortados) separan mal los tres niveles de la variable `AgeAdjustedDeathRate_fct3`, con un importante número de discordancias entre lo esperado y lo observado:

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Modelo de datos completos
table(
  data_lab$AgeAdjustedDeathRate_fct3,
  data_km3$cluster
  )

# Modelo de datos recortados
table(
  data_inliers_lab$AgeAdjustedDeathRate_fct3,
  data_inliers_km3$cluster
  )

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

factoextra::fviz_cluster(
  data_km3, 
  data_std,
  labelsize = 5,
  # main = "k=2 grupos",
  geom = "point",
  ggtheme = ggplot2::theme_bw()
  ) +
  ggplot2::ggtitle(
    label = 'Modelo con K=3 grupos',
    subtitle = 'Conjunto de datos completo (con outliers)'
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_lab$State,
      data_lab$AgeAdjustedDeathRate_fct3,
      sep = "_"),
    size = 1.5,
    colour = c("darkred", 'darkgreen', 'darkblue')[data_lab$AgeAdjustedDeathRate_fct3])
```

El modelo de datos completos identifica razonablemente bien a las observaciones con mortalidad alta, pero a costa de equivocarse mucho en las que tiene mortalidad media y baja..

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Modelo de datos completos
factoextra::fviz_cluster(
  data_inliers_km3, 
  data_inliers_std,
  labelsize = 5,
  geom = "point",
  ggtheme = ggplot2::theme_bw()
  ) +
  ggplot2::ggtitle(
    label = 'Modelo con K=3 grupos',
    subtitle = 'Conjunto de datos recortado (sin outliers)'
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_inliers_lab$State,
      data_inliers_lab$AgeAdjustedDeathRate_fct3,
      sep = "_"),
    size = 1.5,
    colour = c("darkred", 'darkgreen', 'darkblue')[data_inliers_lab$AgeAdjustedDeathRate_fct3])
```

El modelo con datos recortados no está separando adecuadamente los niveles de la variable `AgeAdjustedDeathRate_fct3`. La información separada en los clústeres tiene poco que ver con los niveles de esta variable categórica.

Para ver el nivel de acuerdo de la agrupación con la clasificación, utilizamos el índice de Rand

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Datos completos
rand3 <- fpc::cluster.stats(
  d = data_dist,
  alt.clustering = as.numeric(data_lab$AgeAdjustedDeathRate_fct3),
  clustering = as.numeric(data_km3$cluster))

rand3$corrected.rand

# Datos recortados
rand3_inliers <- fpc::cluster.stats(
  d = data_inliers_dist,
  alt.clustering = as.numeric(data_inliers_lab$AgeAdjustedDeathRate_fct3),
  clustering = as.numeric(data_inliers_km3$cluster))

rand3_inliers$corrected.rand
```

Se observan unos valores pobres del estadístico de Rand, por lo que las observaciones incluidas en los clústeres son muy distintas entre sí, tanto para los modelos de datos completos como para los de datos recortados. Los modelos no están separando la información contenida en la variable `AgeAdjustedDeathRate_fct3`.
:::

::: {.callout-caution title="3 - Modelo con $k=4$" collapse="true"}
##### Modelo de 4 categorías

Ambos modelos cluster (tanto el de datos completos como el de datos recortados) separan mal los tres niveles de la variable `AgeAdjustedDeathRate_fct3`, con un importante número de discordancias entre lo esperado y lo observado:

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Modelo de datos completos
table(
  data_lab$AgeAdjustedDeathRate_fct4,
  data_km4$cluster
  )

```

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

factoextra::fviz_cluster(
  data_km4, 
  data_std,
  labelsize = 5,
  geom = "point",
  ggtheme = ggplot2::theme_bw()
  ) +
  ggplot2::ggtitle(
    label = 'Modelo con K=4 grupos',
    subtitle = 'Conjunto de datos completo (con outliers)'
  ) +
  ggrepel::geom_text_repel(
    label = paste(
      data_lab$State,
      data_lab$AgeAdjustedDeathRate_fct4,
      sep = "_"),
    size = 1.5,
    colour = c(
      "darkred", 
      'darkgreen', 
      'darkblue', 
      'darkviolet'
      )[data_lab$AgeAdjustedDeathRate_fct4])
```

El modelo de datos completos para $k=4$ no identifica correctamente los niveles de la variable `AgeAdjustedDeathRate_fct4`.

Para ver el nivel de acuerdo de la agrupación con la clasificación, utilizamos el índice de Rand

```{r}
#| code-fold: true
#| info: false
#| warning: false
#| code-overflow: wrap

# Datos completos
rand4 <- fpc::cluster.stats(
  d = data_dist,
  alt.clustering = as.numeric(data_lab$AgeAdjustedDeathRate_fct4),
  clustering = as.numeric(data_km4$cluster))

rand4$corrected.rand

```

Se observa un valor bajo del estadístico de Rand, por lo que las observaciones incluidas en los clústeres son muy distintas entre sí. El modelo no están separando la información contenida en la variable `AgeAdjustedDeathRate_fct4`.
:::

### 05fk - Resumen de resultados obtenidos

-   En ambos supuestos (datos totales y recortados), se observó una tendencia a la agrupación, tanto estadísticamente (Hopkins $<0.5$), por lo que se justifica realizar un análisis de agrupación.
-   Para nuestro caso se utilizó un análisis cluster no jerárquico. En la fase de análisis exploratorio se detectó la presencia de *outliers*, por lo que se replicó el análisis con o sin los datos, para valorar la influencia de los mismos.
-   Se determinó que el número óptimo de clústeres se encontraba entre 2 y 4, para el conjunto de datos completo, y entre 2 y 3, para el modelo recortado sin *outliers*.
-   Se crearon cinco modelos de agrupación, utilizando el método $k$-means, 3 para los datos completos, y 2 para los datos recortados, para los valores óptimos de cluster identificados.
-   Respecto a la importancia de las variables para establecer la agrupación:
    -   En los modelos de 2 y 3 clústeres para datos completos, fueron las relacionadas con las características de las borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`)
    -   Para el modelo con 4 clústeres, fue la de grandes bebedores (`HeavyDrinkingAdults`), seguida de las tres variables relacionadas con borracheras (`BingeDrinkingIntensityAdults`, `BingeDrinkingPrevalenceAdults`, `BingeDrinkingFrecuencyAdults`)
-   Visualmente, los clústeres de los modelos son capaces de agrupar los datos sin solapamientos. El modelo de $k=4$ presenta solapamientos en la representación en 2-D, pero evidencia buena capacidad discriminatoria en los modelos 3-D.
-   Respecto a la evaluación de la validez de los modelos:
    -   En lo que concierne a la validez interna, los modelos con mejor resultado han sido los $K=2$ y $K=3$ para datos recortados.
    -   En lo tocante a validación externa:
        -   Los dos modelos $k=2$, tanto para datos completos como recortados, se ajustan bastante bien a los niveles de la variable `Sex`, por lo que capturan una información similar a esta variable.
        -   Los modelos $k=3$ y $k=4$ se relacionan mal con la variable instrumental creada discretizando los valores de la variable `AgeAdjustedDeathRate`, con lo que es razonable suponer que capturan información no contenida en estas variable.

### Salidas del subproceso

Se incorporaron los resultados de los modelos a los respectivos datasets, y se crearon dos nuevos objetos con la información del cluster:

-   `data_cluster`, incorporando los modelos $k=2$, $k=3$ y $k=4$ a los datos completos, y
-   `data_inliers_cluster`, incorporando los modelos $k=2$ y $k=3$ a los datos recortados

```{r}
#| code-fold: true
#| output: false
#| eval: false

## Añadimos la clasificación cluster a los datos de trabajo
data_lab$cluster2 <- data_km2$cluster
data_lab$cluster3 <- data_km3$cluster
data_lab$cluster4 <- data_km4$cluster

## Añadimos la clasificación cluster a los datos de trabajo (recortados)
data_inliers_lab$cluster2 <- data_inliers_km2$cluster
data_inliers_lab$cluster3 <- data_inliers_km3$cluster

## Grabamos los nuevos dtos
saveRDS(
  data_lab,
  file = here::here('data', 'lab', 'data_cluster.rds')
) 

saveRDS(
  data_inliers_lab,
  file = here::here('data', 'lab', 'data_inliers_cluster.rds')
) 

```
